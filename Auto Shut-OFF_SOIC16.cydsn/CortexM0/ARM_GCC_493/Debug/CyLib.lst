ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:.\Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:.\Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:.\Generated_Source\PSoC4/CyLib.c **** *
  11:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:.\Generated_Source\PSoC4/CyLib.c **** *
  46:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:.\Generated_Source\PSoC4/CyLib.c **** *
  49:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:.\Generated_Source\PSoC4/CyLib.c **** 
  84:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:.\Generated_Source\PSoC4/CyLib.c **** 
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:.\Generated_Source\PSoC4/CyLib.c **** *
  94:.\Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:.\Generated_Source\PSoC4/CyLib.c **** *
  96:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:.\Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:.\Generated_Source\PSoC4/CyLib.c **** *
 100:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:.\Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:.\Generated_Source\PSoC4/CyLib.c **** *
 103:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
 106:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 106 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 107:.\Generated_Source\PSoC4/CyLib.c **** 
 108:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:.\Generated_Source\PSoC4/CyLib.c **** 
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 121 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 30000340 		.word	1073938480
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 4


  51              	CySysClkImoStop:
  52              	.LFB1:
 122:.\Generated_Source\PSoC4/CyLib.c **** 
 123:.\Generated_Source\PSoC4/CyLib.c **** 
 124:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:.\Generated_Source\PSoC4/CyLib.c **** *
 128:.\Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:.\Generated_Source\PSoC4/CyLib.c **** *
 130:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:.\Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:.\Generated_Source\PSoC4/CyLib.c **** *
 133:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 137 0
  54              		.cfi_startproc
 138:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:.\Generated_Source\PSoC4/CyLib.c **** 
 142:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:.\Generated_Source\PSoC4/CyLib.c **** 
 146:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 146 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 147:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 147 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 30000340 		.word	1073938480
  68              		.cfi_endproc
  69              	.LFE1:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB2:
 148:.\Generated_Source\PSoC4/CyLib.c **** 
 149:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 5


 151:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:.\Generated_Source\PSoC4/CyLib.c ****     *
 155:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:.\Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:.\Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:.\Generated_Source\PSoC4/CyLib.c ****     *
 159:.\Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:.\Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:.\Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:.\Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:.\Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:.\Generated_Source\PSoC4/CyLib.c ****     *
 165:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:.\Generated_Source\PSoC4/CyLib.c ****     *
 171:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:.\Generated_Source\PSoC4/CyLib.c ****     {
 174:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:.\Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:.\Generated_Source\PSoC4/CyLib.c **** 
 178:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:.\Generated_Source\PSoC4/CyLib.c ****         {
 186:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:.\Generated_Source\PSoC4/CyLib.c **** 
 188:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:.\Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:.\Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:.\Generated_Source\PSoC4/CyLib.c ****                 {
 200:.\Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:.\Generated_Source\PSoC4/CyLib.c ****                     {
 202:.\Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:.\Generated_Source\PSoC4/CyLib.c ****                         break;
 204:.\Generated_Source\PSoC4/CyLib.c ****                     }
 205:.\Generated_Source\PSoC4/CyLib.c ****                 }
 206:.\Generated_Source\PSoC4/CyLib.c ****             #else
 207:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 6


 208:.\Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:.\Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:.\Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:.\Generated_Source\PSoC4/CyLib.c ****                 #else
 214:.\Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:.\Generated_Source\PSoC4/CyLib.c **** 
 218:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:.\Generated_Source\PSoC4/CyLib.c **** 
 220:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:.\Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****                 {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:.\Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****                 }
 227:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:.\Generated_Source\PSoC4/CyLib.c **** 
 229:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:.\Generated_Source\PSoC4/CyLib.c **** 
 234:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:.\Generated_Source\PSoC4/CyLib.c **** 
 237:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:.\Generated_Source\PSoC4/CyLib.c **** 
 240:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:.\Generated_Source\PSoC4/CyLib.c ****             {
 243:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:.\Generated_Source\PSoC4/CyLib.c ****             }
 245:.\Generated_Source\PSoC4/CyLib.c ****             else
 246:.\Generated_Source\PSoC4/CyLib.c ****             {
 247:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:.\Generated_Source\PSoC4/CyLib.c **** 
 250:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:.\Generated_Source\PSoC4/CyLib.c **** 
 253:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:.\Generated_Source\PSoC4/CyLib.c ****             }
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 256:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:.\Generated_Source\PSoC4/CyLib.c **** 
 258:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:.\Generated_Source\PSoC4/CyLib.c **** 
 264:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 7


 265:.\Generated_Source\PSoC4/CyLib.c ****         }
 266:.\Generated_Source\PSoC4/CyLib.c ****     }
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c **** 
 269:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:.\Generated_Source\PSoC4/CyLib.c ****     *
 273:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:.\Generated_Source\PSoC4/CyLib.c ****     *
 278:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:.\Generated_Source\PSoC4/CyLib.c ****     *
 281:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:.\Generated_Source\PSoC4/CyLib.c ****     {
 284:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:.\Generated_Source\PSoC4/CyLib.c ****     }
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c **** 
 288:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:.\Generated_Source\PSoC4/CyLib.c ****     *
 292:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:.\Generated_Source\PSoC4/CyLib.c ****     *
 300:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:.\Generated_Source\PSoC4/CyLib.c ****     {
 303:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:.\Generated_Source\PSoC4/CyLib.c ****     }
 307:.\Generated_Source\PSoC4/CyLib.c **** 
 308:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:.\Generated_Source\PSoC4/CyLib.c **** 
 310:.\Generated_Source\PSoC4/CyLib.c **** 
 311:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:.\Generated_Source\PSoC4/CyLib.c ****     *
 317:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:.\Generated_Source\PSoC4/CyLib.c ****     *
 319:.\Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:.\Generated_Source\PSoC4/CyLib.c ****     *
 321:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 8


 322:.\Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:.\Generated_Source\PSoC4/CyLib.c ****     *
 324:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:.\Generated_Source\PSoC4/CyLib.c ****     {
 330:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:.\Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:.\Generated_Source\PSoC4/CyLib.c **** 
 343:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:.\Generated_Source\PSoC4/CyLib.c ****     }
 345:.\Generated_Source\PSoC4/CyLib.c **** 
 346:.\Generated_Source\PSoC4/CyLib.c **** 
 347:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:.\Generated_Source\PSoC4/CyLib.c ****     *
 351:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:.\Generated_Source\PSoC4/CyLib.c ****     *
 353:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:.\Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:.\Generated_Source\PSoC4/CyLib.c ****     *
 356:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:.\Generated_Source\PSoC4/CyLib.c ****     *
 359:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:.\Generated_Source\PSoC4/CyLib.c ****     {
 362:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:.\Generated_Source\PSoC4/CyLib.c **** 
 364:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:.\Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:.\Generated_Source\PSoC4/CyLib.c ****     }
 370:.\Generated_Source\PSoC4/CyLib.c **** 
 371:.\Generated_Source\PSoC4/CyLib.c **** 
 372:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:.\Generated_Source\PSoC4/CyLib.c ****     *
 376:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:.\Generated_Source\PSoC4/CyLib.c ****     *
 378:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 9


 379:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:.\Generated_Source\PSoC4/CyLib.c ****     *
 381:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:.\Generated_Source\PSoC4/CyLib.c ****     *
 384:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:.\Generated_Source\PSoC4/CyLib.c ****     {
 387:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:.\Generated_Source\PSoC4/CyLib.c ****     }
 391:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:.\Generated_Source\PSoC4/CyLib.c **** 
 393:.\Generated_Source\PSoC4/CyLib.c **** 
 394:.\Generated_Source\PSoC4/CyLib.c **** 
 395:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:.\Generated_Source\PSoC4/CyLib.c **** *
 399:.\Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:.\Generated_Source\PSoC4/CyLib.c **** *
 401:.\Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:.\Generated_Source\PSoC4/CyLib.c **** *
 403:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:.\Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:.\Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:.\Generated_Source\PSoC4/CyLib.c **** *
 407:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:.\Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:.\Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:.\Generated_Source\PSoC4/CyLib.c **** *
 414:.\Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:.\Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:.\Generated_Source\PSoC4/CyLib.c **** *
 417:.\Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:.\Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:.\Generated_Source\PSoC4/CyLib.c **** *
 425:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:.\Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 427 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 10


 428:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:.\Generated_Source\PSoC4/CyLib.c **** 
 431:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 431 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 432:.\Generated_Source\PSoC4/CyLib.c **** 
 433:.\Generated_Source\PSoC4/CyLib.c **** 
 434:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 434 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0323     		mov	r3, #3
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 435:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:.\Generated_Source\PSoC4/CyLib.c **** 
 437:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:.\Generated_Source\PSoC4/CyLib.c ****     {
 440:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:.\Generated_Source\PSoC4/CyLib.c ****     }
 442:.\Generated_Source\PSoC4/CyLib.c ****     else
 443:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:.\Generated_Source\PSoC4/CyLib.c ****     {
 445:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 445 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
 446:.\Generated_Source\PSoC4/CyLib.c ****     }
 447:.\Generated_Source\PSoC4/CyLib.c **** 
 448:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 448 0
 101 0014 0B60     		str	r3, [r1]
 449:.\Generated_Source\PSoC4/CyLib.c **** 
 450:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 450 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 451:.\Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 451 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 28000340 		.word	1073938472
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkGetSysclkSource
 119              		.code	16
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 11


 120              		.thumb_func
 121              		.type	CySysClkGetSysclkSource, %function
 122              	CySysClkGetSysclkSource:
 123              	.LFB3:
 452:.\Generated_Source\PSoC4/CyLib.c **** 
 453:.\Generated_Source\PSoC4/CyLib.c **** 
 454:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:.\Generated_Source\PSoC4/CyLib.c **** *
 458:.\Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:.\Generated_Source\PSoC4/CyLib.c **** *
 460:.\Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:.\Generated_Source\PSoC4/CyLib.c **** *
 462:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:.\Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 464 0
 125              		.cfi_startproc
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 465:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:.\Generated_Source\PSoC4/CyLib.c **** 
 468:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 130              		.loc 1 468 0
 131 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 132              	.LVL6:
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:.\Generated_Source\PSoC4/CyLib.c ****     {
 473:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:.\Generated_Source\PSoC4/CyLib.c ****     }
 475:.\Generated_Source\PSoC4/CyLib.c ****     else
 476:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:.\Generated_Source\PSoC4/CyLib.c ****     {
 478:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 133              		.loc 1 478 0
 134 0006 044B     		ldr	r3, .L11
 135 0008 1B68     		ldr	r3, [r3]
 136 000a 0324     		mov	r4, #3
 137 000c 1C40     		and	r4, r3
 138              	.LVL7:
 479:.\Generated_Source\PSoC4/CyLib.c ****     }
 480:.\Generated_Source\PSoC4/CyLib.c **** 
 481:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 139              		.loc 1 481 0
 140 000e FFF7FEFF 		bl	CyExitCriticalSection
 141              	.LVL8:
 482:.\Generated_Source\PSoC4/CyLib.c **** 
 483:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:.\Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 484 0
 143 0012 201C     		mov	r0, r4
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 12


 144              		@ sp needed
 145              	.LVL9:
 146 0014 10BD     		pop	{r4, pc}
 147              	.L12:
 148 0016 C046     		.align	2
 149              	.L11:
 150 0018 28000340 		.word	1073938472
 151              		.cfi_endproc
 152              	.LFE3:
 153              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 154              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 155              		.align	2
 156              		.global	CySysClkWriteSysclkDiv
 157              		.code	16
 158              		.thumb_func
 159              		.type	CySysClkWriteSysclkDiv, %function
 160              	CySysClkWriteSysclkDiv:
 161              	.LFB4:
 485:.\Generated_Source\PSoC4/CyLib.c **** 
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:.\Generated_Source\PSoC4/CyLib.c **** *
 491:.\Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:.\Generated_Source\PSoC4/CyLib.c **** *
 496:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:.\Generated_Source\PSoC4/CyLib.c **** *
 500:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:.\Generated_Source\PSoC4/CyLib.c **** *
 507:.\Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:.\Generated_Source\PSoC4/CyLib.c **** *
 517:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:.\Generated_Source\PSoC4/CyLib.c **** {
 162              		.loc 1 519 0
 163              		.cfi_startproc
 164              	.LVL10:
 165 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 13


 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 169 0002 041C     		mov	r4, r0
 520:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:.\Generated_Source\PSoC4/CyLib.c **** 
 522:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 522 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL11:
 523:.\Generated_Source\PSoC4/CyLib.c **** 
 524:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 173              		.loc 1 524 0
 174 0008 A401     		lsl	r4, r4, #6
 175              	.LVL12:
 176 000a FF23     		mov	r3, #255
 177 000c 2340     		and	r3, r4
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 178              		.loc 1 526 0
 179 000e 0449     		ldr	r1, .L14
 180 0010 0A68     		ldr	r2, [r1]
 181 0012 C024     		mov	r4, #192
 182 0014 A243     		bic	r2, r4
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 183              		.loc 1 525 0
 184 0016 1343     		orr	r3, r2
 524:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 185              		.loc 1 524 0
 186 0018 0B60     		str	r3, [r1]
 527:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 187              		.loc 1 529 0
 188 001a FFF7FEFF 		bl	CyExitCriticalSection
 189              	.LVL13:
 530:.\Generated_Source\PSoC4/CyLib.c **** }
 190              		.loc 1 530 0
 191              		@ sp needed
 192 001e 10BD     		pop	{r4, pc}
 193              	.L15:
 194              		.align	2
 195              	.L14:
 196 0020 28000340 		.word	1073938472
 197              		.cfi_endproc
 198              	.LFE4:
 199              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 200              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 201              		.align	2
 202              		.global	CySysClkWriteHfclkDiv
 203              		.code	16
 204              		.thumb_func
 205              		.type	CySysClkWriteHfclkDiv, %function
 206              	CySysClkWriteHfclkDiv:
 207              	.LFB6:
 531:.\Generated_Source\PSoC4/CyLib.c **** 
 532:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 14


 533:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:.\Generated_Source\PSoC4/CyLib.c **** *
 537:.\Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:.\Generated_Source\PSoC4/CyLib.c **** *
 539:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:.\Generated_Source\PSoC4/CyLib.c **** *
 542:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:.\Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:.\Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:.\Generated_Source\PSoC4/CyLib.c **** *
 550:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:.\Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:.\Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:.\Generated_Source\PSoC4/CyLib.c **** *
 555:.\Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:.\Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:.\Generated_Source\PSoC4/CyLib.c **** *
 558:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:.\Generated_Source\PSoC4/CyLib.c **** *
 565:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:.\Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:.\Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:.\Generated_Source\PSoC4/CyLib.c **** *
 569:.\Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:.\Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:.\Generated_Source\PSoC4/CyLib.c **** * 4.
 573:.\Generated_Source\PSoC4/CyLib.c **** *
 574:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:.\Generated_Source\PSoC4/CyLib.c ****     {
 578:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:.\Generated_Source\PSoC4/CyLib.c ****         #else
 582:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:.\Generated_Source\PSoC4/CyLib.c **** 
 589:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 15


 590:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:.\Generated_Source\PSoC4/CyLib.c **** 
 597:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:.\Generated_Source\PSoC4/CyLib.c **** 
 599:.\Generated_Source\PSoC4/CyLib.c **** 
 600:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:.\Generated_Source\PSoC4/CyLib.c **** 
 602:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:.\Generated_Source\PSoC4/CyLib.c ****             {
 605:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:.\Generated_Source\PSoC4/CyLib.c ****             }
 608:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:.\Generated_Source\PSoC4/CyLib.c **** 
 610:.\Generated_Source\PSoC4/CyLib.c **** 
 611:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:.\Generated_Source\PSoC4/CyLib.c **** 
 613:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:.\Generated_Source\PSoC4/CyLib.c ****                 {
 616:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:.\Generated_Source\PSoC4/CyLib.c **** 
 618:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:.\Generated_Source\PSoC4/CyLib.c ****                 {
 620:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:.\Generated_Source\PSoC4/CyLib.c ****                 }
 623:.\Generated_Source\PSoC4/CyLib.c **** 
 624:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:.\Generated_Source\PSoC4/CyLib.c ****                 }
 626:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:.\Generated_Source\PSoC4/CyLib.c **** 
 628:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:.\Generated_Source\PSoC4/CyLib.c **** 
 630:.\Generated_Source\PSoC4/CyLib.c **** 
 631:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 16


 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:.\Generated_Source\PSoC4/CyLib.c **** 
 650:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:.\Generated_Source\PSoC4/CyLib.c ****         {
 652:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:.\Generated_Source\PSoC4/CyLib.c ****             {
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:.\Generated_Source\PSoC4/CyLib.c ****             }
 657:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:.\Generated_Source\PSoC4/CyLib.c ****             {
 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:.\Generated_Source\PSoC4/CyLib.c ****             }
 662:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:.\Generated_Source\PSoC4/CyLib.c ****             {
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:.\Generated_Source\PSoC4/CyLib.c ****             }
 667:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:.\Generated_Source\PSoC4/CyLib.c ****             {
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:.\Generated_Source\PSoC4/CyLib.c ****             }
 672:.\Generated_Source\PSoC4/CyLib.c ****             else
 673:.\Generated_Source\PSoC4/CyLib.c ****             {
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:.\Generated_Source\PSoC4/CyLib.c ****             }
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c **** 
 682:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:.\Generated_Source\PSoC4/CyLib.c ****             *
 687:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:.\Generated_Source\PSoC4/CyLib.c **** 
 697:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:.\Generated_Source\PSoC4/CyLib.c **** 
 699:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c ****             else
 702:.\Generated_Source\PSoC4/CyLib.c ****             {
 703:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 17


 704:.\Generated_Source\PSoC4/CyLib.c ****             }
 705:.\Generated_Source\PSoC4/CyLib.c **** 
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:.\Generated_Source\PSoC4/CyLib.c ****             *
 711:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:.\Generated_Source\PSoC4/CyLib.c ****             {
 717:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:.\Generated_Source\PSoC4/CyLib.c ****             }
 721:.\Generated_Source\PSoC4/CyLib.c **** 
 722:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:.\Generated_Source\PSoC4/CyLib.c ****                 {
 727:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:.\Generated_Source\PSoC4/CyLib.c ****                 }
 729:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:.\Generated_Source\PSoC4/CyLib.c ****                 {
 731:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:.\Generated_Source\PSoC4/CyLib.c ****                 }
 733:.\Generated_Source\PSoC4/CyLib.c ****                 else
 734:.\Generated_Source\PSoC4/CyLib.c ****                 {
 735:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:.\Generated_Source\PSoC4/CyLib.c ****                 }
 737:.\Generated_Source\PSoC4/CyLib.c ****             #else
 738:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:.\Generated_Source\PSoC4/CyLib.c **** 
 741:.\Generated_Source\PSoC4/CyLib.c **** 
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:.\Generated_Source\PSoC4/CyLib.c **** 
 747:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:.\Generated_Source\PSoC4/CyLib.c ****             }
 753:.\Generated_Source\PSoC4/CyLib.c ****         }
 754:.\Generated_Source\PSoC4/CyLib.c ****         else
 755:.\Generated_Source\PSoC4/CyLib.c ****         {
 756:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:.\Generated_Source\PSoC4/CyLib.c ****         }
 759:.\Generated_Source\PSoC4/CyLib.c **** 
 760:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 18


 761:.\Generated_Source\PSoC4/CyLib.c **** 
 762:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:.\Generated_Source\PSoC4/CyLib.c ****             {
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:.\Generated_Source\PSoC4/CyLib.c **** 
 769:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:.\Generated_Source\PSoC4/CyLib.c ****             {
 772:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:.\Generated_Source\PSoC4/CyLib.c ****             }
 774:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:.\Generated_Source\PSoC4/CyLib.c **** 
 776:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:.\Generated_Source\PSoC4/CyLib.c ****     }
 778:.\Generated_Source\PSoC4/CyLib.c **** 
 779:.\Generated_Source\PSoC4/CyLib.c **** #else
 780:.\Generated_Source\PSoC4/CyLib.c **** 
 781:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:.\Generated_Source\PSoC4/CyLib.c ****     {
 783:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:.\Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:.\Generated_Source\PSoC4/CyLib.c **** 
 786:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:.\Generated_Source\PSoC4/CyLib.c ****         
 790:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:.\Generated_Source\PSoC4/CyLib.c ****         #else
 797:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:.\Generated_Source\PSoC4/CyLib.c **** 
 804:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:.\Generated_Source\PSoC4/CyLib.c ****                 {
 807:.\Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:.\Generated_Source\PSoC4/CyLib.c ****                 }
 810:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:.\Generated_Source\PSoC4/CyLib.c ****                     {
 817:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 19


 818:.\Generated_Source\PSoC4/CyLib.c **** 
 819:.\Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:.\Generated_Source\PSoC4/CyLib.c ****                     {
 821:.\Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:.\Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:.\Generated_Source\PSoC4/CyLib.c ****                     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:.\Generated_Source\PSoC4/CyLib.c ****                     }
 827:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:.\Generated_Source\PSoC4/CyLib.c **** 
 829:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c **** 
 832:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c **** 
 836:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:.\Generated_Source\PSoC4/CyLib.c ****                 {
 840:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:.\Generated_Source\PSoC4/CyLib.c ****                 }
 842:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:.\Generated_Source\PSoC4/CyLib.c ****                 {
 844:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:.\Generated_Source\PSoC4/CyLib.c ****                 }
 846:.\Generated_Source\PSoC4/CyLib.c ****                 else
 847:.\Generated_Source\PSoC4/CyLib.c ****                 {
 848:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:.\Generated_Source\PSoC4/CyLib.c ****                 }
 850:.\Generated_Source\PSoC4/CyLib.c ****             #else
 851:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:.\Generated_Source\PSoC4/CyLib.c **** 
 855:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:.\Generated_Source\PSoC4/CyLib.c **** 
 858:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 862:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:.\Generated_Source\PSoC4/CyLib.c **** 
 864:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:.\Generated_Source\PSoC4/CyLib.c ****             {
 866:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:.\Generated_Source\PSoC4/CyLib.c **** 
 872:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 20


 875:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:.\Generated_Source\PSoC4/CyLib.c ****             }
 877:.\Generated_Source\PSoC4/CyLib.c **** 
 878:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:.\Generated_Source\PSoC4/CyLib.c ****                 {
 881:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:.\Generated_Source\PSoC4/CyLib.c ****                 }
 883:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:.\Generated_Source\PSoC4/CyLib.c ****         
 885:.\Generated_Source\PSoC4/CyLib.c ****         
 886:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:.\Generated_Source\PSoC4/CyLib.c ****                 {
 889:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:.\Generated_Source\PSoC4/CyLib.c ****                 }
 891:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:.\Generated_Source\PSoC4/CyLib.c **** 
 893:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:.\Generated_Source\PSoC4/CyLib.c ****         }
 895:.\Generated_Source\PSoC4/CyLib.c ****         else
 896:.\Generated_Source\PSoC4/CyLib.c ****         {
 897:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:.\Generated_Source\PSoC4/CyLib.c ****         }
 900:.\Generated_Source\PSoC4/CyLib.c ****     }
 901:.\Generated_Source\PSoC4/CyLib.c **** 
 902:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:.\Generated_Source\PSoC4/CyLib.c **** 
 904:.\Generated_Source\PSoC4/CyLib.c **** 
 905:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:.\Generated_Source\PSoC4/CyLib.c ****     *
 910:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:.\Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:.\Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:.\Generated_Source\PSoC4/CyLib.c ****     *
 916:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:.\Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:.\Generated_Source\PSoC4/CyLib.c ****     *
 919:.\Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:.\Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:.\Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:.\Generated_Source\PSoC4/CyLib.c ****     *
 931:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 21


 932:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:.\Generated_Source\PSoC4/CyLib.c ****     {
 208              		.loc 1 933 0
 209              		.cfi_startproc
 210              	.LVL14:
 211 0000 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 215 0002 041C     		mov	r4, r0
 934:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:.\Generated_Source\PSoC4/CyLib.c **** 
 936:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 216              		.loc 1 936 0
 217 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 218              	.LVL15:
 937:.\Generated_Source\PSoC4/CyLib.c **** 
 938:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 219              		.loc 1 938 0
 220 0008 054A     		ldr	r2, .L17
 221 000a 1368     		ldr	r3, [r2]
 222 000c 0C21     		mov	r1, #12
 223 000e 8B43     		bic	r3, r1
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 224              		.loc 1 940 0
 225 0010 0939     		sub	r1, r1, #9
 226 0012 0C40     		and	r4, r1
 227              	.LVL16:
 228 0014 A400     		lsl	r4, r4, #2
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 229              		.loc 1 939 0
 230 0016 1C43     		orr	r4, r3
 938:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 231              		.loc 1 938 0
 232 0018 1460     		str	r4, [r2]
 941:.\Generated_Source\PSoC4/CyLib.c **** 
 942:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 233              		.loc 1 942 0
 234 001a FFF7FEFF 		bl	CyExitCriticalSection
 235              	.LVL17:
 943:.\Generated_Source\PSoC4/CyLib.c ****     }
 236              		.loc 1 943 0
 237              		@ sp needed
 238 001e 10BD     		pop	{r4, pc}
 239              	.L18:
 240              		.align	2
 241              	.L17:
 242 0020 28000340 		.word	1073938472
 243              		.cfi_endproc
 244              	.LFE6:
 245              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 246              		.section	.text.CySysGetResetReason,"ax",%progbits
 247              		.align	2
 248              		.global	CySysGetResetReason
 249              		.code	16
 250              		.thumb_func
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 22


 251              		.type	CySysGetResetReason, %function
 252              	CySysGetResetReason:
 253              	.LFB7:
 944:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:.\Generated_Source\PSoC4/CyLib.c **** 
 946:.\Generated_Source\PSoC4/CyLib.c **** 
 947:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:.\Generated_Source\PSoC4/CyLib.c **** 
 949:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:.\Generated_Source\PSoC4/CyLib.c ****     *
 953:.\Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:.\Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *
 956:.\Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:.\Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:.\Generated_Source\PSoC4/CyLib.c ****     * called.
 960:.\Generated_Source\PSoC4/CyLib.c ****     *
 961:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:.\Generated_Source\PSoC4/CyLib.c ****     *
 963:.\Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:.\Generated_Source\PSoC4/CyLib.c ****     *
 965:.\Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:.\Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:.\Generated_Source\PSoC4/CyLib.c ****     *
 968:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:.\Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:.\Generated_Source\PSoC4/CyLib.c ****     *
 971:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:.\Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:.\Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:.\Generated_Source\PSoC4/CyLib.c ****     *
 975:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:.\Generated_Source\PSoC4/CyLib.c ****     *
 977:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:.\Generated_Source\PSoC4/CyLib.c ****     {
 980:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:.\Generated_Source\PSoC4/CyLib.c **** 
 982:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 23


 998:.\Generated_Source\PSoC4/CyLib.c ****         {
 999:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:.\Generated_Source\PSoC4/CyLib.c **** 
1001:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:.\Generated_Source\PSoC4/CyLib.c ****             {
1003:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:.\Generated_Source\PSoC4/CyLib.c **** 
1005:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:.\Generated_Source\PSoC4/CyLib.c ****                 {
1007:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:.\Generated_Source\PSoC4/CyLib.c ****                     break;
1009:.\Generated_Source\PSoC4/CyLib.c ****                 }
1010:.\Generated_Source\PSoC4/CyLib.c ****             }
1011:.\Generated_Source\PSoC4/CyLib.c **** 
1012:.\Generated_Source\PSoC4/CyLib.c ****         }
1013:.\Generated_Source\PSoC4/CyLib.c **** 
1014:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:.\Generated_Source\PSoC4/CyLib.c ****     }
1016:.\Generated_Source\PSoC4/CyLib.c **** 
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:.\Generated_Source\PSoC4/CyLib.c ****     *
1022:.\Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:.\Generated_Source\PSoC4/CyLib.c ****     *
1024:.\Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:.\Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:.\Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:.\Generated_Source\PSoC4/CyLib.c ****     *
1028:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:.\Generated_Source\PSoC4/CyLib.c ****     {
1031:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:.\Generated_Source\PSoC4/CyLib.c **** 
1035:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:.\Generated_Source\PSoC4/CyLib.c ****         #else
1038:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:.\Generated_Source\PSoC4/CyLib.c ****     }
1041:.\Generated_Source\PSoC4/CyLib.c **** 
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:.\Generated_Source\PSoC4/CyLib.c ****     *
1049:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:.\Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:.\Generated_Source\PSoC4/CyLib.c ****     *
1052:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:.\Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 24


1055:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:.\Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:.\Generated_Source\PSoC4/CyLib.c ****     *
1058:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:.\Generated_Source\PSoC4/CyLib.c ****     *
1060:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:.\Generated_Source\PSoC4/CyLib.c ****     {
1063:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:.\Generated_Source\PSoC4/CyLib.c **** 
1065:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1067:.\Generated_Source\PSoC4/CyLib.c ****         #else
1068:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:.\Generated_Source\PSoC4/CyLib.c **** 
1071:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:.\Generated_Source\PSoC4/CyLib.c ****     }
1073:.\Generated_Source\PSoC4/CyLib.c **** 
1074:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:.\Generated_Source\PSoC4/CyLib.c ****         *
1079:.\Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:.\Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:.\Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:.\Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:.\Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:.\Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:.\Generated_Source\PSoC4/CyLib.c ****         *
1094:.\Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:.\Generated_Source\PSoC4/CyLib.c ****         *
1100:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:.\Generated_Source\PSoC4/CyLib.c ****         {
1103:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:.\Generated_Source\PSoC4/CyLib.c ****             {
1107:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:.\Generated_Source\PSoC4/CyLib.c **** 
1109:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 25


1112:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:.\Generated_Source\PSoC4/CyLib.c ****             }
1114:.\Generated_Source\PSoC4/CyLib.c ****             else
1115:.\Generated_Source\PSoC4/CyLib.c ****             {
1116:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:.\Generated_Source\PSoC4/CyLib.c ****             }
1119:.\Generated_Source\PSoC4/CyLib.c ****         }
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****     #else
1122:.\Generated_Source\PSoC4/CyLib.c **** 
1123:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:.\Generated_Source\PSoC4/CyLib.c ****         *
1127:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:.\Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:.\Generated_Source\PSoC4/CyLib.c ****         *
1130:.\Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:.\Generated_Source\PSoC4/CyLib.c ****         *
1133:.\Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:.\Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:.\Generated_Source\PSoC4/CyLib.c ****         *
1136:.\Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:.\Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:.\Generated_Source\PSoC4/CyLib.c ****         *
1140:.\Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:.\Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:.\Generated_Source\PSoC4/CyLib.c ****         *
1143:.\Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:.\Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:.\Generated_Source\PSoC4/CyLib.c ****         *
1146:.\Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:.\Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:.\Generated_Source\PSoC4/CyLib.c ****         *
1149:.\Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:.\Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:.\Generated_Source\PSoC4/CyLib.c ****         *
1152:.\Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:.\Generated_Source\PSoC4/CyLib.c ****         *
1158:.\Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:.\Generated_Source\PSoC4/CyLib.c ****         *
1168:.\Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 26


1169:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *
1180:.\Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:.\Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:.\Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:.\Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:.\Generated_Source\PSoC4/CyLib.c ****         *
1189:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:.\Generated_Source\PSoC4/CyLib.c ****         {
1192:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:.\Generated_Source\PSoC4/CyLib.c **** 
1209:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:.\Generated_Source\PSoC4/CyLib.c **** 
1211:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:.\Generated_Source\PSoC4/CyLib.c ****         }
1213:.\Generated_Source\PSoC4/CyLib.c **** 
1214:.\Generated_Source\PSoC4/CyLib.c **** 
1215:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:.\Generated_Source\PSoC4/CyLib.c ****         *
1219:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:.\Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:.\Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:.\Generated_Source\PSoC4/CyLib.c ****         *
1223:.\Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:.\Generated_Source\PSoC4/CyLib.c ****         *
1225:.\Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 27


1226:.\Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:.\Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:.\Generated_Source\PSoC4/CyLib.c ****         *
1231:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *
1237:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:.\Generated_Source\PSoC4/CyLib.c ****         *
1240:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:.\Generated_Source\PSoC4/CyLib.c ****         {
1243:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:.\Generated_Source\PSoC4/CyLib.c **** 
1245:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:.\Generated_Source\PSoC4/CyLib.c **** 
1251:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:.\Generated_Source\PSoC4/CyLib.c **** 
1253:.\Generated_Source\PSoC4/CyLib.c **** 
1254:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:.\Generated_Source\PSoC4/CyLib.c ****             {
1257:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:.\Generated_Source\PSoC4/CyLib.c ****             }
1259:.\Generated_Source\PSoC4/CyLib.c ****             else
1260:.\Generated_Source\PSoC4/CyLib.c ****             {
1261:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:.\Generated_Source\PSoC4/CyLib.c **** 
1264:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:.\Generated_Source\PSoC4/CyLib.c ****                 {
1266:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:.\Generated_Source\PSoC4/CyLib.c ****                 }
1268:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:.\Generated_Source\PSoC4/CyLib.c ****                 {
1270:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:.\Generated_Source\PSoC4/CyLib.c ****                 }
1272:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:.\Generated_Source\PSoC4/CyLib.c ****                 {
1274:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:.\Generated_Source\PSoC4/CyLib.c ****                 }
1276:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 28


1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c **** 
1297:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:.\Generated_Source\PSoC4/CyLib.c **** 
1300:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:.\Generated_Source\PSoC4/CyLib.c ****                 {
1304:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:.\Generated_Source\PSoC4/CyLib.c ****                 }
1307:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:.\Generated_Source\PSoC4/CyLib.c ****                 {
1309:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:.\Generated_Source\PSoC4/CyLib.c ****                 }
1311:.\Generated_Source\PSoC4/CyLib.c ****                 else
1312:.\Generated_Source\PSoC4/CyLib.c ****                 {
1313:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:.\Generated_Source\PSoC4/CyLib.c ****                 }
1315:.\Generated_Source\PSoC4/CyLib.c **** 
1316:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:.\Generated_Source\PSoC4/CyLib.c ****                 {
1319:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:.\Generated_Source\PSoC4/CyLib.c ****                 }
1321:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:.\Generated_Source\PSoC4/CyLib.c ****                 {
1323:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:.\Generated_Source\PSoC4/CyLib.c ****                 }
1325:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:.\Generated_Source\PSoC4/CyLib.c ****                 {
1327:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:.\Generated_Source\PSoC4/CyLib.c ****                 }
1329:.\Generated_Source\PSoC4/CyLib.c ****                 else
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:.\Generated_Source\PSoC4/CyLib.c **** 
1337:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:.\Generated_Source\PSoC4/CyLib.c **** 
1339:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 29


1340:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:.\Generated_Source\PSoC4/CyLib.c ****                 {
1342:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c ****                 else
1346:.\Generated_Source\PSoC4/CyLib.c ****                 {
1347:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:.\Generated_Source\PSoC4/CyLib.c ****                     */
1350:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:.\Generated_Source\PSoC4/CyLib.c ****                 }
1352:.\Generated_Source\PSoC4/CyLib.c ****             }
1353:.\Generated_Source\PSoC4/CyLib.c **** 
1354:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:.\Generated_Source\PSoC4/CyLib.c ****         }
1356:.\Generated_Source\PSoC4/CyLib.c **** 
1357:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:.\Generated_Source\PSoC4/CyLib.c **** 
1361:.\Generated_Source\PSoC4/CyLib.c **** 
1362:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:.\Generated_Source\PSoC4/CyLib.c ****     *
1367:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:.\Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:.\Generated_Source\PSoC4/CyLib.c ****     *
1370:.\Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:.\Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:.\Generated_Source\PSoC4/CyLib.c ****     *
1373:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:.\Generated_Source\PSoC4/CyLib.c ****     *
1375:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:.\Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:.\Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:.\Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:.\Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:.\Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:.\Generated_Source\PSoC4/CyLib.c ****     *
1384:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:.\Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:.\Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:.\Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:.\Generated_Source\PSoC4/CyLib.c ****     *
1391:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:.\Generated_Source\PSoC4/CyLib.c ****     {
1394:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 30


1397:.\Generated_Source\PSoC4/CyLib.c **** 
1398:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:.\Generated_Source\PSoC4/CyLib.c ****         {
1400:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:.\Generated_Source\PSoC4/CyLib.c **** 
1402:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:.\Generated_Source\PSoC4/CyLib.c **** 
1405:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:.\Generated_Source\PSoC4/CyLib.c **** 
1408:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:.\Generated_Source\PSoC4/CyLib.c **** 
1410:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:.\Generated_Source\PSoC4/CyLib.c **** 
1416:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:.\Generated_Source\PSoC4/CyLib.c ****             {
1418:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:.\Generated_Source\PSoC4/CyLib.c **** 
1420:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:.\Generated_Source\PSoC4/CyLib.c ****                 {
1422:.\Generated_Source\PSoC4/CyLib.c **** 
1423:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:.\Generated_Source\PSoC4/CyLib.c ****                     {
1425:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1428:.\Generated_Source\PSoC4/CyLib.c ****                     }
1429:.\Generated_Source\PSoC4/CyLib.c **** 
1430:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:.\Generated_Source\PSoC4/CyLib.c ****                 }
1433:.\Generated_Source\PSoC4/CyLib.c ****             }
1434:.\Generated_Source\PSoC4/CyLib.c ****         }
1435:.\Generated_Source\PSoC4/CyLib.c ****         else
1436:.\Generated_Source\PSoC4/CyLib.c ****         {
1437:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:.\Generated_Source\PSoC4/CyLib.c ****         }
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:.\Generated_Source\PSoC4/CyLib.c ****     }
1442:.\Generated_Source\PSoC4/CyLib.c **** 
1443:.\Generated_Source\PSoC4/CyLib.c **** 
1444:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:.\Generated_Source\PSoC4/CyLib.c ****     *
1448:.\Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:.\Generated_Source\PSoC4/CyLib.c ****     *
1450:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:.\Generated_Source\PSoC4/CyLib.c ****     *
1452:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 31


1454:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:.\Generated_Source\PSoC4/CyLib.c ****     *
1456:.\Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:.\Generated_Source\PSoC4/CyLib.c ****     *
1458:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:.\Generated_Source\PSoC4/CyLib.c ****     {
1461:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:.\Generated_Source\PSoC4/CyLib.c **** 
1464:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:.\Generated_Source\PSoC4/CyLib.c **** 
1468:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:.\Generated_Source\PSoC4/CyLib.c ****         {
1472:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:.\Generated_Source\PSoC4/CyLib.c ****         }
1474:.\Generated_Source\PSoC4/CyLib.c **** 
1475:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:.\Generated_Source\PSoC4/CyLib.c **** 
1477:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:.\Generated_Source\PSoC4/CyLib.c ****     }
1479:.\Generated_Source\PSoC4/CyLib.c **** 
1480:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:.\Generated_Source\PSoC4/CyLib.c ****     *
1484:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:.\Generated_Source\PSoC4/CyLib.c ****     *
1486:.\Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:.\Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:.\Generated_Source\PSoC4/CyLib.c ****     *
1489:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:.\Generated_Source\PSoC4/CyLib.c ****     *
1491:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:.\Generated_Source\PSoC4/CyLib.c ****     *
1495:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:.\Generated_Source\PSoC4/CyLib.c ****     {
1498:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:.\Generated_Source\PSoC4/CyLib.c ****         {
1502:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:.\Generated_Source\PSoC4/CyLib.c ****         }
1506:.\Generated_Source\PSoC4/CyLib.c ****     }
1507:.\Generated_Source\PSoC4/CyLib.c **** 
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 32


1511:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:.\Generated_Source\PSoC4/CyLib.c ****     *
1513:.\Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:.\Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:.\Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:.\Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:.\Generated_Source\PSoC4/CyLib.c ****     *
1521:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:.\Generated_Source\PSoC4/CyLib.c ****     *
1523:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:.\Generated_Source\PSoC4/CyLib.c ****     *
1527:.\Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:.\Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:.\Generated_Source\PSoC4/CyLib.c ****     *
1530:.\Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:.\Generated_Source\PSoC4/CyLib.c ****     *
1532:.\Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:.\Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:.\Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:.\Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:.\Generated_Source\PSoC4/CyLib.c ****     *
1540:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:.\Generated_Source\PSoC4/CyLib.c ****     {
1543:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:.\Generated_Source\PSoC4/CyLib.c **** 
1548:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:.\Generated_Source\PSoC4/CyLib.c **** 
1550:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:.\Generated_Source\PSoC4/CyLib.c **** 
1552:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:.\Generated_Source\PSoC4/CyLib.c ****         {
1558:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:.\Generated_Source\PSoC4/CyLib.c **** 
1563:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:.\Generated_Source\PSoC4/CyLib.c **** 
1567:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 33


1568:.\Generated_Source\PSoC4/CyLib.c **** 
1569:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:.\Generated_Source\PSoC4/CyLib.c ****         }
1571:.\Generated_Source\PSoC4/CyLib.c **** 
1572:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:.\Generated_Source\PSoC4/CyLib.c **** 
1574:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:.\Generated_Source\PSoC4/CyLib.c ****     }
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c **** 
1578:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:.\Generated_Source\PSoC4/CyLib.c ****     *
1582:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:.\Generated_Source\PSoC4/CyLib.c ****     *
1584:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:.\Generated_Source\PSoC4/CyLib.c ****     *
1587:.\Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:.\Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:.\Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:.\Generated_Source\PSoC4/CyLib.c ****     *
1592:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:.\Generated_Source\PSoC4/CyLib.c ****     *
1594:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:.\Generated_Source\PSoC4/CyLib.c ****     *
1598:.\Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:.\Generated_Source\PSoC4/CyLib.c ****     *
1603:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:.\Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:.\Generated_Source\PSoC4/CyLib.c ****     *
1606:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:.\Generated_Source\PSoC4/CyLib.c ****     *
1608:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:.\Generated_Source\PSoC4/CyLib.c ****     {
1611:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:.\Generated_Source\PSoC4/CyLib.c **** 
1614:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:.\Generated_Source\PSoC4/CyLib.c **** 
1616:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:.\Generated_Source\PSoC4/CyLib.c ****         {
1618:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:.\Generated_Source\PSoC4/CyLib.c ****         }
1622:.\Generated_Source\PSoC4/CyLib.c **** 
1623:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 34


1625:.\Generated_Source\PSoC4/CyLib.c **** 
1626:.\Generated_Source\PSoC4/CyLib.c **** 
1627:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:.\Generated_Source\PSoC4/CyLib.c ****     *
1631:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:.\Generated_Source\PSoC4/CyLib.c ****     *
1634:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:.\Generated_Source\PSoC4/CyLib.c ****     *
1638:.\Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:.\Generated_Source\PSoC4/CyLib.c ****     *
1641:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:.\Generated_Source\PSoC4/CyLib.c ****     {
1644:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:.\Generated_Source\PSoC4/CyLib.c **** 
1647:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:.\Generated_Source\PSoC4/CyLib.c **** 
1649:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:.\Generated_Source\PSoC4/CyLib.c **** 
1651:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:.\Generated_Source\PSoC4/CyLib.c **** 
1656:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:.\Generated_Source\PSoC4/CyLib.c ****     }
1658:.\Generated_Source\PSoC4/CyLib.c **** 
1659:.\Generated_Source\PSoC4/CyLib.c **** 
1660:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:.\Generated_Source\PSoC4/CyLib.c ****     *
1664:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:.\Generated_Source\PSoC4/CyLib.c ****     *
1669:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:.\Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:.\Generated_Source\PSoC4/CyLib.c ****     *
1676:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:.\Generated_Source\PSoC4/CyLib.c ****     {
1679:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 35


1682:.\Generated_Source\PSoC4/CyLib.c **** 
1683:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:.\Generated_Source\PSoC4/CyLib.c ****         {
1690:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:.\Generated_Source\PSoC4/CyLib.c ****         }
1692:.\Generated_Source\PSoC4/CyLib.c **** 
1693:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:.\Generated_Source\PSoC4/CyLib.c ****     }
1695:.\Generated_Source\PSoC4/CyLib.c **** 
1696:.\Generated_Source\PSoC4/CyLib.c **** 
1697:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:.\Generated_Source\PSoC4/CyLib.c ****     *
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:.\Generated_Source\PSoC4/CyLib.c ****     *
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:.\Generated_Source\PSoC4/CyLib.c ****     *
1708:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:.\Generated_Source\PSoC4/CyLib.c ****     *
1712:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:.\Generated_Source\PSoC4/CyLib.c ****     *
1714:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:.\Generated_Source\PSoC4/CyLib.c ****     {
1717:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:.\Generated_Source\PSoC4/CyLib.c **** 
1720:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:.\Generated_Source\PSoC4/CyLib.c **** 
1722:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:.\Generated_Source\PSoC4/CyLib.c **** 
1725:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:.\Generated_Source\PSoC4/CyLib.c **** 
1727:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:.\Generated_Source\PSoC4/CyLib.c ****     }
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** 
1731:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:.\Generated_Source\PSoC4/CyLib.c ****     *
1735:.\Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:.\Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:.\Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 36


1739:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:.\Generated_Source\PSoC4/CyLib.c ****     *
1744:.\Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:.\Generated_Source\PSoC4/CyLib.c ****     *
1748:.\Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:.\Generated_Source\PSoC4/CyLib.c ****     *
1752:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:.\Generated_Source\PSoC4/CyLib.c ****     *
1758:.\Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:.\Generated_Source\PSoC4/CyLib.c ****     *
1760:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:.\Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:.\Generated_Source\PSoC4/CyLib.c ****     *
1763:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:.\Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:.\Generated_Source\PSoC4/CyLib.c ****     *
1766:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:.\Generated_Source\PSoC4/CyLib.c ****     {
1769:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:.\Generated_Source\PSoC4/CyLib.c **** 
1772:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:.\Generated_Source\PSoC4/CyLib.c **** 
1775:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:.\Generated_Source\PSoC4/CyLib.c **** 
1778:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:.\Generated_Source\PSoC4/CyLib.c **** 
1781:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:.\Generated_Source\PSoC4/CyLib.c **** 
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:.\Generated_Source\PSoC4/CyLib.c **** 
1787:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:.\Generated_Source\PSoC4/CyLib.c ****         {
1793:.\Generated_Source\PSoC4/CyLib.c **** 
1794:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 37


1796:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:.\Generated_Source\PSoC4/CyLib.c **** 
1798:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:.\Generated_Source\PSoC4/CyLib.c **** 
1802:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:.\Generated_Source\PSoC4/CyLib.c ****             {
1804:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:.\Generated_Source\PSoC4/CyLib.c ****                 {
1806:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:.\Generated_Source\PSoC4/CyLib.c **** 
1808:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:.\Generated_Source\PSoC4/CyLib.c **** 
1811:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:.\Generated_Source\PSoC4/CyLib.c **** 
1814:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:.\Generated_Source\PSoC4/CyLib.c **** 
1817:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:.\Generated_Source\PSoC4/CyLib.c ****                     {
1820:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1823:.\Generated_Source\PSoC4/CyLib.c ****                     }
1824:.\Generated_Source\PSoC4/CyLib.c ****                 }
1825:.\Generated_Source\PSoC4/CyLib.c **** 
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:.\Generated_Source\PSoC4/CyLib.c ****                 {
1829:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:.\Generated_Source\PSoC4/CyLib.c ****                     {
1831:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:.\Generated_Source\PSoC4/CyLib.c ****                     }
1833:.\Generated_Source\PSoC4/CyLib.c ****                 }
1834:.\Generated_Source\PSoC4/CyLib.c ****             }
1835:.\Generated_Source\PSoC4/CyLib.c **** 
1836:.\Generated_Source\PSoC4/CyLib.c ****         }
1837:.\Generated_Source\PSoC4/CyLib.c **** 
1838:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:.\Generated_Source\PSoC4/CyLib.c ****     }
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c **** 
1842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:.\Generated_Source\PSoC4/CyLib.c ****     *
1846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:.\Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:.\Generated_Source\PSoC4/CyLib.c ****     *
1849:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:.\Generated_Source\PSoC4/CyLib.c ****     *
1851:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 38


1853:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:.\Generated_Source\PSoC4/CyLib.c ****     *
1855:.\Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:.\Generated_Source\PSoC4/CyLib.c ****     *
1864:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:.\Generated_Source\PSoC4/CyLib.c ****     {
1867:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:.\Generated_Source\PSoC4/CyLib.c ****         {
1874:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:.\Generated_Source\PSoC4/CyLib.c ****         }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:.\Generated_Source\PSoC4/CyLib.c ****     }
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c **** 
1883:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:.\Generated_Source\PSoC4/CyLib.c ****     *
1887:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:.\Generated_Source\PSoC4/CyLib.c ****     *
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:.\Generated_Source\PSoC4/CyLib.c ****     *
1898:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:.\Generated_Source\PSoC4/CyLib.c ****     *
1904:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:.\Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:.\Generated_Source\PSoC4/CyLib.c ****     *
1908:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 39


1910:.\Generated_Source\PSoC4/CyLib.c ****     {
1911:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:.\Generated_Source\PSoC4/CyLib.c **** 
1916:.\Generated_Source\PSoC4/CyLib.c **** 
1917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:.\Generated_Source\PSoC4/CyLib.c **** 
1926:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:.\Generated_Source\PSoC4/CyLib.c ****         }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:.\Generated_Source\PSoC4/CyLib.c **** 
1933:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:.\Generated_Source\PSoC4/CyLib.c ****     }
1935:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:.\Generated_Source\PSoC4/CyLib.c **** 
1937:.\Generated_Source\PSoC4/CyLib.c **** 
1938:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:.\Generated_Source\PSoC4/CyLib.c **** 
1940:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:.\Generated_Source\PSoC4/CyLib.c ****     *
1948:.\Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 40


1967:.\Generated_Source\PSoC4/CyLib.c ****     *
1968:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:.\Generated_Source\PSoC4/CyLib.c ****     {
1971:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:.\Generated_Source\PSoC4/CyLib.c **** 
1974:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:.\Generated_Source\PSoC4/CyLib.c **** 
1981:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:.\Generated_Source\PSoC4/CyLib.c **** 
1984:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:.\Generated_Source\PSoC4/CyLib.c **** 
1987:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:.\Generated_Source\PSoC4/CyLib.c ****     }
1990:.\Generated_Source\PSoC4/CyLib.c **** 
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:.\Generated_Source\PSoC4/CyLib.c ****     *
1998:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:.\Generated_Source\PSoC4/CyLib.c ****     {
2001:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2002:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2003:.\Generated_Source\PSoC4/CyLib.c ****     }
2004:.\Generated_Source\PSoC4/CyLib.c **** 
2005:.\Generated_Source\PSoC4/CyLib.c **** 
2006:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:.\Generated_Source\PSoC4/CyLib.c ****     *
2010:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:.\Generated_Source\PSoC4/CyLib.c ****     *
2012:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2013:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:.\Generated_Source\PSoC4/CyLib.c ****     *
2016:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:.\Generated_Source\PSoC4/CyLib.c ****     {
2019:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2020:.\Generated_Source\PSoC4/CyLib.c ****     }
2021:.\Generated_Source\PSoC4/CyLib.c **** 
2022:.\Generated_Source\PSoC4/CyLib.c **** 
2023:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 41


2024:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:.\Generated_Source\PSoC4/CyLib.c ****     *
2027:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:.\Generated_Source\PSoC4/CyLib.c ****     *
2029:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2030:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2031:.\Generated_Source\PSoC4/CyLib.c ****     *
2032:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:.\Generated_Source\PSoC4/CyLib.c ****     {
2035:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2036:.\Generated_Source\PSoC4/CyLib.c ****     }
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:.\Generated_Source\PSoC4/CyLib.c **** 
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:.\Generated_Source\PSoC4/CyLib.c **** *
2045:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:.\Generated_Source\PSoC4/CyLib.c **** *
2050:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:.\Generated_Source\PSoC4/CyLib.c **** *
2055:.\Generated_Source\PSoC4/CyLib.c **** * \return
2056:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:.\Generated_Source\PSoC4/CyLib.c **** *
2058:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:.\Generated_Source\PSoC4/CyLib.c **** {
 254              		.loc 1 2060 0
 255              		.cfi_startproc
 256              	.LVL18:
 257 0000 021C     		mov	r2, r0
2061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:.\Generated_Source\PSoC4/CyLib.c **** 
2063:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 258              		.loc 1 2063 0
 259 0002 1920     		mov	r0, #25
 260              	.LVL19:
 261 0004 0240     		and	r2, r0
 262              	.LVL20:
2064:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 263              		.loc 1 2064 0
 264 0006 0249     		ldr	r1, .L20
 265 0008 0B68     		ldr	r3, [r1]
 266 000a 1840     		and	r0, r3
 267              	.LVL21:
2065:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 42


 268              		.loc 1 2066 0
 269 000c 0A60     		str	r2, [r1]
2067:.\Generated_Source\PSoC4/CyLib.c **** 
2068:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:.\Generated_Source\PSoC4/CyLib.c **** }
 270              		.loc 1 2069 0
 271              		@ sp needed
 272 000e 7047     		bx	lr
 273              	.L21:
 274              		.align	2
 275              	.L20:
 276 0010 54000340 		.word	1073938516
 277              		.cfi_endproc
 278              	.LFE7:
 279              		.size	CySysGetResetReason, .-CySysGetResetReason
 280              		.section	.text.CyDisableInts,"ax",%progbits
 281              		.align	2
 282              		.global	CyDisableInts
 283              		.code	16
 284              		.thumb_func
 285              		.type	CyDisableInts, %function
 286              	CyDisableInts:
 287              	.LFB8:
2070:.\Generated_Source\PSoC4/CyLib.c **** 
2071:.\Generated_Source\PSoC4/CyLib.c **** 
2072:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:.\Generated_Source\PSoC4/CyLib.c **** *
2076:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:.\Generated_Source\PSoC4/CyLib.c **** *
2078:.\Generated_Source\PSoC4/CyLib.c **** * \return
2079:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:.\Generated_Source\PSoC4/CyLib.c **** *
2081:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:.\Generated_Source\PSoC4/CyLib.c **** {
 288              		.loc 1 2083 0
 289              		.cfi_startproc
2084:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:.\Generated_Source\PSoC4/CyLib.c **** 
2086:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 290              		.loc 1 2087 0
 291 0000 024B     		ldr	r3, .L23
 292 0002 1868     		ldr	r0, [r3]
 293              	.LVL22:
2088:.\Generated_Source\PSoC4/CyLib.c **** 
2089:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 294              		.loc 1 2090 0
 295 0004 0122     		mov	r2, #1
 296 0006 5242     		neg	r2, r2
 297 0008 1A60     		str	r2, [r3]
2091:.\Generated_Source\PSoC4/CyLib.c **** 
2092:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 43


 298              		.loc 1 2093 0
 299              		@ sp needed
 300 000a 7047     		bx	lr
 301              	.L24:
 302              		.align	2
 303              	.L23:
 304 000c 80E100E0 		.word	-536813184
 305              		.cfi_endproc
 306              	.LFE8:
 307              		.size	CyDisableInts, .-CyDisableInts
 308              		.section	.text.CyEnableInts,"ax",%progbits
 309              		.align	2
 310              		.global	CyEnableInts
 311              		.code	16
 312              		.thumb_func
 313              		.type	CyEnableInts, %function
 314              	CyEnableInts:
 315              	.LFB9:
2094:.\Generated_Source\PSoC4/CyLib.c **** 
2095:.\Generated_Source\PSoC4/CyLib.c **** 
2096:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:.\Generated_Source\PSoC4/CyLib.c **** *
2100:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:.\Generated_Source\PSoC4/CyLib.c **** *
2102:.\Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:.\Generated_Source\PSoC4/CyLib.c **** *
2104:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:.\Generated_Source\PSoC4/CyLib.c **** {
 316              		.loc 1 2106 0
 317              		.cfi_startproc
 318              	.LVL23:
2107:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 319              		.loc 1 2107 0
 320 0000 014B     		ldr	r3, .L26
 321 0002 1860     		str	r0, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c **** }
 322              		.loc 1 2108 0
 323              		@ sp needed
 324 0004 7047     		bx	lr
 325              	.L27:
 326 0006 C046     		.align	2
 327              	.L26:
 328 0008 00E100E0 		.word	-536813312
 329              		.cfi_endproc
 330              	.LFE9:
 331              		.size	CyEnableInts, .-CyEnableInts
 332              		.section	.text.CyIntEnable,"ax",%progbits
 333              		.align	2
 334              		.global	CyIntEnable
 335              		.code	16
 336              		.thumb_func
 337              		.type	CyIntEnable, %function
 338              	CyIntEnable:
 339              	.LFB16:
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 44


2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** 
2111:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:.\Generated_Source\PSoC4/CyLib.c **** *
2115:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:.\Generated_Source\PSoC4/CyLib.c **** *
2118:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:.\Generated_Source\PSoC4/CyLib.c **** *
2125:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:.\Generated_Source\PSoC4/CyLib.c **** *
2127:.\Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:.\Generated_Source\PSoC4/CyLib.c **** {
2132:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:.\Generated_Source\PSoC4/CyLib.c **** 
2135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:.\Generated_Source\PSoC4/CyLib.c **** 
2140:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:.\Generated_Source\PSoC4/CyLib.c **** 
2143:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:.\Generated_Source\PSoC4/CyLib.c **** }
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** 
2147:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:.\Generated_Source\PSoC4/CyLib.c **** *
2151:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:.\Generated_Source\PSoC4/CyLib.c **** *
2154:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:.\Generated_Source\PSoC4/CyLib.c **** *
2161:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:.\Generated_Source\PSoC4/CyLib.c **** *
2163:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 45


2166:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:.\Generated_Source\PSoC4/CyLib.c **** 
2168:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:.\Generated_Source\PSoC4/CyLib.c **** *
2180:.\Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:.\Generated_Source\PSoC4/CyLib.c **** *
2183:.\Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:.\Generated_Source\PSoC4/CyLib.c **** *
2185:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:.\Generated_Source\PSoC4/CyLib.c **** {
2188:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:.\Generated_Source\PSoC4/CyLib.c **** 
2191:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:.\Generated_Source\PSoC4/CyLib.c **** 
2196:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:.\Generated_Source\PSoC4/CyLib.c **** 
2199:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2200:.\Generated_Source\PSoC4/CyLib.c **** }
2201:.\Generated_Source\PSoC4/CyLib.c **** 
2202:.\Generated_Source\PSoC4/CyLib.c **** 
2203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:.\Generated_Source\PSoC4/CyLib.c **** *
2207:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:.\Generated_Source\PSoC4/CyLib.c **** *
2209:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:.\Generated_Source\PSoC4/CyLib.c **** *
2211:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:.\Generated_Source\PSoC4/CyLib.c **** *
2213:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:.\Generated_Source\PSoC4/CyLib.c **** {
2216:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:.\Generated_Source\PSoC4/CyLib.c **** 
2218:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:.\Generated_Source\PSoC4/CyLib.c **** 
2220:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:.\Generated_Source\PSoC4/CyLib.c **** }
2222:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 46


2223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:.\Generated_Source\PSoC4/CyLib.c **** *
2227:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:.\Generated_Source\PSoC4/CyLib.c **** *
2229:.\Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:.\Generated_Source\PSoC4/CyLib.c **** *
2232:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:.\Generated_Source\PSoC4/CyLib.c **** {
2235:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:.\Generated_Source\PSoC4/CyLib.c **** 
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:.\Generated_Source\PSoC4/CyLib.c **** 
2242:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:.\Generated_Source\PSoC4/CyLib.c **** 
2244:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:.\Generated_Source\PSoC4/CyLib.c **** 
2246:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:.\Generated_Source\PSoC4/CyLib.c **** 
2251:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:.\Generated_Source\PSoC4/CyLib.c **** }
2253:.\Generated_Source\PSoC4/CyLib.c **** 
2254:.\Generated_Source\PSoC4/CyLib.c **** 
2255:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:.\Generated_Source\PSoC4/CyLib.c **** *
2259:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:.\Generated_Source\PSoC4/CyLib.c **** *
2261:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:.\Generated_Source\PSoC4/CyLib.c **** *
2263:.\Generated_Source\PSoC4/CyLib.c **** * \return
2264:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:.\Generated_Source\PSoC4/CyLib.c **** *
2266:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:.\Generated_Source\PSoC4/CyLib.c **** {
2269:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:.\Generated_Source\PSoC4/CyLib.c **** 
2271:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:.\Generated_Source\PSoC4/CyLib.c **** 
2273:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:.\Generated_Source\PSoC4/CyLib.c **** 
2275:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:.\Generated_Source\PSoC4/CyLib.c **** }
2277:.\Generated_Source\PSoC4/CyLib.c **** 
2278:.\Generated_Source\PSoC4/CyLib.c **** 
2279:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 47


2280:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:.\Generated_Source\PSoC4/CyLib.c **** *
2283:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:.\Generated_Source\PSoC4/CyLib.c **** *
2285:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:.\Generated_Source\PSoC4/CyLib.c **** *
2287:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:.\Generated_Source\PSoC4/CyLib.c **** {
 340              		.loc 1 2289 0
 341              		.cfi_startproc
 342              	.LVL24:
2290:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 343              		.loc 1 2290 0
 344 0000 1F23     		mov	r3, #31
 345 0002 1840     		and	r0, r3
 346              	.LVL25:
 347 0004 1E3B     		sub	r3, r3, #30
 348 0006 8340     		lsl	r3, r3, r0
 349 0008 181C     		mov	r0, r3
 350 000a 014B     		ldr	r3, .L29
 351 000c 1860     		str	r0, [r3]
2291:.\Generated_Source\PSoC4/CyLib.c **** }
 352              		.loc 1 2291 0
 353              		@ sp needed
 354 000e 7047     		bx	lr
 355              	.L30:
 356              		.align	2
 357              	.L29:
 358 0010 00E100E0 		.word	-536813312
 359              		.cfi_endproc
 360              	.LFE16:
 361              		.size	CyIntEnable, .-CyIntEnable
 362              		.section	.text.CyIntGetState,"ax",%progbits
 363              		.align	2
 364              		.global	CyIntGetState
 365              		.code	16
 366              		.thumb_func
 367              		.type	CyIntGetState, %function
 368              	CyIntGetState:
 369              	.LFB17:
2292:.\Generated_Source\PSoC4/CyLib.c **** 
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:.\Generated_Source\PSoC4/CyLib.c **** *
2298:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:.\Generated_Source\PSoC4/CyLib.c **** *
2300:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * \return
2303:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 48


2307:.\Generated_Source\PSoC4/CyLib.c **** {
 370              		.loc 1 2307 0
 371              		.cfi_startproc
 372              	.LVL26:
2308:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 373              		.loc 1 2309 0
 374 0000 044B     		ldr	r3, .L32
 375 0002 1B68     		ldr	r3, [r3]
 376 0004 1F22     		mov	r2, #31
 377 0006 1040     		and	r0, r2
 378              	.LVL27:
 379 0008 C340     		lsr	r3, r3, r0
 380 000a 181C     		mov	r0, r3
 381 000c 0123     		mov	r3, #1
 382 000e 1840     		and	r0, r3
2310:.\Generated_Source\PSoC4/CyLib.c **** }
 383              		.loc 1 2310 0
 384              		@ sp needed
 385 0010 7047     		bx	lr
 386              	.L33:
 387 0012 C046     		.align	2
 388              	.L32:
 389 0014 00E100E0 		.word	-536813312
 390              		.cfi_endproc
 391              	.LFE17:
 392              		.size	CyIntGetState, .-CyIntGetState
 393              		.section	.text.CyIntDisable,"ax",%progbits
 394              		.align	2
 395              		.global	CyIntDisable
 396              		.code	16
 397              		.thumb_func
 398              		.type	CyIntDisable, %function
 399              	CyIntDisable:
 400              	.LFB18:
2311:.\Generated_Source\PSoC4/CyLib.c **** 
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:.\Generated_Source\PSoC4/CyLib.c **** *
2317:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:.\Generated_Source\PSoC4/CyLib.c **** *
2319:.\Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:.\Generated_Source\PSoC4/CyLib.c **** *
2321:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:.\Generated_Source\PSoC4/CyLib.c **** {
 401              		.loc 1 2323 0
 402              		.cfi_startproc
 403              	.LVL28:
2324:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 404              		.loc 1 2324 0
 405 0000 1F23     		mov	r3, #31
 406 0002 1840     		and	r0, r3
 407              	.LVL29:
 408 0004 1E3B     		sub	r3, r3, #30
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 49


 409 0006 8340     		lsl	r3, r3, r0
 410 0008 181C     		mov	r0, r3
 411 000a 014B     		ldr	r3, .L35
 412 000c 1860     		str	r0, [r3]
2325:.\Generated_Source\PSoC4/CyLib.c **** }
 413              		.loc 1 2325 0
 414              		@ sp needed
 415 000e 7047     		bx	lr
 416              	.L36:
 417              		.align	2
 418              	.L35:
 419 0010 80E100E0 		.word	-536813184
 420              		.cfi_endproc
 421              	.LFE18:
 422              		.size	CyIntDisable, .-CyIntDisable
 423              		.section	.text.CyIntSetPending,"ax",%progbits
 424              		.align	2
 425              		.global	CyIntSetPending
 426              		.code	16
 427              		.thumb_func
 428              		.type	CyIntSetPending, %function
 429              	CyIntSetPending:
 430              	.LFB19:
2326:.\Generated_Source\PSoC4/CyLib.c **** 
2327:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:.\Generated_Source\PSoC4/CyLib.c **** *
2331:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:.\Generated_Source\PSoC4/CyLib.c **** *
2333:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:.\Generated_Source\PSoC4/CyLib.c **** *
2335:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:.\Generated_Source\PSoC4/CyLib.c **** {
 431              		.loc 1 2337 0
 432              		.cfi_startproc
 433              	.LVL30:
2338:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 434              		.loc 1 2338 0
 435 0000 1F23     		mov	r3, #31
 436 0002 1840     		and	r0, r3
 437              	.LVL31:
 438 0004 1E3B     		sub	r3, r3, #30
 439 0006 8340     		lsl	r3, r3, r0
 440 0008 181C     		mov	r0, r3
 441 000a 014B     		ldr	r3, .L38
 442 000c 1860     		str	r0, [r3]
2339:.\Generated_Source\PSoC4/CyLib.c **** }
 443              		.loc 1 2339 0
 444              		@ sp needed
 445 000e 7047     		bx	lr
 446              	.L39:
 447              		.align	2
 448              	.L38:
 449 0010 00E200E0 		.word	-536813056
 450              		.cfi_endproc
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 50


 451              	.LFE19:
 452              		.size	CyIntSetPending, .-CyIntSetPending
 453              		.section	.text.CyIntClearPending,"ax",%progbits
 454              		.align	2
 455              		.global	CyIntClearPending
 456              		.code	16
 457              		.thumb_func
 458              		.type	CyIntClearPending, %function
 459              	CyIntClearPending:
 460              	.LFB20:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:.\Generated_Source\PSoC4/CyLib.c **** *
2346:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:.\Generated_Source\PSoC4/CyLib.c **** *
2348:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:.\Generated_Source\PSoC4/CyLib.c **** *
2350:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:.\Generated_Source\PSoC4/CyLib.c **** {
 461              		.loc 1 2352 0
 462              		.cfi_startproc
 463              	.LVL32:
2353:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 464              		.loc 1 2353 0
 465 0000 1F23     		mov	r3, #31
 466 0002 1840     		and	r0, r3
 467              	.LVL33:
 468 0004 1E3B     		sub	r3, r3, #30
 469 0006 8340     		lsl	r3, r3, r0
 470 0008 181C     		mov	r0, r3
 471 000a 014B     		ldr	r3, .L41
 472 000c 1860     		str	r0, [r3]
2354:.\Generated_Source\PSoC4/CyLib.c **** }
 473              		.loc 1 2354 0
 474              		@ sp needed
 475 000e 7047     		bx	lr
 476              	.L42:
 477              		.align	2
 478              	.L41:
 479 0010 80E200E0 		.word	-536812928
 480              		.cfi_endproc
 481              	.LFE20:
 482              		.size	CyIntClearPending, .-CyIntClearPending
 483              		.section	.text.CyHalt,"ax",%progbits
 484              		.align	2
 485              		.global	CyHalt
 486              		.code	16
 487              		.thumb_func
 488              		.type	CyHalt, %function
 489              	CyHalt:
 490              	.LFB21:
2355:.\Generated_Source\PSoC4/CyLib.c **** 
2356:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 51


2357:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:.\Generated_Source\PSoC4/CyLib.c **** *
2361:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:.\Generated_Source\PSoC4/CyLib.c **** *
2363:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:.\Generated_Source\PSoC4/CyLib.c **** {
 491              		.loc 1 2367 0
 492              		.cfi_startproc
 493              	.LVL34:
2368:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:.\Generated_Source\PSoC4/CyLib.c ****     {
2370:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:.\Generated_Source\PSoC4/CyLib.c ****     }
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 494              		.loc 1 2376 0
 495              	@ 2376 ".\Generated_Source\PSoC4\CyLib.c" 1
 496 0000 01BE     		    bkpt    1
 497              	@ 0 "" 2
2377:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:.\Generated_Source\PSoC4/CyLib.c **** }
 498              		.loc 1 2380 0
 499              		.code	16
 500              		@ sp needed
 501 0002 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE21:
 504              		.size	CyHalt, .-CyHalt
 505              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 506              		.align	2
 507              		.global	CySysClkWriteImoFreq
 508              		.code	16
 509              		.thumb_func
 510              		.type	CySysClkWriteImoFreq, %function
 511              	CySysClkWriteImoFreq:
 512              	.LFB5:
 782:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 513              		.loc 1 782 0
 514              		.cfi_startproc
 515              	.LVL35:
 516 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 517              		.cfi_def_cfa_offset 24
 518              		.cfi_offset 3, -24
 519              		.cfi_offset 4, -20
 520              		.cfi_offset 5, -16
 521              		.cfi_offset 6, -12
 522              		.cfi_offset 7, -8
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 52


 523              		.cfi_offset 14, -4
 524 0002 041E     		sub	r4, r0, #0
 795:.\Generated_Source\PSoC4/CyLib.c ****         #else
 525              		.loc 1 795 0
 526 0004 182C     		cmp	r4, #24
 527 0006 03D0     		beq	.L45
 795:.\Generated_Source\PSoC4/CyLib.c ****         #else
 528              		.loc 1 795 0 is_stmt 0 discriminator 1
 529 0008 2028     		cmp	r0, #32
 530 000a 01D0     		beq	.L45
 795:.\Generated_Source\PSoC4/CyLib.c ****         #else
 531              		.loc 1 795 0 discriminator 2
 532 000c 3028     		cmp	r0, #48
 533 000e 3CD1     		bne	.L46
 534              	.L45:
 802:.\Generated_Source\PSoC4/CyLib.c **** 
 535              		.loc 1 802 0 is_stmt 1
 536 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 537              	.LVL36:
 538 0014 051C     		mov	r5, r0
 539              	.LVL37:
 833:.\Generated_Source\PSoC4/CyLib.c **** 
 540              		.loc 1 833 0
 541 0016 1F4A     		ldr	r2, .L49
 542 0018 1368     		ldr	r3, [r2]
 543 001a 0721     		mov	r1, #7
 544 001c 8B43     		bic	r3, r1
 545 001e 1360     		str	r3, [r2]
 851:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 546              		.loc 1 851 0
 547 0020 1D4B     		ldr	r3, .L49+4
 548 0022 E318     		add	r3, r4, r3
 549 0024 1B78     		ldrb	r3, [r3]
 550 0026 DBB2     		uxtb	r3, r3
 551              	.LVL38:
 853:.\Generated_Source\PSoC4/CyLib.c **** 
 552              		.loc 1 853 0
 553 0028 1C4A     		ldr	r2, .L49+8
 554 002a 1360     		str	r3, [r2]
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 555              		.loc 1 856 0
 556 002c 1C4A     		ldr	r2, .L49+12
 557 002e 1368     		ldr	r3, [r2]
 558              	.LVL39:
 559 0030 8B43     		bic	r3, r1
 560 0032 1360     		str	r3, [r2]
 561              	.LVL40:
 859:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 562              		.loc 1 859 0
 563 0034 1B48     		ldr	r0, .L49+16
 564 0036 0368     		ldr	r3, [r0]
 565 0038 7F22     		mov	r2, #127
 566 003a 9343     		bic	r3, r2
 567 003c 191C     		mov	r1, r3
 860:.\Generated_Source\PSoC4/CyLib.c **** 
 568              		.loc 1 860 0
 569 003e 1A4B     		ldr	r3, .L49+20
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 53


 570 0040 E318     		add	r3, r4, r3
 571 0042 1B78     		ldrb	r3, [r3]
 572 0044 1340     		and	r3, r2
 859:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 573              		.loc 1 859 0
 574 0046 0B43     		orr	r3, r1
 575 0048 0360     		str	r3, [r0]
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 576              		.loc 1 862 0
 577 004a 3220     		mov	r0, #50
 578 004c FFF7FEFF 		bl	CyDelayCycles
 579              	.LVL41:
 864:.\Generated_Source\PSoC4/CyLib.c ****             {
 580              		.loc 1 864 0
 581 0050 182C     		cmp	r4, #24
 582 0052 16D9     		bls	.L47
 867:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 583              		.loc 1 867 0
 584 0054 0F4E     		ldr	r6, .L49
 585 0056 3368     		ldr	r3, [r6]
 586 0058 0727     		mov	r7, #7
 587 005a BB43     		bic	r3, r7
 588 005c 1A1C     		mov	r2, r3
 868:.\Generated_Source\PSoC4/CyLib.c **** 
 589              		.loc 1 868 0
 590 005e 231C     		mov	r3, r4
 591 0060 1C3B     		sub	r3, r3, #28
 592 0062 9B08     		lsr	r3, r3, #2
 593 0064 3B40     		and	r3, r7
 867:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 594              		.loc 1 867 0
 595 0066 1343     		orr	r3, r2
 596 0068 3360     		str	r3, [r6]
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 597              		.loc 1 870 0
 598 006a 3220     		mov	r0, #50
 599 006c FFF7FEFF 		bl	CyDelayCycles
 600              	.LVL42:
 874:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 601              		.loc 1 874 0
 602 0070 3268     		ldr	r2, [r6]
 603 0072 BA43     		bic	r2, r7
 875:.\Generated_Source\PSoC4/CyLib.c ****             }
 604              		.loc 1 875 0
 605 0074 231C     		mov	r3, r4
 606 0076 183B     		sub	r3, r3, #24
 607 0078 9B08     		lsr	r3, r3, #2
 608 007a 3C1C     		mov	r4, r7
 609              	.LVL43:
 610 007c 1C40     		and	r4, r3
 874:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 611              		.loc 1 874 0
 612 007e 1443     		orr	r4, r2
 613 0080 3460     		str	r4, [r6]
 614              	.L47:
 893:.\Generated_Source\PSoC4/CyLib.c ****         }
 615              		.loc 1 893 0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 54


 616 0082 281C     		mov	r0, r5
 617 0084 FFF7FEFF 		bl	CyExitCriticalSection
 618              	.LVL44:
 619 0088 02E0     		b	.L44
 620              	.LVL45:
 621              	.L46:
 898:.\Generated_Source\PSoC4/CyLib.c ****         }
 622              		.loc 1 898 0 discriminator 1
 623 008a 0020     		mov	r0, #0
 624              	.LVL46:
 625 008c FFF7FEFF 		bl	CyHalt
 626              	.LVL47:
 627              	.L44:
 900:.\Generated_Source\PSoC4/CyLib.c **** 
 628              		.loc 1 900 0
 629              		@ sp needed
 630 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 631              	.L50:
 632 0092 C046     		.align	2
 633              	.L49:
 634 0094 080F0340 		.word	1073942280
 635 0098 CDF1FF0F 		.word	268431821
 636 009c 0C0F0340 		.word	1073942284
 637 00a0 100F0340 		.word	1073942288
 638 00a4 180F0340 		.word	1073942296
 639 00a8 B4F1FF0F 		.word	268431796
 640              		.cfi_endproc
 641              	.LFE5:
 642              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 643              		.section	.text.CyIntSetSysVector,"ax",%progbits
 644              		.align	2
 645              		.global	CyIntSetSysVector
 646              		.code	16
 647              		.thumb_func
 648              		.type	CyIntSetSysVector, %function
 649              	CyIntSetSysVector:
 650              	.LFB10:
2131:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 651              		.loc 1 2131 0
 652              		.cfi_startproc
 653              	.LVL48:
 654 0000 38B5     		push	{r3, r4, r5, lr}
 655              		.cfi_def_cfa_offset 16
 656              		.cfi_offset 3, -16
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 5, -8
 659              		.cfi_offset 14, -4
 660 0002 041C     		mov	r4, r0
 661 0004 0D1C     		mov	r5, r1
 662              	.LVL49:
2135:.\Generated_Source\PSoC4/CyLib.c **** 
 663              		.loc 1 2135 0
 664 0006 0F28     		cmp	r0, #15
 665 0008 02D9     		bls	.L52
2135:.\Generated_Source\PSoC4/CyLib.c **** 
 666              		.loc 1 2135 0 is_stmt 0 discriminator 1
 667 000a 0020     		mov	r0, #0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 55


 668              	.LVL50:
 669 000c FFF7FEFF 		bl	CyHalt
 670              	.LVL51:
 671              	.L52:
2138:.\Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2138 0 is_stmt 1
 673 0010 A400     		lsl	r4, r4, #2
 674 0012 8023     		mov	r3, #128
 675 0014 9B05     		lsl	r3, r3, #22
 676 0016 9C46     		mov	ip, r3
 677 0018 6444     		add	r4, r4, ip
 678 001a 2068     		ldr	r0, [r4]
 679              	.LVL52:
2141:.\Generated_Source\PSoC4/CyLib.c **** 
 680              		.loc 1 2141 0
 681 001c 2560     		str	r5, [r4]
2144:.\Generated_Source\PSoC4/CyLib.c **** 
 682              		.loc 1 2144 0
 683              		@ sp needed
 684              	.LVL53:
 685 001e 38BD     		pop	{r3, r4, r5, pc}
 686              		.cfi_endproc
 687              	.LFE10:
 688              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 689              		.section	.text.CyIntGetSysVector,"ax",%progbits
 690              		.align	2
 691              		.global	CyIntGetSysVector
 692              		.code	16
 693              		.thumb_func
 694              		.type	CyIntGetSysVector, %function
 695              	CyIntGetSysVector:
 696              	.LFB11:
2165:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 697              		.loc 1 2165 0
 698              		.cfi_startproc
 699              	.LVL54:
 700 0000 10B5     		push	{r4, lr}
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 4, -8
 703              		.cfi_offset 14, -4
 704 0002 041E     		sub	r4, r0, #0
 705              	.LVL55:
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 706              		.loc 1 2168 0
 707 0004 0F2C     		cmp	r4, #15
 708 0006 02D9     		bls	.L54
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 709              		.loc 1 2168 0 is_stmt 0 discriminator 1
 710 0008 0020     		mov	r0, #0
 711              	.LVL56:
 712 000a FFF7FEFF 		bl	CyHalt
 713              	.LVL57:
 714              	.L54:
2170:.\Generated_Source\PSoC4/CyLib.c **** }
 715              		.loc 1 2170 0 is_stmt 1
 716 000e A400     		lsl	r4, r4, #2
 717 0010 8023     		mov	r3, #128
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 56


 718 0012 9B05     		lsl	r3, r3, #22
 719 0014 9C46     		mov	ip, r3
 720 0016 6444     		add	r4, r4, ip
 721 0018 2068     		ldr	r0, [r4]
2171:.\Generated_Source\PSoC4/CyLib.c **** 
 722              		.loc 1 2171 0
 723              		@ sp needed
 724 001a 10BD     		pop	{r4, pc}
 725              		.cfi_endproc
 726              	.LFE11:
 727              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 728              		.section	.text.CyIntSetVector,"ax",%progbits
 729              		.align	2
 730              		.global	CyIntSetVector
 731              		.code	16
 732              		.thumb_func
 733              		.type	CyIntSetVector, %function
 734              	CyIntSetVector:
 735              	.LFB12:
2187:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 736              		.loc 1 2187 0
 737              		.cfi_startproc
 738              	.LVL58:
 739 0000 38B5     		push	{r3, r4, r5, lr}
 740              		.cfi_def_cfa_offset 16
 741              		.cfi_offset 3, -16
 742              		.cfi_offset 4, -12
 743              		.cfi_offset 5, -8
 744              		.cfi_offset 14, -4
 745 0002 041C     		mov	r4, r0
 746 0004 0D1C     		mov	r5, r1
 747              	.LVL59:
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 748              		.loc 1 2191 0
 749 0006 0828     		cmp	r0, #8
 750 0008 02D9     		bls	.L56
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 751              		.loc 1 2191 0 is_stmt 0 discriminator 1
 752 000a 0020     		mov	r0, #0
 753              	.LVL60:
 754 000c FFF7FEFF 		bl	CyHalt
 755              	.LVL61:
 756              	.L56:
2194:.\Generated_Source\PSoC4/CyLib.c **** 
 757              		.loc 1 2194 0 is_stmt 1
 758 0010 A400     		lsl	r4, r4, #2
 759 0012 034B     		ldr	r3, .L57
 760 0014 9C46     		mov	ip, r3
 761 0016 6444     		add	r4, r4, ip
 762 0018 2068     		ldr	r0, [r4]
 763              	.LVL62:
2197:.\Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 2197 0
 765 001a 2560     		str	r5, [r4]
2200:.\Generated_Source\PSoC4/CyLib.c **** 
 766              		.loc 1 2200 0
 767              		@ sp needed
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 57


 768              	.LVL63:
 769 001c 38BD     		pop	{r3, r4, r5, pc}
 770              	.L58:
 771 001e C046     		.align	2
 772              	.L57:
 773 0020 40000020 		.word	536870976
 774              		.cfi_endproc
 775              	.LFE12:
 776              		.size	CyIntSetVector, .-CyIntSetVector
 777              		.section	.text.CyIntGetVector,"ax",%progbits
 778              		.align	2
 779              		.global	CyIntGetVector
 780              		.code	16
 781              		.thumb_func
 782              		.type	CyIntGetVector, %function
 783              	CyIntGetVector:
 784              	.LFB13:
2215:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 785              		.loc 1 2215 0
 786              		.cfi_startproc
 787              	.LVL64:
 788 0000 10B5     		push	{r4, lr}
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 4, -8
 791              		.cfi_offset 14, -4
 792 0002 041E     		sub	r4, r0, #0
 793              	.LVL65:
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 794              		.loc 1 2218 0
 795 0004 082C     		cmp	r4, #8
 796 0006 02D9     		bls	.L60
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 797              		.loc 1 2218 0 is_stmt 0 discriminator 1
 798 0008 0020     		mov	r0, #0
 799              	.LVL66:
 800 000a FFF7FEFF 		bl	CyHalt
 801              	.LVL67:
 802              	.L60:
2220:.\Generated_Source\PSoC4/CyLib.c **** }
 803              		.loc 1 2220 0 is_stmt 1
 804 000e A400     		lsl	r4, r4, #2
 805 0010 024B     		ldr	r3, .L61
 806 0012 9C46     		mov	ip, r3
 807 0014 6444     		add	r4, r4, ip
 808 0016 2068     		ldr	r0, [r4]
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 809              		.loc 1 2221 0
 810              		@ sp needed
 811 0018 10BD     		pop	{r4, pc}
 812              	.L62:
 813 001a C046     		.align	2
 814              	.L61:
 815 001c 40000020 		.word	536870976
 816              		.cfi_endproc
 817              	.LFE13:
 818              		.size	CyIntGetVector, .-CyIntGetVector
 819              		.section	.text.CyIntSetPriority,"ax",%progbits
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 58


 820              		.align	2
 821              		.global	CyIntSetPriority
 822              		.code	16
 823              		.thumb_func
 824              		.type	CyIntSetPriority, %function
 825              	CyIntSetPriority:
 826              	.LFB14:
2234:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 827              		.loc 1 2234 0
 828              		.cfi_startproc
 829              	.LVL68:
 830 0000 70B5     		push	{r4, r5, r6, lr}
 831              		.cfi_def_cfa_offset 16
 832              		.cfi_offset 4, -16
 833              		.cfi_offset 5, -12
 834              		.cfi_offset 6, -8
 835              		.cfi_offset 14, -4
 836 0002 041C     		mov	r4, r0
 837 0004 0E1E     		sub	r6, r1, #0
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 838              		.loc 1 2239 0
 839 0006 032E     		cmp	r6, #3
 840 0008 02D9     		bls	.L64
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 841              		.loc 1 2239 0 is_stmt 0 discriminator 1
 842 000a 0020     		mov	r0, #0
 843              	.LVL69:
 844 000c FFF7FEFF 		bl	CyHalt
 845              	.LVL70:
 846              	.L64:
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 847              		.loc 1 2240 0 is_stmt 1
 848 0010 082C     		cmp	r4, #8
 849 0012 02D9     		bls	.L65
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 850              		.loc 1 2240 0 is_stmt 0 discriminator 1
 851 0014 0020     		mov	r0, #0
 852 0016 FFF7FEFF 		bl	CyHalt
 853              	.LVL71:
 854              	.L65:
2242:.\Generated_Source\PSoC4/CyLib.c **** 
 855              		.loc 1 2242 0 is_stmt 1
 856 001a 0325     		mov	r5, #3
 857 001c 2540     		and	r5, r4
 858 001e ED00     		lsl	r5, r5, #3
 859 0020 0635     		add	r5, r5, #6
 860              	.LVL72:
2244:.\Generated_Source\PSoC4/CyLib.c **** 
 861              		.loc 1 2244 0
 862 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 863              	.LVL73:
2246:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 864              		.loc 1 2246 0
 865 0026 A408     		lsr	r4, r4, #2
 866 0028 A400     		lsl	r4, r4, #2
 867 002a 074B     		ldr	r3, .L66
 868 002c 9C46     		mov	ip, r3
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 59


 869 002e 6444     		add	r4, r4, ip
 870 0030 2368     		ldr	r3, [r4]
 871              	.LVL74:
2247:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 872              		.loc 1 2247 0
 873 0032 0322     		mov	r2, #3
 874 0034 AA40     		lsl	r2, r2, r5
 875 0036 9343     		bic	r3, r2
 876              	.LVL75:
2248:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 877              		.loc 1 2248 0
 878 0038 AE40     		lsl	r6, r6, r5
 879 003a 351C     		mov	r5, r6
 880              	.LVL76:
 881 003c 1D43     		orr	r5, r3
 882              	.LVL77:
2249:.\Generated_Source\PSoC4/CyLib.c **** 
 883              		.loc 1 2249 0
 884 003e 2560     		str	r5, [r4]
2251:.\Generated_Source\PSoC4/CyLib.c **** }
 885              		.loc 1 2251 0
 886 0040 FFF7FEFF 		bl	CyExitCriticalSection
 887              	.LVL78:
2252:.\Generated_Source\PSoC4/CyLib.c **** 
 888              		.loc 1 2252 0
 889              		@ sp needed
 890              	.LVL79:
 891 0044 70BD     		pop	{r4, r5, r6, pc}
 892              	.L67:
 893 0046 C046     		.align	2
 894              	.L66:
 895 0048 00E400E0 		.word	-536812544
 896              		.cfi_endproc
 897              	.LFE14:
 898              		.size	CyIntSetPriority, .-CyIntSetPriority
 899              		.section	.text.CyIntGetPriority,"ax",%progbits
 900              		.align	2
 901              		.global	CyIntGetPriority
 902              		.code	16
 903              		.thumb_func
 904              		.type	CyIntGetPriority, %function
 905              	CyIntGetPriority:
 906              	.LFB15:
2268:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 907              		.loc 1 2268 0
 908              		.cfi_startproc
 909              	.LVL80:
 910 0000 10B5     		push	{r4, lr}
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 4, -8
 913              		.cfi_offset 14, -4
 914 0002 041E     		sub	r4, r0, #0
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 915              		.loc 1 2271 0
 916 0004 082C     		cmp	r4, #8
 917 0006 02D9     		bls	.L69
2271:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 60


 918              		.loc 1 2271 0 is_stmt 0 discriminator 1
 919 0008 0020     		mov	r0, #0
 920              	.LVL81:
 921 000a FFF7FEFF 		bl	CyHalt
 922              	.LVL82:
 923              	.L69:
2273:.\Generated_Source\PSoC4/CyLib.c **** 
 924              		.loc 1 2273 0 is_stmt 1
 925 000e A308     		lsr	r3, r4, #2
 926 0010 9B00     		lsl	r3, r3, #2
 927 0012 054A     		ldr	r2, .L70
 928 0014 9446     		mov	ip, r2
 929 0016 6344     		add	r3, r3, ip
 930 0018 1868     		ldr	r0, [r3]
 931 001a 0323     		mov	r3, #3
 932 001c 1C40     		and	r4, r3
 933 001e E400     		lsl	r4, r4, #3
 934 0020 0634     		add	r4, r4, #6
 935 0022 E040     		lsr	r0, r0, r4
 936              	.LVL83:
2275:.\Generated_Source\PSoC4/CyLib.c **** }
 937              		.loc 1 2275 0
 938 0024 1840     		and	r0, r3
 939              	.LVL84:
2276:.\Generated_Source\PSoC4/CyLib.c **** 
 940              		.loc 1 2276 0
 941              		@ sp needed
 942 0026 10BD     		pop	{r4, pc}
 943              	.L71:
 944              		.align	2
 945              	.L70:
 946 0028 00E400E0 		.word	-536812544
 947              		.cfi_endproc
 948              	.LFE15:
 949              		.size	CyIntGetPriority, .-CyIntGetPriority
 950              		.section	.text.CySoftwareReset,"ax",%progbits
 951              		.align	2
 952              		.global	CySoftwareReset
 953              		.code	16
 954              		.thumb_func
 955              		.type	CySoftwareReset, %function
 956              	CySoftwareReset:
 957              	.LFB22:
2381:.\Generated_Source\PSoC4/CyLib.c **** 
2382:.\Generated_Source\PSoC4/CyLib.c **** 
2383:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:.\Generated_Source\PSoC4/CyLib.c **** *
2387:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:.\Generated_Source\PSoC4/CyLib.c **** *
2389:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:.\Generated_Source\PSoC4/CyLib.c **** {
 958              		.loc 1 2391 0
 959              		.cfi_startproc
2392:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 61


2393:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 960              		.loc 1 2396 0
 961 0000 034A     		ldr	r2, .L73
 962 0002 1368     		ldr	r3, [r2]
 963 0004 1B04     		lsl	r3, r3, #16
 964 0006 1B0C     		lsr	r3, r3, #16
2397:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 965              		.loc 1 2397 0
 966 0008 0249     		ldr	r1, .L73+4
 967 000a 0B43     		orr	r3, r1
2396:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 968              		.loc 1 2396 0
 969 000c 1360     		str	r3, [r2]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 970              		.loc 1 2398 0
 971              		@ sp needed
 972 000e 7047     		bx	lr
 973              	.L74:
 974              		.align	2
 975              	.L73:
 976 0010 0CED00E0 		.word	-536810228
 977 0014 0400FA05 		.word	100270084
 978              		.cfi_endproc
 979              	.LFE22:
 980              		.size	CySoftwareReset, .-CySoftwareReset
 981              		.section	.text.CyDelay,"ax",%progbits
 982              		.align	2
 983              		.global	CyDelay
 984              		.code	16
 985              		.thumb_func
 986              		.type	CyDelay, %function
 987              	CyDelay:
 988              	.LFB23:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:.\Generated_Source\PSoC4/CyLib.c **** *
2407:.\Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:.\Generated_Source\PSoC4/CyLib.c **** *
2409:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:.\Generated_Source\PSoC4/CyLib.c **** {
 989              		.loc 1 2411 0
 990              		.cfi_startproc
 991              	.LVL85:
 992 0000 10B5     		push	{r4, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 4, -8
 995              		.cfi_offset 14, -4
 996 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 62


2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 997              		.loc 1 2412 0
 998 0004 06E0     		b	.L76
 999              	.LVL86:
 1000              	.L77:
2413:.\Generated_Source\PSoC4/CyLib.c ****     {
2414:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:.\Generated_Source\PSoC4/CyLib.c ****          */
2417:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1001              		.loc 1 2417 0
 1002 0006 084B     		ldr	r3, .L78
 1003 0008 1868     		ldr	r0, [r3]
 1004 000a FFF7FEFF 		bl	CyDelayCycles
 1005              	.LVL87:
2418:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1006              		.loc 1 2418 0
 1007 000e 074B     		ldr	r3, .L78+4
 1008 0010 9C46     		mov	ip, r3
 1009 0012 6444     		add	r4, r4, ip
 1010              	.LVL88:
 1011              	.L76:
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1012              		.loc 1 2412 0
 1013 0014 8023     		mov	r3, #128
 1014 0016 1B02     		lsl	r3, r3, #8
 1015 0018 9C42     		cmp	r4, r3
 1016 001a F4D8     		bhi	.L77
2419:.\Generated_Source\PSoC4/CyLib.c ****     }
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1017              		.loc 1 2421 0
 1018 001c 024B     		ldr	r3, .L78
 1019 001e 5868     		ldr	r0, [r3, #4]
 1020 0020 6043     		mul	r0, r4
 1021 0022 FFF7FEFF 		bl	CyDelayCycles
 1022              	.LVL89:
2422:.\Generated_Source\PSoC4/CyLib.c **** }
 1023              		.loc 1 2422 0
 1024              		@ sp needed
 1025              	.LVL90:
 1026 0026 10BD     		pop	{r4, pc}
 1027              	.L79:
 1028              		.align	2
 1029              	.L78:
 1030 0028 00000000 		.word	.LANCHOR0
 1031 002c 0080FFFF 		.word	-32768
 1032              		.cfi_endproc
 1033              	.LFE23:
 1034              		.size	CyDelay, .-CyDelay
 1035              		.section	.text.CyDelayUs,"ax",%progbits
 1036              		.align	2
 1037              		.global	CyDelayUs
 1038              		.code	16
 1039              		.thumb_func
 1040              		.type	CyDelayUs, %function
 1041              	CyDelayUs:
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 63


 1042              	.LFB24:
2423:.\Generated_Source\PSoC4/CyLib.c **** 
2424:.\Generated_Source\PSoC4/CyLib.c **** 
2425:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:.\Generated_Source\PSoC4/CyLib.c **** *
2430:.\Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:.\Generated_Source\PSoC4/CyLib.c **** {
 1043              		.loc 1 2434 0
 1044              		.cfi_startproc
 1045              	.LVL91:
 1046 0000 08B5     		push	{r3, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 3, -8
 1049              		.cfi_offset 14, -4
2435:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1050              		.loc 1 2435 0
 1051 0002 034B     		ldr	r3, .L81
 1052 0004 1B7A     		ldrb	r3, [r3, #8]
 1053 0006 5843     		mul	r0, r3
 1054              	.LVL92:
 1055 0008 FFF7FEFF 		bl	CyDelayCycles
 1056              	.LVL93:
2436:.\Generated_Source\PSoC4/CyLib.c **** }
 1057              		.loc 1 2436 0
 1058              		@ sp needed
 1059 000c 08BD     		pop	{r3, pc}
 1060              	.L82:
 1061 000e C046     		.align	2
 1062              	.L81:
 1063 0010 00000000 		.word	.LANCHOR0
 1064              		.cfi_endproc
 1065              	.LFE24:
 1066              		.size	CyDelayUs, .-CyDelayUs
 1067              		.global	__aeabi_uidiv
 1068              		.section	.text.CyDelayFreq,"ax",%progbits
 1069              		.align	2
 1070              		.global	CyDelayFreq
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CyDelayFreq, %function
 1074              	CyDelayFreq:
 1075              	.LFB25:
2437:.\Generated_Source\PSoC4/CyLib.c **** 
2438:.\Generated_Source\PSoC4/CyLib.c **** 
2439:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:.\Generated_Source\PSoC4/CyLib.c **** *
2444:.\Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 64


2446:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:.\Generated_Source\PSoC4/CyLib.c **** {
 1076              		.loc 1 2448 0
 1077              		.cfi_startproc
 1078              	.LVL94:
 1079 0000 38B5     		push	{r3, r4, r5, lr}
 1080              		.cfi_def_cfa_offset 16
 1081              		.cfi_offset 3, -16
 1082              		.cfi_offset 4, -12
 1083              		.cfi_offset 5, -8
 1084              		.cfi_offset 14, -4
2449:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1085              		.loc 1 2449 0
 1086 0002 0028     		cmp	r0, #0
 1087 0004 02D0     		beq	.L84
2450:.\Generated_Source\PSoC4/CyLib.c ****     {
2451:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1088              		.loc 1 2451 0
 1089 0006 0C4B     		ldr	r3, .L86
 1090 0008 D860     		str	r0, [r3, #12]
 1091 000a 02E0     		b	.L85
 1092              	.L84:
2452:.\Generated_Source\PSoC4/CyLib.c ****     }
2453:.\Generated_Source\PSoC4/CyLib.c ****     else
2454:.\Generated_Source\PSoC4/CyLib.c ****     {
2455:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1093              		.loc 1 2455 0
 1094 000c 0B4A     		ldr	r2, .L86+4
 1095 000e 0A4B     		ldr	r3, .L86
 1096 0010 DA60     		str	r2, [r3, #12]
 1097              	.L85:
2456:.\Generated_Source\PSoC4/CyLib.c ****     }
2457:.\Generated_Source\PSoC4/CyLib.c **** 
2458:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1098              		.loc 1 2458 0
 1099 0012 094C     		ldr	r4, .L86
 1100 0014 E568     		ldr	r5, [r4, #12]
 1101 0016 0A4B     		ldr	r3, .L86+8
 1102 0018 E818     		add	r0, r5, r3
 1103              	.LVL95:
 1104 001a 0A49     		ldr	r1, .L86+12
 1105 001c FFF7FEFF 		bl	__aeabi_uidiv
 1106              	.LVL96:
 1107 0020 2072     		strb	r0, [r4, #8]
2459:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1108              		.loc 1 2459 0
 1109 0022 094B     		ldr	r3, .L86+16
 1110 0024 E818     		add	r0, r5, r3
 1111 0026 FA21     		mov	r1, #250
 1112 0028 8900     		lsl	r1, r1, #2
 1113 002a FFF7FEFF 		bl	__aeabi_uidiv
 1114              	.LVL97:
 1115 002e 6060     		str	r0, [r4, #4]
2460:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1116              		.loc 1 2460 0
 1117 0030 C003     		lsl	r0, r0, #15
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 65


 1118 0032 2060     		str	r0, [r4]
2461:.\Generated_Source\PSoC4/CyLib.c **** }
 1119              		.loc 1 2461 0
 1120              		@ sp needed
 1121 0034 38BD     		pop	{r3, r4, r5, pc}
 1122              	.L87:
 1123 0036 C046     		.align	2
 1124              	.L86:
 1125 0038 00000000 		.word	.LANCHOR0
 1126 003c 001BB700 		.word	12000000
 1127 0040 3F420F00 		.word	999999
 1128 0044 40420F00 		.word	1000000
 1129 0048 E7030000 		.word	999
 1130              		.cfi_endproc
 1131              	.LFE25:
 1132              		.size	CyDelayFreq, .-CyDelayFreq
 1133              		.section	.text.CySysTickStop,"ax",%progbits
 1134              		.align	2
 1135              		.global	CySysTickStop
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	CySysTickStop, %function
 1139              	CySysTickStop:
 1140              	.LFB29:
2462:.\Generated_Source\PSoC4/CyLib.c **** 
2463:.\Generated_Source\PSoC4/CyLib.c **** 
2464:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:.\Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:.\Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:.\Generated_Source\PSoC4/CyLib.c **** *
2475:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:.\Generated_Source\PSoC4/CyLib.c **** *
2478:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:.\Generated_Source\PSoC4/CyLib.c **** {
2481:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:.\Generated_Source\PSoC4/CyLib.c ****     {
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2485:.\Generated_Source\PSoC4/CyLib.c ****     }
2486:.\Generated_Source\PSoC4/CyLib.c **** 
2487:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:.\Generated_Source\PSoC4/CyLib.c **** }
2489:.\Generated_Source\PSoC4/CyLib.c **** 
2490:.\Generated_Source\PSoC4/CyLib.c **** 
2491:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 66


2495:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:.\Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:.\Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:.\Generated_Source\PSoC4/CyLib.c **** *
2500:.\Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:.\Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:.\Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:.\Generated_Source\PSoC4/CyLib.c **** *
2504:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:.\Generated_Source\PSoC4/CyLib.c **** *
2507:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:.\Generated_Source\PSoC4/CyLib.c **** {
2510:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:.\Generated_Source\PSoC4/CyLib.c ****     {
2514:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:.\Generated_Source\PSoC4/CyLib.c ****     }
2516:.\Generated_Source\PSoC4/CyLib.c **** 
2517:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:.\Generated_Source\PSoC4/CyLib.c **** 
2519:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:.\Generated_Source\PSoC4/CyLib.c **** 
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:.\Generated_Source\PSoC4/CyLib.c **** }
2527:.\Generated_Source\PSoC4/CyLib.c **** 
2528:.\Generated_Source\PSoC4/CyLib.c **** 
2529:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:.\Generated_Source\PSoC4/CyLib.c **** *
2533:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:.\Generated_Source\PSoC4/CyLib.c **** *
2535:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:.\Generated_Source\PSoC4/CyLib.c **** *
2538:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:.\Generated_Source\PSoC4/CyLib.c **** {
2541:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2542:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:.\Generated_Source\PSoC4/CyLib.c **** }
2544:.\Generated_Source\PSoC4/CyLib.c **** 
2545:.\Generated_Source\PSoC4/CyLib.c **** 
2546:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 67


2552:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:.\Generated_Source\PSoC4/CyLib.c **** *
2555:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:.\Generated_Source\PSoC4/CyLib.c **** {
 1141              		.loc 1 2557 0
 1142              		.cfi_startproc
2558:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1143              		.loc 1 2558 0
 1144 0000 024A     		ldr	r2, .L89
 1145 0002 1368     		ldr	r3, [r2]
 1146 0004 0121     		mov	r1, #1
 1147 0006 8B43     		bic	r3, r1
 1148 0008 1360     		str	r3, [r2]
2559:.\Generated_Source\PSoC4/CyLib.c **** }
 1149              		.loc 1 2559 0
 1150              		@ sp needed
 1151 000a 7047     		bx	lr
 1152              	.L90:
 1153              		.align	2
 1154              	.L89:
 1155 000c 10E000E0 		.word	-536813552
 1156              		.cfi_endproc
 1157              	.LFE29:
 1158              		.size	CySysTickStop, .-CySysTickStop
 1159              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1160              		.align	2
 1161              		.global	CySysTickEnableInterrupt
 1162              		.code	16
 1163              		.thumb_func
 1164              		.type	CySysTickEnableInterrupt, %function
 1165              	CySysTickEnableInterrupt:
 1166              	.LFB30:
2560:.\Generated_Source\PSoC4/CyLib.c **** 
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:.\Generated_Source\PSoC4/CyLib.c **** *
2566:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:.\Generated_Source\PSoC4/CyLib.c **** *
2568:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:.\Generated_Source\PSoC4/CyLib.c **** *
2571:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:.\Generated_Source\PSoC4/CyLib.c **** {
 1167              		.loc 1 2573 0
 1168              		.cfi_startproc
2574:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1169              		.loc 1 2574 0
 1170 0000 024A     		ldr	r2, .L92
 1171 0002 1168     		ldr	r1, [r2]
 1172 0004 0223     		mov	r3, #2
 1173 0006 0B43     		orr	r3, r1
 1174 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 68


2575:.\Generated_Source\PSoC4/CyLib.c **** }
 1175              		.loc 1 2575 0
 1176              		@ sp needed
 1177 000a 7047     		bx	lr
 1178              	.L93:
 1179              		.align	2
 1180              	.L92:
 1181 000c 10E000E0 		.word	-536813552
 1182              		.cfi_endproc
 1183              	.LFE30:
 1184              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1185              		.section	.text.CySysTickEnable,"ax",%progbits
 1186              		.align	2
 1187              		.global	CySysTickEnable
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CySysTickEnable, %function
 1191              	CySysTickEnable:
 1192              	.LFB28:
2540:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1193              		.loc 1 2540 0
 1194              		.cfi_startproc
 1195 0000 08B5     		push	{r3, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 3, -8
 1198              		.cfi_offset 14, -4
2541:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1199              		.loc 1 2541 0
 1200 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1201              	.LVL98:
2542:.\Generated_Source\PSoC4/CyLib.c **** }
 1202              		.loc 1 2542 0
 1203 0006 034A     		ldr	r2, .L95
 1204 0008 1168     		ldr	r1, [r2]
 1205 000a 0123     		mov	r3, #1
 1206 000c 0B43     		orr	r3, r1
 1207 000e 1360     		str	r3, [r2]
2543:.\Generated_Source\PSoC4/CyLib.c **** 
 1208              		.loc 1 2543 0
 1209              		@ sp needed
 1210 0010 08BD     		pop	{r3, pc}
 1211              	.L96:
 1212 0012 C046     		.align	2
 1213              	.L95:
 1214 0014 10E000E0 		.word	-536813552
 1215              		.cfi_endproc
 1216              	.LFE28:
 1217              		.size	CySysTickEnable, .-CySysTickEnable
 1218              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1219              		.align	2
 1220              		.global	CySysTickDisableInterrupt
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CySysTickDisableInterrupt, %function
 1224              	CySysTickDisableInterrupt:
 1225              	.LFB31:
2576:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 69


2577:.\Generated_Source\PSoC4/CyLib.c **** 
2578:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:.\Generated_Source\PSoC4/CyLib.c **** *
2582:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:.\Generated_Source\PSoC4/CyLib.c **** *
2584:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:.\Generated_Source\PSoC4/CyLib.c **** *
2587:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:.\Generated_Source\PSoC4/CyLib.c **** {
 1226              		.loc 1 2589 0
 1227              		.cfi_startproc
2590:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1228              		.loc 1 2590 0
 1229 0000 024A     		ldr	r2, .L98
 1230 0002 1368     		ldr	r3, [r2]
 1231 0004 0221     		mov	r1, #2
 1232 0006 8B43     		bic	r3, r1
 1233 0008 1360     		str	r3, [r2]
2591:.\Generated_Source\PSoC4/CyLib.c **** }
 1234              		.loc 1 2591 0
 1235              		@ sp needed
 1236 000a 7047     		bx	lr
 1237              	.L99:
 1238              		.align	2
 1239              	.L98:
 1240 000c 10E000E0 		.word	-536813552
 1241              		.cfi_endproc
 1242              	.LFE31:
 1243              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1244              		.section	.text.CySysTickSetReload,"ax",%progbits
 1245              		.align	2
 1246              		.global	CySysTickSetReload
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	CySysTickSetReload, %function
 1250              	CySysTickSetReload:
 1251              	.LFB32:
2592:.\Generated_Source\PSoC4/CyLib.c **** 
2593:.\Generated_Source\PSoC4/CyLib.c **** 
2594:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:.\Generated_Source\PSoC4/CyLib.c **** *
2598:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:.\Generated_Source\PSoC4/CyLib.c **** *
2602:.\Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:.\Generated_Source\PSoC4/CyLib.c **** *
2604:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:.\Generated_Source\PSoC4/CyLib.c **** {
 1252              		.loc 1 2606 0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 70


 1253              		.cfi_startproc
 1254              	.LVL99:
2607:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1255              		.loc 1 2607 0
 1256 0000 0002     		lsl	r0, r0, #8
 1257              	.LVL100:
 1258 0002 000A     		lsr	r0, r0, #8
 1259 0004 014B     		ldr	r3, .L101
 1260 0006 1860     		str	r0, [r3]
2608:.\Generated_Source\PSoC4/CyLib.c **** }
 1261              		.loc 1 2608 0
 1262              		@ sp needed
 1263 0008 7047     		bx	lr
 1264              	.L102:
 1265 000a C046     		.align	2
 1266              	.L101:
 1267 000c 14E000E0 		.word	-536813548
 1268              		.cfi_endproc
 1269              	.LFE32:
 1270              		.size	CySysTickSetReload, .-CySysTickSetReload
 1271              		.section	.text.CySysTickGetReload,"ax",%progbits
 1272              		.align	2
 1273              		.global	CySysTickGetReload
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CySysTickGetReload, %function
 1277              	CySysTickGetReload:
 1278              	.LFB33:
2609:.\Generated_Source\PSoC4/CyLib.c **** 
2610:.\Generated_Source\PSoC4/CyLib.c **** 
2611:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:.\Generated_Source\PSoC4/CyLib.c **** *
2615:.\Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:.\Generated_Source\PSoC4/CyLib.c **** *
2617:.\Generated_Source\PSoC4/CyLib.c **** * \return
2618:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:.\Generated_Source\PSoC4/CyLib.c **** *
2620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:.\Generated_Source\PSoC4/CyLib.c **** {
 1279              		.loc 1 2622 0
 1280              		.cfi_startproc
2623:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1281              		.loc 1 2623 0
 1282 0000 024B     		ldr	r3, .L104
 1283 0002 1868     		ldr	r0, [r3]
 1284 0004 0002     		lsl	r0, r0, #8
 1285 0006 000A     		lsr	r0, r0, #8
2624:.\Generated_Source\PSoC4/CyLib.c **** }
 1286              		.loc 1 2624 0
 1287              		@ sp needed
 1288 0008 7047     		bx	lr
 1289              	.L105:
 1290 000a C046     		.align	2
 1291              	.L104:
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 71


 1292 000c 14E000E0 		.word	-536813548
 1293              		.cfi_endproc
 1294              	.LFE33:
 1295              		.size	CySysTickGetReload, .-CySysTickGetReload
 1296              		.section	.text.CySysTickGetValue,"ax",%progbits
 1297              		.align	2
 1298              		.global	CySysTickGetValue
 1299              		.code	16
 1300              		.thumb_func
 1301              		.type	CySysTickGetValue, %function
 1302              	CySysTickGetValue:
 1303              	.LFB34:
2625:.\Generated_Source\PSoC4/CyLib.c **** 
2626:.\Generated_Source\PSoC4/CyLib.c **** 
2627:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:.\Generated_Source\PSoC4/CyLib.c **** *
2631:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:.\Generated_Source\PSoC4/CyLib.c **** *
2633:.\Generated_Source\PSoC4/CyLib.c **** * \return
2634:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:.\Generated_Source\PSoC4/CyLib.c **** *
2636:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:.\Generated_Source\PSoC4/CyLib.c **** {
 1304              		.loc 1 2638 0
 1305              		.cfi_startproc
2639:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1306              		.loc 1 2639 0
 1307 0000 024B     		ldr	r3, .L107
 1308 0002 1868     		ldr	r0, [r3]
 1309 0004 0002     		lsl	r0, r0, #8
 1310 0006 000A     		lsr	r0, r0, #8
2640:.\Generated_Source\PSoC4/CyLib.c **** }
 1311              		.loc 1 2640 0
 1312              		@ sp needed
 1313 0008 7047     		bx	lr
 1314              	.L108:
 1315 000a C046     		.align	2
 1316              	.L107:
 1317 000c 18E000E0 		.word	-536813544
 1318              		.cfi_endproc
 1319              	.LFE34:
 1320              		.size	CySysTickGetValue, .-CySysTickGetValue
 1321              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1322              		.align	2
 1323              		.global	CySysTickGetCountFlag
 1324              		.code	16
 1325              		.thumb_func
 1326              		.type	CySysTickGetCountFlag, %function
 1327              	CySysTickGetCountFlag:
 1328              	.LFB35:
2641:.\Generated_Source\PSoC4/CyLib.c **** 
2642:.\Generated_Source\PSoC4/CyLib.c **** 
2643:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 72


2645:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:.\Generated_Source\PSoC4/CyLib.c ****     *
2648:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:.\Generated_Source\PSoC4/CyLib.c ****     *
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:.\Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:.\Generated_Source\PSoC4/CyLib.c ****     *
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:.\Generated_Source\PSoC4/CyLib.c ****     *
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
2671:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2672:.\Generated_Source\PSoC4/CyLib.c ****         {
2673:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2674:.\Generated_Source\PSoC4/CyLib.c ****         }
2675:.\Generated_Source\PSoC4/CyLib.c ****         else
2676:.\Generated_Source\PSoC4/CyLib.c ****         {
2677:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2678:.\Generated_Source\PSoC4/CyLib.c ****         }
2679:.\Generated_Source\PSoC4/CyLib.c ****     }
2680:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:.\Generated_Source\PSoC4/CyLib.c **** 
2682:.\Generated_Source\PSoC4/CyLib.c **** 
2683:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:.\Generated_Source\PSoC4/CyLib.c **** *
2687:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:.\Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:.\Generated_Source\PSoC4/CyLib.c **** *
2690:.\Generated_Source\PSoC4/CyLib.c **** * \return
2691:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:.\Generated_Source\PSoC4/CyLib.c **** *
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:.\Generated_Source\PSoC4/CyLib.c **** {
 1329              		.loc 1 2699 0
 1330              		.cfi_startproc
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 73


2700:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1331              		.loc 1 2700 0
 1332 0000 024B     		ldr	r3, .L110
 1333 0002 1868     		ldr	r0, [r3]
 1334 0004 C003     		lsl	r0, r0, #15
 1335 0006 C00F     		lsr	r0, r0, #31
2701:.\Generated_Source\PSoC4/CyLib.c **** }
 1336              		.loc 1 2701 0
 1337              		@ sp needed
 1338 0008 7047     		bx	lr
 1339              	.L111:
 1340 000a C046     		.align	2
 1341              	.L110:
 1342 000c 10E000E0 		.word	-536813552
 1343              		.cfi_endproc
 1344              	.LFE35:
 1345              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1346              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1347              		.align	2
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CySysTickServiceCallbacks, %function
 1351              	CySysTickServiceCallbacks:
 1352              	.LFB39:
2702:.\Generated_Source\PSoC4/CyLib.c **** 
2703:.\Generated_Source\PSoC4/CyLib.c **** 
2704:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:.\Generated_Source\PSoC4/CyLib.c **** *
2708:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:.\Generated_Source\PSoC4/CyLib.c **** *
2710:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:.\Generated_Source\PSoC4/CyLib.c **** {
2713:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:.\Generated_Source\PSoC4/CyLib.c **** }
2715:.\Generated_Source\PSoC4/CyLib.c **** 
2716:.\Generated_Source\PSoC4/CyLib.c **** 
2717:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:.\Generated_Source\PSoC4/CyLib.c **** *
2725:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:.\Generated_Source\PSoC4/CyLib.c **** *
2731:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:.\Generated_Source\PSoC4/CyLib.c **** *
2734:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 74


2735:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:.\Generated_Source\PSoC4/CyLib.c **** *
2738:.\Generated_Source\PSoC4/CyLib.c **** * \return
2739:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:.\Generated_Source\PSoC4/CyLib.c **** *
2742:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:.\Generated_Source\PSoC4/CyLib.c **** *
2745:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:.\Generated_Source\PSoC4/CyLib.c **** {
2748:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:.\Generated_Source\PSoC4/CyLib.c **** 
2750:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:.\Generated_Source\PSoC4/CyLib.c **** }
2754:.\Generated_Source\PSoC4/CyLib.c **** 
2755:.\Generated_Source\PSoC4/CyLib.c **** 
2756:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:.\Generated_Source\PSoC4/CyLib.c **** *
2760:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:.\Generated_Source\PSoC4/CyLib.c **** *
2762:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:.\Generated_Source\PSoC4/CyLib.c **** *
2765:.\Generated_Source\PSoC4/CyLib.c **** * \return
2766:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:.\Generated_Source\PSoC4/CyLib.c **** *
2769:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:.\Generated_Source\PSoC4/CyLib.c **** {
2772:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:.\Generated_Source\PSoC4/CyLib.c **** }
2774:.\Generated_Source\PSoC4/CyLib.c **** 
2775:.\Generated_Source\PSoC4/CyLib.c **** 
2776:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:.\Generated_Source\PSoC4/CyLib.c **** *
2780:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:.\Generated_Source\PSoC4/CyLib.c **** *
2782:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:.\Generated_Source\PSoC4/CyLib.c **** {
 1353              		.loc 1 2784 0
 1354              		.cfi_startproc
 1355 0000 10B5     		push	{r4, lr}
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 4, -8
 1358              		.cfi_offset 14, -4
2785:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 75


2786:.\Generated_Source\PSoC4/CyLib.c **** 
2787:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1359              		.loc 1 2788 0
 1360 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1361              	.LVL101:
 1362 0006 0128     		cmp	r0, #1
 1363 0008 0BD1     		bne	.L112
 1364 000a 07E0     		b	.L117
 1365              	.LVL102:
 1366              	.L116:
2789:.\Generated_Source\PSoC4/CyLib.c ****     {
2790:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:.\Generated_Source\PSoC4/CyLib.c ****         {
2792:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1367              		.loc 1 2792 0
 1368 000c A300     		lsl	r3, r4, #2
 1369 000e 054A     		ldr	r2, .L118
 1370 0010 9B58     		ldr	r3, [r3, r2]
 1371 0012 002B     		cmp	r3, #0
 1372 0014 00D0     		beq	.L115
2793:.\Generated_Source\PSoC4/CyLib.c ****             {
2794:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1373              		.loc 1 2794 0
 1374 0016 9847     		blx	r3
 1375              	.LVL103:
 1376              	.L115:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1377              		.loc 1 2790 0 discriminator 2
 1378 0018 0134     		add	r4, r4, #1
 1379              	.LVL104:
 1380 001a 00E0     		b	.L113
 1381              	.LVL105:
 1382              	.L117:
 1383 001c 0024     		mov	r4, #0
 1384              	.L113:
 1385              	.LVL106:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1386              		.loc 1 2790 0 is_stmt 0 discriminator 1
 1387 001e 042C     		cmp	r4, #4
 1388 0020 F4D9     		bls	.L116
 1389              	.LVL107:
 1390              	.L112:
2795:.\Generated_Source\PSoC4/CyLib.c ****             }
2796:.\Generated_Source\PSoC4/CyLib.c ****         }
2797:.\Generated_Source\PSoC4/CyLib.c ****     }
2798:.\Generated_Source\PSoC4/CyLib.c **** }
 1391              		.loc 1 2798 0 is_stmt 1
 1392              		@ sp needed
 1393 0022 10BD     		pop	{r4, pc}
 1394              	.L119:
 1395              		.align	2
 1396              	.L118:
 1397 0024 00000000 		.word	.LANCHOR1
 1398              		.cfi_endproc
 1399              	.LFE39:
 1400              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 76


 1401              		.section	.text.CySysTickClear,"ax",%progbits
 1402              		.align	2
 1403              		.global	CySysTickClear
 1404              		.code	16
 1405              		.thumb_func
 1406              		.type	CySysTickClear, %function
 1407              	CySysTickClear:
 1408              	.LFB36:
2712:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1409              		.loc 1 2712 0
 1410              		.cfi_startproc
2713:.\Generated_Source\PSoC4/CyLib.c **** }
 1411              		.loc 1 2713 0
 1412 0000 0022     		mov	r2, #0
 1413 0002 014B     		ldr	r3, .L121
 1414 0004 1A60     		str	r2, [r3]
2714:.\Generated_Source\PSoC4/CyLib.c **** 
 1415              		.loc 1 2714 0
 1416              		@ sp needed
 1417 0006 7047     		bx	lr
 1418              	.L122:
 1419              		.align	2
 1420              	.L121:
 1421 0008 18E000E0 		.word	-536813544
 1422              		.cfi_endproc
 1423              	.LFE36:
 1424              		.size	CySysTickClear, .-CySysTickClear
 1425              		.section	.text.CySysTickInit,"ax",%progbits
 1426              		.align	2
 1427              		.global	CySysTickInit
 1428              		.code	16
 1429              		.thumb_func
 1430              		.type	CySysTickInit, %function
 1431              	CySysTickInit:
 1432              	.LFB27:
2509:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1433              		.loc 1 2509 0
 1434              		.cfi_startproc
 1435 0000 08B5     		push	{r3, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 3, -8
 1438              		.cfi_offset 14, -4
 1439              	.LVL108:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1440              		.loc 1 2512 0
 1441 0002 0023     		mov	r3, #0
 1442 0004 04E0     		b	.L124
 1443              	.LVL109:
 1444              	.L125:
2514:.\Generated_Source\PSoC4/CyLib.c ****     }
 1445              		.loc 1 2514 0 discriminator 3
 1446 0006 9900     		lsl	r1, r3, #2
 1447 0008 0020     		mov	r0, #0
 1448 000a 0B4A     		ldr	r2, .L126
 1449 000c 8850     		str	r0, [r1, r2]
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1450              		.loc 1 2512 0 discriminator 3
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 77


 1451 000e 0133     		add	r3, r3, #1
 1452              	.LVL110:
 1453              	.L124:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1454              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1455 0010 042B     		cmp	r3, #4
 1456 0012 F8D9     		bls	.L125
2517:.\Generated_Source\PSoC4/CyLib.c **** 
 1457              		.loc 1 2517 0 is_stmt 1
 1458 0014 0F20     		mov	r0, #15
 1459 0016 0949     		ldr	r1, .L126+4
 1460 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1461              	.LVL111:
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1462              		.loc 1 2523 0
 1463 001c 084B     		ldr	r3, .L126+8
 1464 001e D868     		ldr	r0, [r3, #12]
 1465 0020 FA21     		mov	r1, #250
 1466 0022 8900     		lsl	r1, r1, #2
 1467 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1468              	.LVL112:
 1469 0028 FFF7FEFF 		bl	CySysTickSetReload
 1470              	.LVL113:
2524:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1471              		.loc 1 2524 0
 1472 002c FFF7FEFF 		bl	CySysTickClear
 1473              	.LVL114:
2525:.\Generated_Source\PSoC4/CyLib.c **** }
 1474              		.loc 1 2525 0
 1475 0030 0F20     		mov	r0, #15
 1476 0032 FFF7FEFF 		bl	CyIntEnable
 1477              	.LVL115:
2526:.\Generated_Source\PSoC4/CyLib.c **** 
 1478              		.loc 1 2526 0
 1479              		@ sp needed
 1480 0036 08BD     		pop	{r3, pc}
 1481              	.L127:
 1482              		.align	2
 1483              	.L126:
 1484 0038 00000000 		.word	.LANCHOR1
 1485 003c 00000000 		.word	CySysTickServiceCallbacks
 1486 0040 00000000 		.word	.LANCHOR0
 1487              		.cfi_endproc
 1488              	.LFE27:
 1489              		.size	CySysTickInit, .-CySysTickInit
 1490              		.section	.text.CySysTickStart,"ax",%progbits
 1491              		.align	2
 1492              		.global	CySysTickStart
 1493              		.code	16
 1494              		.thumb_func
 1495              		.type	CySysTickStart, %function
 1496              	CySysTickStart:
 1497              	.LFB26:
2480:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1498              		.loc 1 2480 0
 1499              		.cfi_startproc
 1500 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 78


 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 3, -8
 1503              		.cfi_offset 14, -4
2481:.\Generated_Source\PSoC4/CyLib.c ****     {
 1504              		.loc 1 2481 0
 1505 0002 064B     		ldr	r3, .L130
 1506 0004 5B69     		ldr	r3, [r3, #20]
 1507 0006 002B     		cmp	r3, #0
 1508 0008 04D1     		bne	.L129
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1509              		.loc 1 2483 0
 1510 000a FFF7FEFF 		bl	CySysTickInit
 1511              	.LVL116:
2484:.\Generated_Source\PSoC4/CyLib.c ****     }
 1512              		.loc 1 2484 0
 1513 000e 0122     		mov	r2, #1
 1514 0010 024B     		ldr	r3, .L130
 1515 0012 5A61     		str	r2, [r3, #20]
 1516              	.L129:
2487:.\Generated_Source\PSoC4/CyLib.c **** }
 1517              		.loc 1 2487 0
 1518 0014 FFF7FEFF 		bl	CySysTickEnable
 1519              	.LVL117:
2488:.\Generated_Source\PSoC4/CyLib.c **** 
 1520              		.loc 1 2488 0
 1521              		@ sp needed
 1522 0018 08BD     		pop	{r3, pc}
 1523              	.L131:
 1524 001a C046     		.align	2
 1525              	.L130:
 1526 001c 00000000 		.word	.LANCHOR1
 1527              		.cfi_endproc
 1528              	.LFE26:
 1529              		.size	CySysTickStart, .-CySysTickStart
 1530              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1531              		.align	2
 1532              		.global	CySysTickSetCallback
 1533              		.code	16
 1534              		.thumb_func
 1535              		.type	CySysTickSetCallback, %function
 1536              	CySysTickSetCallback:
 1537              	.LFB37:
2747:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1538              		.loc 1 2747 0
 1539              		.cfi_startproc
 1540              	.LVL118:
2750:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1541              		.loc 1 2750 0
 1542 0000 024A     		ldr	r2, .L133
 1543 0002 8300     		lsl	r3, r0, #2
 1544 0004 9858     		ldr	r0, [r3, r2]
 1545              	.LVL119:
2751:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1546              		.loc 1 2751 0
 1547 0006 9950     		str	r1, [r3, r2]
2753:.\Generated_Source\PSoC4/CyLib.c **** 
 1548              		.loc 1 2753 0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 79


 1549              		@ sp needed
 1550 0008 7047     		bx	lr
 1551              	.L134:
 1552 000a C046     		.align	2
 1553              	.L133:
 1554 000c 00000000 		.word	.LANCHOR1
 1555              		.cfi_endproc
 1556              	.LFE37:
 1557              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1558              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1559              		.align	2
 1560              		.global	CySysTickGetCallback
 1561              		.code	16
 1562              		.thumb_func
 1563              		.type	CySysTickGetCallback, %function
 1564              	CySysTickGetCallback:
 1565              	.LFB38:
2771:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1566              		.loc 1 2771 0
 1567              		.cfi_startproc
 1568              	.LVL120:
2772:.\Generated_Source\PSoC4/CyLib.c **** }
 1569              		.loc 1 2772 0
 1570 0000 8000     		lsl	r0, r0, #2
 1571              	.LVL121:
 1572 0002 014B     		ldr	r3, .L136
 1573 0004 C058     		ldr	r0, [r0, r3]
2773:.\Generated_Source\PSoC4/CyLib.c **** 
 1574              		.loc 1 2773 0
 1575              		@ sp needed
 1576 0006 7047     		bx	lr
 1577              	.L137:
 1578              		.align	2
 1579              	.L136:
 1580 0008 00000000 		.word	.LANCHOR1
 1581              		.cfi_endproc
 1582              	.LFE38:
 1583              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1584              		.section	.text.CyGetUniqueId,"ax",%progbits
 1585              		.align	2
 1586              		.global	CyGetUniqueId
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CyGetUniqueId, %function
 1590              	CyGetUniqueId:
 1591              	.LFB40:
2799:.\Generated_Source\PSoC4/CyLib.c **** 
2800:.\Generated_Source\PSoC4/CyLib.c **** 
2801:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:.\Generated_Source\PSoC4/CyLib.c **** *
2805:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 80


2810:.\Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:.\Generated_Source\PSoC4/CyLib.c **** *
2814:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:.\Generated_Source\PSoC4/CyLib.c **** {
 1592              		.loc 1 2816 0
 1593              		.cfi_startproc
 1594              	.LVL122:
2817:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1595              		.loc 1 2818 0
 1596 0000 134B     		ldr	r3, .L139
 1597 0002 1B78     		ldrb	r3, [r3]
 1598 0004 DAB2     		uxtb	r2, r3
 1599 0006 0260     		str	r2, [r0]
2819:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1600              		.loc 1 2819 0
 1601 0008 124B     		ldr	r3, .L139+4
 1602 000a 1B78     		ldrb	r3, [r3]
 1603 000c 1B02     		lsl	r3, r3, #8
 1604 000e 1343     		orr	r3, r2
 1605 0010 0360     		str	r3, [r0]
2820:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1606              		.loc 1 2820 0
 1607 0012 114A     		ldr	r2, .L139+8
 1608 0014 1278     		ldrb	r2, [r2]
 1609 0016 1204     		lsl	r2, r2, #16
 1610 0018 1343     		orr	r3, r2
 1611 001a 0360     		str	r3, [r0]
2821:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1612              		.loc 1 2821 0
 1613 001c 0F4A     		ldr	r2, .L139+12
 1614 001e 1278     		ldrb	r2, [r2]
 1615 0020 1206     		lsl	r2, r2, #24
 1616 0022 1343     		orr	r3, r2
 1617 0024 0360     		str	r3, [r0]
2822:.\Generated_Source\PSoC4/CyLib.c **** 
2823:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1618              		.loc 1 2823 0
 1619 0026 0E4B     		ldr	r3, .L139+16
 1620 0028 1B78     		ldrb	r3, [r3]
 1621 002a DAB2     		uxtb	r2, r3
 1622 002c 4260     		str	r2, [r0, #4]
2824:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1623              		.loc 1 2824 0
 1624 002e 0D4B     		ldr	r3, .L139+20
 1625 0030 1B78     		ldrb	r3, [r3]
 1626 0032 1B02     		lsl	r3, r3, #8
 1627 0034 1343     		orr	r3, r2
 1628 0036 4360     		str	r3, [r0, #4]
2825:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1629              		.loc 1 2825 0
 1630 0038 0B4A     		ldr	r2, .L139+24
 1631 003a 1278     		ldrb	r2, [r2]
 1632 003c 1204     		lsl	r2, r2, #16
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 81


 1633 003e 1343     		orr	r3, r2
 1634 0040 4360     		str	r3, [r0, #4]
2826:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1635              		.loc 1 2826 0
 1636 0042 0A4A     		ldr	r2, .L139+28
 1637 0044 1278     		ldrb	r2, [r2]
 1638 0046 1206     		lsl	r2, r2, #24
 1639 0048 1343     		orr	r3, r2
 1640 004a 4360     		str	r3, [r0, #4]
2827:.\Generated_Source\PSoC4/CyLib.c **** #else
2828:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:.\Generated_Source\PSoC4/CyLib.c **** 
2833:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:.\Generated_Source\PSoC4/CyLib.c **** }
 1641              		.loc 1 2838 0
 1642              		@ sp needed
 1643 004c 7047     		bx	lr
 1644              	.L140:
 1645 004e C046     		.align	2
 1646              	.L139:
 1647 0050 78F1FF0F 		.word	268431736
 1648 0054 79F1FF0F 		.word	268431737
 1649 0058 7AF1FF0F 		.word	268431738
 1650 005c 7BF1FF0F 		.word	268431739
 1651 0060 7CF1FF0F 		.word	268431740
 1652 0064 7DF1FF0F 		.word	268431741
 1653 0068 7EF1FF0F 		.word	268431742
 1654 006c 7FF1FF0F 		.word	268431743
 1655              		.cfi_endproc
 1656              	.LFE40:
 1657              		.size	CyGetUniqueId, .-CyGetUniqueId
 1658              		.global	CySysTickInitVar
 1659              		.global	cydelay32kMs
 1660              		.global	cydelayFreqMhz
 1661              		.global	cydelayFreqKhz
 1662              		.global	cydelayFreqHz
 1663              		.data
 1664              		.align	2
 1665              		.set	.LANCHOR0,. + 0
 1666              		.type	cydelay32kMs, %object
 1667              		.size	cydelay32kMs, 4
 1668              	cydelay32kMs:
 1669 0000 00007017 		.word	393216000
 1670              		.type	cydelayFreqKhz, %object
 1671              		.size	cydelayFreqKhz, 4
 1672              	cydelayFreqKhz:
 1673 0004 E02E0000 		.word	12000
 1674              		.type	cydelayFreqMhz, %object
 1675              		.size	cydelayFreqMhz, 1
 1676              	cydelayFreqMhz:
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 82


 1677 0008 0C       		.byte	12
 1678 0009 000000   		.space	3
 1679              		.type	cydelayFreqHz, %object
 1680              		.size	cydelayFreqHz, 4
 1681              	cydelayFreqHz:
 1682 000c 001BB700 		.word	12000000
 1683              		.bss
 1684              		.align	2
 1685              		.set	.LANCHOR1,. + 0
 1686              		.type	CySysTickCallbacks, %object
 1687              		.size	CySysTickCallbacks, 20
 1688              	CySysTickCallbacks:
 1689 0000 00000000 		.space	20
 1689      00000000 
 1689      00000000 
 1689      00000000 
 1689      00000000 
 1690              		.type	CySysTickInitVar, %object
 1691              		.size	CySysTickInitVar, 4
 1692              	CySysTickInitVar:
 1693 0014 00000000 		.space	4
 1694              		.text
 1695              	.Letext0:
 1696              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1697              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1698              		.section	.debug_info,"",%progbits
 1699              	.Ldebug_info0:
 1700 0000 0B0A0000 		.4byte	0xa0b
 1701 0004 0400     		.2byte	0x4
 1702 0006 00000000 		.4byte	.Ldebug_abbrev0
 1703 000a 04       		.byte	0x4
 1704 000b 01       		.uleb128 0x1
 1705 000c C4030000 		.4byte	.LASF89
 1706 0010 01       		.byte	0x1
 1707 0011 ED020000 		.4byte	.LASF90
 1708 0015 59010000 		.4byte	.LASF91
 1709 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1710 001d 00000000 		.4byte	0
 1711 0021 00000000 		.4byte	.Ldebug_line0
 1712 0025 02       		.uleb128 0x2
 1713 0026 01       		.byte	0x1
 1714 0027 06       		.byte	0x6
 1715 0028 BC000000 		.4byte	.LASF0
 1716 002c 02       		.uleb128 0x2
 1717 002d 01       		.byte	0x1
 1718 002e 08       		.byte	0x8
 1719 002f D5040000 		.4byte	.LASF1
 1720 0033 02       		.uleb128 0x2
 1721 0034 02       		.byte	0x2
 1722 0035 05       		.byte	0x5
 1723 0036 E3040000 		.4byte	.LASF2
 1724 003a 02       		.uleb128 0x2
 1725 003b 02       		.byte	0x2
 1726 003c 07       		.byte	0x7
 1727 003d CB020000 		.4byte	.LASF3
 1728 0041 02       		.uleb128 0x2
 1729 0042 04       		.byte	0x4
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 83


 1730 0043 05       		.byte	0x5
 1731 0044 FB000000 		.4byte	.LASF4
 1732 0048 02       		.uleb128 0x2
 1733 0049 04       		.byte	0x4
 1734 004a 07       		.byte	0x7
 1735 004b 6E020000 		.4byte	.LASF5
 1736 004f 02       		.uleb128 0x2
 1737 0050 08       		.byte	0x8
 1738 0051 05       		.byte	0x5
 1739 0052 AE000000 		.4byte	.LASF6
 1740 0056 02       		.uleb128 0x2
 1741 0057 08       		.byte	0x8
 1742 0058 07       		.byte	0x7
 1743 0059 54000000 		.4byte	.LASF7
 1744 005d 03       		.uleb128 0x3
 1745 005e 04       		.byte	0x4
 1746 005f 05       		.byte	0x5
 1747 0060 696E7400 		.ascii	"int\000"
 1748 0064 02       		.uleb128 0x2
 1749 0065 04       		.byte	0x4
 1750 0066 07       		.byte	0x7
 1751 0067 52020000 		.4byte	.LASF8
 1752 006b 04       		.uleb128 0x4
 1753 006c 26010000 		.4byte	.LASF9
 1754 0070 02       		.byte	0x2
 1755 0071 9801     		.2byte	0x198
 1756 0073 2C000000 		.4byte	0x2c
 1757 0077 04       		.uleb128 0x4
 1758 0078 0F000000 		.4byte	.LASF10
 1759 007c 02       		.byte	0x2
 1760 007d 9901     		.2byte	0x199
 1761 007f 3A000000 		.4byte	0x3a
 1762 0083 04       		.uleb128 0x4
 1763 0084 52010000 		.4byte	.LASF11
 1764 0088 02       		.byte	0x2
 1765 0089 9A01     		.2byte	0x19a
 1766 008b 48000000 		.4byte	0x48
 1767 008f 02       		.uleb128 0x2
 1768 0090 04       		.byte	0x4
 1769 0091 04       		.byte	0x4
 1770 0092 71040000 		.4byte	.LASF12
 1771 0096 02       		.uleb128 0x2
 1772 0097 08       		.byte	0x8
 1773 0098 04       		.byte	0x4
 1774 0099 45010000 		.4byte	.LASF13
 1775 009d 02       		.uleb128 0x2
 1776 009e 01       		.byte	0x1
 1777 009f 08       		.byte	0x8
 1778 00a0 1C050000 		.4byte	.LASF14
 1779 00a4 04       		.uleb128 0x4
 1780 00a5 C9040000 		.4byte	.LASF15
 1781 00a9 02       		.byte	0x2
 1782 00aa 4202     		.2byte	0x242
 1783 00ac B0000000 		.4byte	0xb0
 1784 00b0 05       		.uleb128 0x5
 1785 00b1 6B000000 		.4byte	0x6b
 1786 00b5 04       		.uleb128 0x4
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 84


 1787 00b6 3E030000 		.4byte	.LASF16
 1788 00ba 02       		.byte	0x2
 1789 00bb 4402     		.2byte	0x244
 1790 00bd C1000000 		.4byte	0xc1
 1791 00c1 05       		.uleb128 0x5
 1792 00c2 83000000 		.4byte	0x83
 1793 00c6 04       		.uleb128 0x4
 1794 00c7 21050000 		.4byte	.LASF17
 1795 00cb 02       		.byte	0x2
 1796 00cc 5402     		.2byte	0x254
 1797 00ce D2000000 		.4byte	0xd2
 1798 00d2 06       		.uleb128 0x6
 1799 00d3 04       		.byte	0x4
 1800 00d4 D8000000 		.4byte	0xd8
 1801 00d8 07       		.uleb128 0x7
 1802 00d9 02       		.uleb128 0x2
 1803 00da 04       		.byte	0x4
 1804 00db 07       		.byte	0x7
 1805 00dc 60030000 		.4byte	.LASF18
 1806 00e0 08       		.uleb128 0x8
 1807 00e1 8D040000 		.4byte	.LASF19
 1808 00e5 03       		.byte	0x3
 1809 00e6 F3       		.byte	0xf3
 1810 00e7 D2000000 		.4byte	0xd2
 1811 00eb 09       		.uleb128 0x9
 1812 00ec F1050000 		.4byte	.LASF20
 1813 00f0 01       		.byte	0x1
 1814 00f1 68       		.byte	0x68
 1815 00f2 00000000 		.4byte	.LFB0
 1816 00f6 14000000 		.4byte	.LFE0-.LFB0
 1817 00fa 01       		.uleb128 0x1
 1818 00fb 9C       		.byte	0x9c
 1819 00fc 09       		.uleb128 0x9
 1820 00fd 80020000 		.4byte	.LASF21
 1821 0101 01       		.byte	0x1
 1822 0102 88       		.byte	0x88
 1823 0103 00000000 		.4byte	.LFB1
 1824 0107 10000000 		.4byte	.LFE1-.LFB1
 1825 010b 01       		.uleb128 0x1
 1826 010c 9C       		.byte	0x9c
 1827 010d 0A       		.uleb128 0xa
 1828 010e 1F000000 		.4byte	.LASF25
 1829 0112 01       		.byte	0x1
 1830 0113 AA01     		.2byte	0x1aa
 1831 0115 00000000 		.4byte	.LFB2
 1832 0119 20000000 		.4byte	.LFE2-.LFB2
 1833 011d 01       		.uleb128 0x1
 1834 011e 9C       		.byte	0x9c
 1835 011f 66010000 		.4byte	0x166
 1836 0123 0B       		.uleb128 0xb
 1837 0124 0B050000 		.4byte	.LASF27
 1838 0128 01       		.byte	0x1
 1839 0129 AA01     		.2byte	0x1aa
 1840 012b 83000000 		.4byte	0x83
 1841 012f 00000000 		.4byte	.LLST0
 1842 0133 0C       		.uleb128 0xc
 1843 0134 D9000000 		.4byte	.LASF22
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 85


 1844 0138 01       		.byte	0x1
 1845 0139 AC01     		.2byte	0x1ac
 1846 013b 6B000000 		.4byte	0x6b
 1847 013f 2C000000 		.4byte	.LLST1
 1848 0143 0C       		.uleb128 0xc
 1849 0144 0F060000 		.4byte	.LASF23
 1850 0148 01       		.byte	0x1
 1851 0149 AD01     		.2byte	0x1ad
 1852 014b 83000000 		.4byte	0x83
 1853 014f 3F000000 		.4byte	.LLST2
 1854 0153 0D       		.uleb128 0xd
 1855 0154 08000000 		.4byte	.LVL1
 1856 0158 E5090000 		.4byte	0x9e5
 1857 015c 0D       		.uleb128 0xd
 1858 015d 1A000000 		.4byte	.LVL4
 1859 0161 F0090000 		.4byte	0x9f0
 1860 0165 00       		.byte	0
 1861 0166 0E       		.uleb128 0xe
 1862 0167 E4010000 		.4byte	.LASF30
 1863 016b 01       		.byte	0x1
 1864 016c CF01     		.2byte	0x1cf
 1865 016e 83000000 		.4byte	0x83
 1866 0172 00000000 		.4byte	.LFB3
 1867 0176 1C000000 		.4byte	.LFE3-.LFB3
 1868 017a 01       		.uleb128 0x1
 1869 017b 9C       		.byte	0x9c
 1870 017c B3010000 		.4byte	0x1b3
 1871 0180 0C       		.uleb128 0xc
 1872 0181 D9000000 		.4byte	.LASF22
 1873 0185 01       		.byte	0x1
 1874 0186 D101     		.2byte	0x1d1
 1875 0188 6B000000 		.4byte	0x6b
 1876 018c 5D000000 		.4byte	.LLST3
 1877 0190 0C       		.uleb128 0xc
 1878 0191 83030000 		.4byte	.LASF24
 1879 0195 01       		.byte	0x1
 1880 0196 D201     		.2byte	0x1d2
 1881 0198 83000000 		.4byte	0x83
 1882 019c 70000000 		.4byte	.LLST4
 1883 01a0 0D       		.uleb128 0xd
 1884 01a1 06000000 		.4byte	.LVL6
 1885 01a5 E5090000 		.4byte	0x9e5
 1886 01a9 0D       		.uleb128 0xd
 1887 01aa 12000000 		.4byte	.LVL8
 1888 01ae F0090000 		.4byte	0x9f0
 1889 01b2 00       		.byte	0
 1890 01b3 0A       		.uleb128 0xa
 1891 01b4 54050000 		.4byte	.LASF26
 1892 01b8 01       		.byte	0x1
 1893 01b9 0602     		.2byte	0x206
 1894 01bb 00000000 		.4byte	.LFB4
 1895 01bf 24000000 		.4byte	.LFE4-.LFB4
 1896 01c3 01       		.uleb128 0x1
 1897 01c4 9C       		.byte	0x9c
 1898 01c5 FC010000 		.4byte	0x1fc
 1899 01c9 0B       		.uleb128 0xb
 1900 01ca E9050000 		.4byte	.LASF28
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 86


 1901 01ce 01       		.byte	0x1
 1902 01cf 0602     		.2byte	0x206
 1903 01d1 83000000 		.4byte	0x83
 1904 01d5 8E000000 		.4byte	.LLST5
 1905 01d9 0C       		.uleb128 0xc
 1906 01da D9000000 		.4byte	.LASF22
 1907 01de 01       		.byte	0x1
 1908 01df 0802     		.2byte	0x208
 1909 01e1 6B000000 		.4byte	0x6b
 1910 01e5 BA000000 		.4byte	.LLST6
 1911 01e9 0D       		.uleb128 0xd
 1912 01ea 08000000 		.4byte	.LVL11
 1913 01ee E5090000 		.4byte	0x9e5
 1914 01f2 0D       		.uleb128 0xd
 1915 01f3 1E000000 		.4byte	.LVL13
 1916 01f7 F0090000 		.4byte	0x9f0
 1917 01fb 00       		.byte	0
 1918 01fc 0A       		.uleb128 0xa
 1919 01fd 3E050000 		.4byte	.LASF29
 1920 0201 01       		.byte	0x1
 1921 0202 A403     		.2byte	0x3a4
 1922 0204 00000000 		.4byte	.LFB6
 1923 0208 24000000 		.4byte	.LFE6-.LFB6
 1924 020c 01       		.uleb128 0x1
 1925 020d 9C       		.byte	0x9c
 1926 020e 45020000 		.4byte	0x245
 1927 0212 0B       		.uleb128 0xb
 1928 0213 E9050000 		.4byte	.LASF28
 1929 0217 01       		.byte	0x1
 1930 0218 A403     		.2byte	0x3a4
 1931 021a 83000000 		.4byte	0x83
 1932 021e CD000000 		.4byte	.LLST7
 1933 0222 0C       		.uleb128 0xc
 1934 0223 D9000000 		.4byte	.LASF22
 1935 0227 01       		.byte	0x1
 1936 0228 A603     		.2byte	0x3a6
 1937 022a 6B000000 		.4byte	0x6b
 1938 022e F9000000 		.4byte	.LLST8
 1939 0232 0D       		.uleb128 0xd
 1940 0233 08000000 		.4byte	.LVL15
 1941 0237 E5090000 		.4byte	0x9e5
 1942 023b 0D       		.uleb128 0xd
 1943 023c 1E000000 		.4byte	.LVL17
 1944 0240 F0090000 		.4byte	0x9f0
 1945 0244 00       		.byte	0
 1946 0245 0E       		.uleb128 0xe
 1947 0246 B7020000 		.4byte	.LASF31
 1948 024a 01       		.byte	0x1
 1949 024b 0B08     		.2byte	0x80b
 1950 024d 83000000 		.4byte	0x83
 1951 0251 00000000 		.4byte	.LFB7
 1952 0255 14000000 		.4byte	.LFE7-.LFB7
 1953 0259 01       		.uleb128 0x1
 1954 025a 9C       		.byte	0x9c
 1955 025b 7E020000 		.4byte	0x27e
 1956 025f 0B       		.uleb128 0xb
 1957 0260 15050000 		.4byte	.LASF32
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 87


 1958 0264 01       		.byte	0x1
 1959 0265 0B08     		.2byte	0x80b
 1960 0267 83000000 		.4byte	0x83
 1961 026b 0C010000 		.4byte	.LLST9
 1962 026f 0F       		.uleb128 0xf
 1963 0270 53030000 		.4byte	.LASF33
 1964 0274 01       		.byte	0x1
 1965 0275 0D08     		.2byte	0x80d
 1966 0277 83000000 		.4byte	0x83
 1967 027b 01       		.uleb128 0x1
 1968 027c 50       		.byte	0x50
 1969 027d 00       		.byte	0
 1970 027e 0E       		.uleb128 0xe
 1971 027f 46000000 		.4byte	.LASF34
 1972 0283 01       		.byte	0x1
 1973 0284 2208     		.2byte	0x822
 1974 0286 83000000 		.4byte	0x83
 1975 028a 00000000 		.4byte	.LFB8
 1976 028e 10000000 		.4byte	.LFE8-.LFB8
 1977 0292 01       		.uleb128 0x1
 1978 0293 9C       		.byte	0x9c
 1979 0294 A7020000 		.4byte	0x2a7
 1980 0298 0F       		.uleb128 0xf
 1981 0299 16000000 		.4byte	.LASF35
 1982 029d 01       		.byte	0x1
 1983 029e 2408     		.2byte	0x824
 1984 02a0 83000000 		.4byte	0x83
 1985 02a4 01       		.uleb128 0x1
 1986 02a5 50       		.byte	0x50
 1987 02a6 00       		.byte	0
 1988 02a7 0A       		.uleb128 0xa
 1989 02a8 7C000000 		.4byte	.LASF36
 1990 02ac 01       		.byte	0x1
 1991 02ad 3908     		.2byte	0x839
 1992 02af 00000000 		.4byte	.LFB9
 1993 02b3 0C000000 		.4byte	.LFE9-.LFB9
 1994 02b7 01       		.uleb128 0x1
 1995 02b8 9C       		.byte	0x9c
 1996 02b9 CC020000 		.4byte	0x2cc
 1997 02bd 10       		.uleb128 0x10
 1998 02be DF010000 		.4byte	.LASF37
 1999 02c2 01       		.byte	0x1
 2000 02c3 3908     		.2byte	0x839
 2001 02c5 83000000 		.4byte	0x83
 2002 02c9 01       		.uleb128 0x1
 2003 02ca 50       		.byte	0x50
 2004 02cb 00       		.byte	0
 2005 02cc 0A       		.uleb128 0xa
 2006 02cd ED040000 		.4byte	.LASF38
 2007 02d1 01       		.byte	0x1
 2008 02d2 F008     		.2byte	0x8f0
 2009 02d4 00000000 		.4byte	.LFB16
 2010 02d8 14000000 		.4byte	.LFE16-.LFB16
 2011 02dc 01       		.uleb128 0x1
 2012 02dd 9C       		.byte	0x9c
 2013 02de F3020000 		.4byte	0x2f3
 2014 02e2 0B       		.uleb128 0xb
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 88


 2015 02e3 99000000 		.4byte	.LASF39
 2016 02e7 01       		.byte	0x1
 2017 02e8 F008     		.2byte	0x8f0
 2018 02ea 6B000000 		.4byte	0x6b
 2019 02ee 2A010000 		.4byte	.LLST10
 2020 02f2 00       		.byte	0
 2021 02f3 0E       		.uleb128 0xe
 2022 02f4 A0000000 		.4byte	.LASF40
 2023 02f8 01       		.byte	0x1
 2024 02f9 0209     		.2byte	0x902
 2025 02fb 6B000000 		.4byte	0x6b
 2026 02ff 00000000 		.4byte	.LFB17
 2027 0303 18000000 		.4byte	.LFE17-.LFB17
 2028 0307 01       		.uleb128 0x1
 2029 0308 9C       		.byte	0x9c
 2030 0309 1E030000 		.4byte	0x31e
 2031 030d 0B       		.uleb128 0xb
 2032 030e 99000000 		.4byte	.LASF39
 2033 0312 01       		.byte	0x1
 2034 0313 0209     		.2byte	0x902
 2035 0315 6B000000 		.4byte	0x6b
 2036 0319 4B010000 		.4byte	.LLST11
 2037 031d 00       		.byte	0
 2038 031e 0A       		.uleb128 0xa
 2039 031f 04010000 		.4byte	.LASF41
 2040 0323 01       		.byte	0x1
 2041 0324 1209     		.2byte	0x912
 2042 0326 00000000 		.4byte	.LFB18
 2043 032a 14000000 		.4byte	.LFE18-.LFB18
 2044 032e 01       		.uleb128 0x1
 2045 032f 9C       		.byte	0x9c
 2046 0330 45030000 		.4byte	0x345
 2047 0334 0B       		.uleb128 0xb
 2048 0335 99000000 		.4byte	.LASF39
 2049 0339 01       		.byte	0x1
 2050 033a 1209     		.2byte	0x912
 2051 033c 6B000000 		.4byte	0x6b
 2052 0340 6C010000 		.4byte	.LLST12
 2053 0344 00       		.byte	0
 2054 0345 0A       		.uleb128 0xa
 2055 0346 A7020000 		.4byte	.LASF42
 2056 034a 01       		.byte	0x1
 2057 034b 2009     		.2byte	0x920
 2058 034d 00000000 		.4byte	.LFB19
 2059 0351 14000000 		.4byte	.LFE19-.LFB19
 2060 0355 01       		.uleb128 0x1
 2061 0356 9C       		.byte	0x9c
 2062 0357 6C030000 		.4byte	0x36c
 2063 035b 0B       		.uleb128 0xb
 2064 035c 99000000 		.4byte	.LASF39
 2065 0360 01       		.byte	0x1
 2066 0361 2009     		.2byte	0x920
 2067 0363 6B000000 		.4byte	0x6b
 2068 0367 8D010000 		.4byte	.LLST13
 2069 036b 00       		.byte	0
 2070 036c 0A       		.uleb128 0xa
 2071 036d 69030000 		.4byte	.LASF43
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 89


 2072 0371 01       		.byte	0x1
 2073 0372 2F09     		.2byte	0x92f
 2074 0374 00000000 		.4byte	.LFB20
 2075 0378 14000000 		.4byte	.LFE20-.LFB20
 2076 037c 01       		.uleb128 0x1
 2077 037d 9C       		.byte	0x9c
 2078 037e 93030000 		.4byte	0x393
 2079 0382 0B       		.uleb128 0xb
 2080 0383 99000000 		.4byte	.LASF39
 2081 0387 01       		.byte	0x1
 2082 0388 2F09     		.2byte	0x92f
 2083 038a 6B000000 		.4byte	0x6b
 2084 038e AE010000 		.4byte	.LLST14
 2085 0392 00       		.byte	0
 2086 0393 0A       		.uleb128 0xa
 2087 0394 CE040000 		.4byte	.LASF44
 2088 0398 01       		.byte	0x1
 2089 0399 3E09     		.2byte	0x93e
 2090 039b 00000000 		.4byte	.LFB21
 2091 039f 04000000 		.4byte	.LFE21-.LFB21
 2092 03a3 01       		.uleb128 0x1
 2093 03a4 9C       		.byte	0x9c
 2094 03a5 B8030000 		.4byte	0x3b8
 2095 03a9 10       		.uleb128 0x10
 2096 03aa 15050000 		.4byte	.LASF32
 2097 03ae 01       		.byte	0x1
 2098 03af 3E09     		.2byte	0x93e
 2099 03b1 6B000000 		.4byte	0x6b
 2100 03b5 01       		.uleb128 0x1
 2101 03b6 50       		.byte	0x50
 2102 03b7 00       		.byte	0
 2103 03b8 0A       		.uleb128 0xa
 2104 03b9 17030000 		.4byte	.LASF45
 2105 03bd 01       		.byte	0x1
 2106 03be 0D03     		.2byte	0x30d
 2107 03c0 00000000 		.4byte	.LFB5
 2108 03c4 AC000000 		.4byte	.LFE5-.LFB5
 2109 03c8 01       		.uleb128 0x1
 2110 03c9 9C       		.byte	0x9c
 2111 03ca 53040000 		.4byte	0x453
 2112 03ce 0B       		.uleb128 0xb
 2113 03cf C8000000 		.4byte	.LASF46
 2114 03d3 01       		.byte	0x1
 2115 03d4 0D03     		.2byte	0x30d
 2116 03d6 83000000 		.4byte	0x83
 2117 03da CF010000 		.4byte	.LLST15
 2118 03de 0C       		.uleb128 0xc
 2119 03df D9000000 		.4byte	.LASF22
 2120 03e3 01       		.byte	0x1
 2121 03e4 0F03     		.2byte	0x30f
 2122 03e6 6B000000 		.4byte	0x6b
 2123 03ea 1F020000 		.4byte	.LLST16
 2124 03ee 0C       		.uleb128 0xc
 2125 03ef 93050000 		.4byte	.LASF47
 2126 03f3 01       		.byte	0x1
 2127 03f4 1003     		.2byte	0x310
 2128 03f6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 90


 2129 03fa 32020000 		.4byte	.LLST17
 2130 03fe 0D       		.uleb128 0xd
 2131 03ff 14000000 		.4byte	.LVL36
 2132 0403 E5090000 		.4byte	0x9e5
 2133 0407 11       		.uleb128 0x11
 2134 0408 50000000 		.4byte	.LVL41
 2135 040c 010A0000 		.4byte	0xa01
 2136 0410 1B040000 		.4byte	0x41b
 2137 0414 12       		.uleb128 0x12
 2138 0415 01       		.uleb128 0x1
 2139 0416 50       		.byte	0x50
 2140 0417 02       		.uleb128 0x2
 2141 0418 08       		.byte	0x8
 2142 0419 32       		.byte	0x32
 2143 041a 00       		.byte	0
 2144 041b 11       		.uleb128 0x11
 2145 041c 70000000 		.4byte	.LVL42
 2146 0420 010A0000 		.4byte	0xa01
 2147 0424 2F040000 		.4byte	0x42f
 2148 0428 12       		.uleb128 0x12
 2149 0429 01       		.uleb128 0x1
 2150 042a 50       		.byte	0x50
 2151 042b 02       		.uleb128 0x2
 2152 042c 08       		.byte	0x8
 2153 042d 32       		.byte	0x32
 2154 042e 00       		.byte	0
 2155 042f 11       		.uleb128 0x11
 2156 0430 88000000 		.4byte	.LVL44
 2157 0434 F0090000 		.4byte	0x9f0
 2158 0438 43040000 		.4byte	0x443
 2159 043c 12       		.uleb128 0x12
 2160 043d 01       		.uleb128 0x1
 2161 043e 50       		.byte	0x50
 2162 043f 02       		.uleb128 0x2
 2163 0440 75       		.byte	0x75
 2164 0441 00       		.sleb128 0
 2165 0442 00       		.byte	0
 2166 0443 13       		.uleb128 0x13
 2167 0444 90000000 		.4byte	.LVL47
 2168 0448 93030000 		.4byte	0x393
 2169 044c 12       		.uleb128 0x12
 2170 044d 01       		.uleb128 0x1
 2171 044e 50       		.byte	0x50
 2172 044f 01       		.uleb128 0x1
 2173 0450 30       		.byte	0x30
 2174 0451 00       		.byte	0
 2175 0452 00       		.byte	0
 2176 0453 0E       		.uleb128 0xe
 2177 0454 2C030000 		.4byte	.LASF48
 2178 0458 01       		.byte	0x1
 2179 0459 5208     		.2byte	0x852
 2180 045b C6000000 		.4byte	0xc6
 2181 045f 00000000 		.4byte	.LFB10
 2182 0463 20000000 		.4byte	.LFE10-.LFB10
 2183 0467 01       		.uleb128 0x1
 2184 0468 9C       		.byte	0x9c
 2185 0469 BB040000 		.4byte	0x4bb
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 91


 2186 046d 0B       		.uleb128 0xb
 2187 046e 99000000 		.4byte	.LASF39
 2188 0472 01       		.byte	0x1
 2189 0473 5208     		.2byte	0x852
 2190 0475 6B000000 		.4byte	0x6b
 2191 0479 56020000 		.4byte	.LLST18
 2192 047d 0B       		.uleb128 0xb
 2193 047e 7B030000 		.4byte	.LASF49
 2194 0482 01       		.byte	0x1
 2195 0483 5208     		.2byte	0x852
 2196 0485 C6000000 		.4byte	0xc6
 2197 0489 77020000 		.4byte	.LLST19
 2198 048d 0F       		.uleb128 0xf
 2199 048e 38000000 		.4byte	.LASF50
 2200 0492 01       		.byte	0x1
 2201 0493 5408     		.2byte	0x854
 2202 0495 C6000000 		.4byte	0xc6
 2203 0499 01       		.uleb128 0x1
 2204 049a 50       		.byte	0x50
 2205 049b 14       		.uleb128 0x14
 2206 049c 00000000 		.4byte	.LASF51
 2207 04a0 01       		.byte	0x1
 2208 04a1 5508     		.2byte	0x855
 2209 04a3 BB040000 		.4byte	0x4bb
 2210 04a7 00000020 		.4byte	0x20000000
 2211 04ab 13       		.uleb128 0x13
 2212 04ac 10000000 		.4byte	.LVL51
 2213 04b0 93030000 		.4byte	0x393
 2214 04b4 12       		.uleb128 0x12
 2215 04b5 01       		.uleb128 0x1
 2216 04b6 50       		.byte	0x50
 2217 04b7 01       		.uleb128 0x1
 2218 04b8 30       		.byte	0x30
 2219 04b9 00       		.byte	0
 2220 04ba 00       		.byte	0
 2221 04bb 06       		.uleb128 0x6
 2222 04bc 04       		.byte	0x4
 2223 04bd C6000000 		.4byte	0xc6
 2224 04c1 0E       		.uleb128 0xe
 2225 04c2 F9040000 		.4byte	.LASF52
 2226 04c6 01       		.byte	0x1
 2227 04c7 7408     		.2byte	0x874
 2228 04c9 C6000000 		.4byte	0xc6
 2229 04cd 00000000 		.4byte	.LFB11
 2230 04d1 1C000000 		.4byte	.LFE11-.LFB11
 2231 04d5 01       		.uleb128 0x1
 2232 04d6 9C       		.byte	0x9c
 2233 04d7 0B050000 		.4byte	0x50b
 2234 04db 0B       		.uleb128 0xb
 2235 04dc 99000000 		.4byte	.LASF39
 2236 04e0 01       		.byte	0x1
 2237 04e1 7408     		.2byte	0x874
 2238 04e3 6B000000 		.4byte	0x6b
 2239 04e7 A3020000 		.4byte	.LLST20
 2240 04eb 14       		.uleb128 0x14
 2241 04ec 00000000 		.4byte	.LASF51
 2242 04f0 01       		.byte	0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 92


 2243 04f1 7608     		.2byte	0x876
 2244 04f3 BB040000 		.4byte	0x4bb
 2245 04f7 00000020 		.4byte	0x20000000
 2246 04fb 13       		.uleb128 0x13
 2247 04fc 0E000000 		.4byte	.LVL57
 2248 0500 93030000 		.4byte	0x393
 2249 0504 12       		.uleb128 0x12
 2250 0505 01       		.uleb128 0x1
 2251 0506 50       		.byte	0x50
 2252 0507 01       		.uleb128 0x1
 2253 0508 30       		.byte	0x30
 2254 0509 00       		.byte	0
 2255 050a 00       		.byte	0
 2256 050b 0E       		.uleb128 0xe
 2257 050c DE020000 		.4byte	.LASF53
 2258 0510 01       		.byte	0x1
 2259 0511 8A08     		.2byte	0x88a
 2260 0513 C6000000 		.4byte	0xc6
 2261 0517 00000000 		.4byte	.LFB12
 2262 051b 24000000 		.4byte	.LFE12-.LFB12
 2263 051f 01       		.uleb128 0x1
 2264 0520 9C       		.byte	0x9c
 2265 0521 73050000 		.4byte	0x573
 2266 0525 0B       		.uleb128 0xb
 2267 0526 99000000 		.4byte	.LASF39
 2268 052a 01       		.byte	0x1
 2269 052b 8A08     		.2byte	0x88a
 2270 052d 6B000000 		.4byte	0x6b
 2271 0531 C4020000 		.4byte	.LLST21
 2272 0535 0B       		.uleb128 0xb
 2273 0536 7B030000 		.4byte	.LASF49
 2274 053a 01       		.byte	0x1
 2275 053b 8A08     		.2byte	0x88a
 2276 053d C6000000 		.4byte	0xc6
 2277 0541 E5020000 		.4byte	.LLST22
 2278 0545 0F       		.uleb128 0xf
 2279 0546 38000000 		.4byte	.LASF50
 2280 054a 01       		.byte	0x1
 2281 054b 8C08     		.2byte	0x88c
 2282 054d C6000000 		.4byte	0xc6
 2283 0551 01       		.uleb128 0x1
 2284 0552 50       		.byte	0x50
 2285 0553 14       		.uleb128 0x14
 2286 0554 00000000 		.4byte	.LASF51
 2287 0558 01       		.byte	0x1
 2288 0559 8D08     		.2byte	0x88d
 2289 055b BB040000 		.4byte	0x4bb
 2290 055f 00000020 		.4byte	0x20000000
 2291 0563 13       		.uleb128 0x13
 2292 0564 10000000 		.4byte	.LVL61
 2293 0568 93030000 		.4byte	0x393
 2294 056c 12       		.uleb128 0x12
 2295 056d 01       		.uleb128 0x1
 2296 056e 50       		.byte	0x50
 2297 056f 01       		.uleb128 0x1
 2298 0570 30       		.byte	0x30
 2299 0571 00       		.byte	0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 93


 2300 0572 00       		.byte	0
 2301 0573 0E       		.uleb128 0xe
 2302 0574 9F040000 		.4byte	.LASF54
 2303 0578 01       		.byte	0x1
 2304 0579 A608     		.2byte	0x8a6
 2305 057b C6000000 		.4byte	0xc6
 2306 057f 00000000 		.4byte	.LFB13
 2307 0583 20000000 		.4byte	.LFE13-.LFB13
 2308 0587 01       		.uleb128 0x1
 2309 0588 9C       		.byte	0x9c
 2310 0589 BD050000 		.4byte	0x5bd
 2311 058d 0B       		.uleb128 0xb
 2312 058e 99000000 		.4byte	.LASF39
 2313 0592 01       		.byte	0x1
 2314 0593 A608     		.2byte	0x8a6
 2315 0595 6B000000 		.4byte	0x6b
 2316 0599 11030000 		.4byte	.LLST23
 2317 059d 14       		.uleb128 0x14
 2318 059e 00000000 		.4byte	.LASF51
 2319 05a2 01       		.byte	0x1
 2320 05a3 A808     		.2byte	0x8a8
 2321 05a5 BB040000 		.4byte	0x4bb
 2322 05a9 00000020 		.4byte	0x20000000
 2323 05ad 13       		.uleb128 0x13
 2324 05ae 0E000000 		.4byte	.LVL67
 2325 05b2 93030000 		.4byte	0x393
 2326 05b6 12       		.uleb128 0x12
 2327 05b7 01       		.uleb128 0x1
 2328 05b8 50       		.byte	0x50
 2329 05b9 01       		.uleb128 0x1
 2330 05ba 30       		.byte	0x30
 2331 05bb 00       		.byte	0
 2332 05bc 00       		.byte	0
 2333 05bd 0A       		.uleb128 0xa
 2334 05be 60040000 		.4byte	.LASF55
 2335 05c2 01       		.byte	0x1
 2336 05c3 B908     		.2byte	0x8b9
 2337 05c5 00000000 		.4byte	.LFB14
 2338 05c9 4C000000 		.4byte	.LFE14-.LFB14
 2339 05cd 01       		.uleb128 0x1
 2340 05ce 9C       		.byte	0x9c
 2341 05cf 5C060000 		.4byte	0x65c
 2342 05d3 0B       		.uleb128 0xb
 2343 05d4 99000000 		.4byte	.LASF39
 2344 05d8 01       		.byte	0x1
 2345 05d9 B908     		.2byte	0x8b9
 2346 05db 6B000000 		.4byte	0x6b
 2347 05df 32030000 		.4byte	.LLST24
 2348 05e3 0B       		.uleb128 0xb
 2349 05e4 0E030000 		.4byte	.LASF56
 2350 05e8 01       		.byte	0x1
 2351 05e9 B908     		.2byte	0x8b9
 2352 05eb 6B000000 		.4byte	0x6b
 2353 05ef 53030000 		.4byte	.LLST25
 2354 05f3 0C       		.uleb128 0xc
 2355 05f4 D9000000 		.4byte	.LASF22
 2356 05f8 01       		.byte	0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 94


 2357 05f9 BB08     		.2byte	0x8bb
 2358 05fb 6B000000 		.4byte	0x6b
 2359 05ff 74030000 		.4byte	.LLST26
 2360 0603 0C       		.uleb128 0xc
 2361 0604 4C010000 		.4byte	.LASF57
 2362 0608 01       		.byte	0x1
 2363 0609 BC08     		.2byte	0x8bc
 2364 060b 83000000 		.4byte	0x83
 2365 060f 87030000 		.4byte	.LLST27
 2366 0613 0C       		.uleb128 0xc
 2367 0614 28020000 		.4byte	.LASF58
 2368 0618 01       		.byte	0x1
 2369 0619 BD08     		.2byte	0x8bd
 2370 061b 83000000 		.4byte	0x83
 2371 061f 9A030000 		.4byte	.LLST28
 2372 0623 11       		.uleb128 0x11
 2373 0624 10000000 		.4byte	.LVL70
 2374 0628 93030000 		.4byte	0x393
 2375 062c 36060000 		.4byte	0x636
 2376 0630 12       		.uleb128 0x12
 2377 0631 01       		.uleb128 0x1
 2378 0632 50       		.byte	0x50
 2379 0633 01       		.uleb128 0x1
 2380 0634 30       		.byte	0x30
 2381 0635 00       		.byte	0
 2382 0636 11       		.uleb128 0x11
 2383 0637 1A000000 		.4byte	.LVL71
 2384 063b 93030000 		.4byte	0x393
 2385 063f 49060000 		.4byte	0x649
 2386 0643 12       		.uleb128 0x12
 2387 0644 01       		.uleb128 0x1
 2388 0645 50       		.byte	0x50
 2389 0646 01       		.uleb128 0x1
 2390 0647 30       		.byte	0x30
 2391 0648 00       		.byte	0
 2392 0649 0D       		.uleb128 0xd
 2393 064a 26000000 		.4byte	.LVL73
 2394 064e E5090000 		.4byte	0x9e5
 2395 0652 0D       		.uleb128 0xd
 2396 0653 44000000 		.4byte	.LVL78
 2397 0657 F0090000 		.4byte	0x9f0
 2398 065b 00       		.byte	0
 2399 065c 0E       		.uleb128 0xe
 2400 065d FC010000 		.4byte	.LASF59
 2401 0661 01       		.byte	0x1
 2402 0662 DB08     		.2byte	0x8db
 2403 0664 6B000000 		.4byte	0x6b
 2404 0668 00000000 		.4byte	.LFB15
 2405 066c 2C000000 		.4byte	.LFE15-.LFB15
 2406 0670 01       		.uleb128 0x1
 2407 0671 9C       		.byte	0x9c
 2408 0672 A6060000 		.4byte	0x6a6
 2409 0676 0B       		.uleb128 0xb
 2410 0677 99000000 		.4byte	.LASF39
 2411 067b 01       		.byte	0x1
 2412 067c DB08     		.2byte	0x8db
 2413 067e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 95


 2414 0682 B8030000 		.4byte	.LLST29
 2415 0686 0C       		.uleb128 0xc
 2416 0687 0E030000 		.4byte	.LASF56
 2417 068b 01       		.byte	0x1
 2418 068c DD08     		.2byte	0x8dd
 2419 068e 6B000000 		.4byte	0x6b
 2420 0692 D9030000 		.4byte	.LLST30
 2421 0696 13       		.uleb128 0x13
 2422 0697 0E000000 		.4byte	.LVL82
 2423 069b 93030000 		.4byte	0x393
 2424 069f 12       		.uleb128 0x12
 2425 06a0 01       		.uleb128 0x1
 2426 06a1 50       		.byte	0x50
 2427 06a2 01       		.uleb128 0x1
 2428 06a3 30       		.byte	0x30
 2429 06a4 00       		.byte	0
 2430 06a5 00       		.byte	0
 2431 06a6 15       		.uleb128 0x15
 2432 06a7 89000000 		.4byte	.LASF60
 2433 06ab 01       		.byte	0x1
 2434 06ac 5609     		.2byte	0x956
 2435 06ae 00000000 		.4byte	.LFB22
 2436 06b2 18000000 		.4byte	.LFE22-.LFB22
 2437 06b6 01       		.uleb128 0x1
 2438 06b7 9C       		.byte	0x9c
 2439 06b8 0A       		.uleb128 0xa
 2440 06b9 AA050000 		.4byte	.LASF61
 2441 06bd 01       		.byte	0x1
 2442 06be 6A09     		.2byte	0x96a
 2443 06c0 00000000 		.4byte	.LFB23
 2444 06c4 30000000 		.4byte	.LFE23-.LFB23
 2445 06c8 01       		.uleb128 0x1
 2446 06c9 9C       		.byte	0x9c
 2447 06ca F1060000 		.4byte	0x6f1
 2448 06ce 0B       		.uleb128 0xb
 2449 06cf AE040000 		.4byte	.LASF62
 2450 06d3 01       		.byte	0x1
 2451 06d4 6A09     		.2byte	0x96a
 2452 06d6 83000000 		.4byte	0x83
 2453 06da EC030000 		.4byte	.LLST31
 2454 06de 0D       		.uleb128 0xd
 2455 06df 0E000000 		.4byte	.LVL87
 2456 06e3 010A0000 		.4byte	0xa01
 2457 06e7 0D       		.uleb128 0xd
 2458 06e8 26000000 		.4byte	.LVL89
 2459 06ec 010A0000 		.4byte	0xa01
 2460 06f0 00       		.byte	0
 2461 06f1 0A       		.uleb128 0xa
 2462 06f2 3B010000 		.4byte	.LASF63
 2463 06f6 01       		.byte	0x1
 2464 06f7 8109     		.2byte	0x981
 2465 06f9 00000000 		.4byte	.LFB24
 2466 06fd 14000000 		.4byte	.LFE24-.LFB24
 2467 0701 01       		.uleb128 0x1
 2468 0702 9C       		.byte	0x9c
 2469 0703 21070000 		.4byte	0x721
 2470 0707 0B       		.uleb128 0xb
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 96


 2471 0708 02060000 		.4byte	.LASF64
 2472 070c 01       		.byte	0x1
 2473 070d 8109     		.2byte	0x981
 2474 070f 77000000 		.4byte	0x77
 2475 0713 0A040000 		.4byte	.LLST32
 2476 0717 0D       		.uleb128 0xd
 2477 0718 0C000000 		.4byte	.LVL93
 2478 071c 010A0000 		.4byte	0xa01
 2479 0720 00       		.byte	0
 2480 0721 16       		.uleb128 0x16
 2481 0722 CD000000 		.4byte	.LASF65
 2482 0726 01       		.byte	0x1
 2483 0727 8F09     		.2byte	0x98f
 2484 0729 00000000 		.4byte	.LFB25
 2485 072d 4C000000 		.4byte	.LFE25-.LFB25
 2486 0731 01       		.uleb128 0x1
 2487 0732 9C       		.byte	0x9c
 2488 0733 48070000 		.4byte	0x748
 2489 0737 0B       		.uleb128 0xb
 2490 0738 C8000000 		.4byte	.LASF46
 2491 073c 01       		.byte	0x1
 2492 073d 8F09     		.2byte	0x98f
 2493 073f 83000000 		.4byte	0x83
 2494 0743 2B040000 		.4byte	.LLST33
 2495 0747 00       		.byte	0
 2496 0748 15       		.uleb128 0x15
 2497 0749 DB050000 		.4byte	.LASF66
 2498 074d 01       		.byte	0x1
 2499 074e FC09     		.2byte	0x9fc
 2500 0750 00000000 		.4byte	.LFB29
 2501 0754 10000000 		.4byte	.LFE29-.LFB29
 2502 0758 01       		.uleb128 0x1
 2503 0759 9C       		.byte	0x9c
 2504 075a 15       		.uleb128 0x15
 2505 075b 99030000 		.4byte	.LASF67
 2506 075f 01       		.byte	0x1
 2507 0760 0C0A     		.2byte	0xa0c
 2508 0762 00000000 		.4byte	.LFB30
 2509 0766 10000000 		.4byte	.LFE30-.LFB30
 2510 076a 01       		.uleb128 0x1
 2511 076b 9C       		.byte	0x9c
 2512 076c 0A       		.uleb128 0xa
 2513 076d 2E050000 		.4byte	.LASF68
 2514 0771 01       		.byte	0x1
 2515 0772 EB09     		.2byte	0x9eb
 2516 0774 00000000 		.4byte	.LFB28
 2517 0778 18000000 		.4byte	.LFE28-.LFB28
 2518 077c 01       		.uleb128 0x1
 2519 077d 9C       		.byte	0x9c
 2520 077e 8C070000 		.4byte	0x78c
 2521 0782 0D       		.uleb128 0xd
 2522 0783 06000000 		.4byte	.LVL98
 2523 0787 5A070000 		.4byte	0x75a
 2524 078b 00       		.byte	0
 2525 078c 15       		.uleb128 0x15
 2526 078d B2050000 		.4byte	.LASF69
 2527 0791 01       		.byte	0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 97


 2528 0792 1C0A     		.2byte	0xa1c
 2529 0794 00000000 		.4byte	.LFB31
 2530 0798 10000000 		.4byte	.LFE31-.LFB31
 2531 079c 01       		.uleb128 0x1
 2532 079d 9C       		.byte	0x9c
 2533 079e 0A       		.uleb128 0xa
 2534 079f 16060000 		.4byte	.LASF70
 2535 07a3 01       		.byte	0x1
 2536 07a4 2D0A     		.2byte	0xa2d
 2537 07a6 00000000 		.4byte	.LFB32
 2538 07aa 10000000 		.4byte	.LFE32-.LFB32
 2539 07ae 01       		.uleb128 0x1
 2540 07af 9C       		.byte	0x9c
 2541 07b0 C5070000 		.4byte	0x7c5
 2542 07b4 0B       		.uleb128 0xb
 2543 07b5 28020000 		.4byte	.LASF58
 2544 07b9 01       		.byte	0x1
 2545 07ba 2D0A     		.2byte	0xa2d
 2546 07bc 83000000 		.4byte	0x83
 2547 07c0 4C040000 		.4byte	.LLST34
 2548 07c4 00       		.byte	0
 2549 07c5 17       		.uleb128 0x17
 2550 07c6 E8000000 		.4byte	.LASF71
 2551 07ca 01       		.byte	0x1
 2552 07cb 3D0A     		.2byte	0xa3d
 2553 07cd 83000000 		.4byte	0x83
 2554 07d1 00000000 		.4byte	.LFB33
 2555 07d5 10000000 		.4byte	.LFE33-.LFB33
 2556 07d9 01       		.uleb128 0x1
 2557 07da 9C       		.byte	0x9c
 2558 07db 17       		.uleb128 0x17
 2559 07dc B2030000 		.4byte	.LASF72
 2560 07e0 01       		.byte	0x1
 2561 07e1 4D0A     		.2byte	0xa4d
 2562 07e3 83000000 		.4byte	0x83
 2563 07e7 00000000 		.4byte	.LFB34
 2564 07eb 10000000 		.4byte	.LFE34-.LFB34
 2565 07ef 01       		.uleb128 0x1
 2566 07f0 9C       		.byte	0x9c
 2567 07f1 17       		.uleb128 0x17
 2568 07f2 3C020000 		.4byte	.LASF73
 2569 07f6 01       		.byte	0x1
 2570 07f7 8A0A     		.2byte	0xa8a
 2571 07f9 83000000 		.4byte	0x83
 2572 07fd 00000000 		.4byte	.LFB35
 2573 0801 10000000 		.4byte	.LFE35-.LFB35
 2574 0805 01       		.uleb128 0x1
 2575 0806 9C       		.byte	0x9c
 2576 0807 18       		.uleb128 0x18
 2577 0808 29060000 		.4byte	.LASF92
 2578 080c 01       		.byte	0x1
 2579 080d DF0A     		.2byte	0xadf
 2580 080f 00000000 		.4byte	.LFB39
 2581 0813 28000000 		.4byte	.LFE39-.LFB39
 2582 0817 01       		.uleb128 0x1
 2583 0818 9C       		.byte	0x9c
 2584 0819 35080000 		.4byte	0x835
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 98


 2585 081d 19       		.uleb128 0x19
 2586 081e 6900     		.ascii	"i\000"
 2587 0820 01       		.byte	0x1
 2588 0821 E10A     		.2byte	0xae1
 2589 0823 83000000 		.4byte	0x83
 2590 0827 6D040000 		.4byte	.LLST35
 2591 082b 0D       		.uleb128 0xd
 2592 082c 06000000 		.4byte	.LVL101
 2593 0830 F1070000 		.4byte	0x7f1
 2594 0834 00       		.byte	0
 2595 0835 15       		.uleb128 0x15
 2596 0836 5F020000 		.4byte	.LASF74
 2597 083a 01       		.byte	0x1
 2598 083b 970A     		.2byte	0xa97
 2599 083d 00000000 		.4byte	.LFB36
 2600 0841 0C000000 		.4byte	.LFE36-.LFB36
 2601 0845 01       		.uleb128 0x1
 2602 0846 9C       		.byte	0x9c
 2603 0847 16       		.uleb128 0x16
 2604 0848 1A020000 		.4byte	.LASF75
 2605 084c 01       		.byte	0x1
 2606 084d CC09     		.2byte	0x9cc
 2607 084f 00000000 		.4byte	.LFB27
 2608 0853 44000000 		.4byte	.LFE27-.LFB27
 2609 0857 01       		.uleb128 0x1
 2610 0858 9C       		.byte	0x9c
 2611 0859 A9080000 		.4byte	0x8a9
 2612 085d 19       		.uleb128 0x19
 2613 085e 6900     		.ascii	"i\000"
 2614 0860 01       		.byte	0x1
 2615 0861 CE09     		.2byte	0x9ce
 2616 0863 83000000 		.4byte	0x83
 2617 0867 8B040000 		.4byte	.LLST36
 2618 086b 11       		.uleb128 0x11
 2619 086c 1C000000 		.4byte	.LVL111
 2620 0870 53040000 		.4byte	0x453
 2621 0874 87080000 		.4byte	0x887
 2622 0878 12       		.uleb128 0x12
 2623 0879 01       		.uleb128 0x1
 2624 087a 51       		.byte	0x51
 2625 087b 05       		.uleb128 0x5
 2626 087c 03       		.byte	0x3
 2627 087d 00000000 		.4byte	CySysTickServiceCallbacks
 2628 0881 12       		.uleb128 0x12
 2629 0882 01       		.uleb128 0x1
 2630 0883 50       		.byte	0x50
 2631 0884 01       		.uleb128 0x1
 2632 0885 3F       		.byte	0x3f
 2633 0886 00       		.byte	0
 2634 0887 0D       		.uleb128 0xd
 2635 0888 2C000000 		.4byte	.LVL113
 2636 088c 9E070000 		.4byte	0x79e
 2637 0890 0D       		.uleb128 0xd
 2638 0891 30000000 		.4byte	.LVL114
 2639 0895 35080000 		.4byte	0x835
 2640 0899 13       		.uleb128 0x13
 2641 089a 36000000 		.4byte	.LVL115
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 99


 2642 089e CC020000 		.4byte	0x2cc
 2643 08a2 12       		.uleb128 0x12
 2644 08a3 01       		.uleb128 0x1
 2645 08a4 50       		.byte	0x50
 2646 08a5 01       		.uleb128 0x1
 2647 08a6 3F       		.byte	0x3f
 2648 08a7 00       		.byte	0
 2649 08a8 00       		.byte	0
 2650 08a9 0A       		.uleb128 0xa
 2651 08aa 44030000 		.4byte	.LASF76
 2652 08ae 01       		.byte	0x1
 2653 08af AF09     		.2byte	0x9af
 2654 08b1 00000000 		.4byte	.LFB26
 2655 08b5 20000000 		.4byte	.LFE26-.LFB26
 2656 08b9 01       		.uleb128 0x1
 2657 08ba 9C       		.byte	0x9c
 2658 08bb D2080000 		.4byte	0x8d2
 2659 08bf 0D       		.uleb128 0xd
 2660 08c0 0E000000 		.4byte	.LVL116
 2661 08c4 47080000 		.4byte	0x847
 2662 08c8 0D       		.uleb128 0xd
 2663 08c9 18000000 		.4byte	.LVL117
 2664 08cd 6C070000 		.4byte	0x76c
 2665 08d1 00       		.byte	0
 2666 08d2 0E       		.uleb128 0xe
 2667 08d3 6B050000 		.4byte	.LASF77
 2668 08d7 01       		.byte	0x1
 2669 08d8 BA0A     		.2byte	0xaba
 2670 08da E0000000 		.4byte	0xe0
 2671 08de 00000000 		.4byte	.LFB37
 2672 08e2 10000000 		.4byte	.LFE37-.LFB37
 2673 08e6 01       		.uleb128 0x1
 2674 08e7 9C       		.byte	0x9c
 2675 08e8 19090000 		.4byte	0x919
 2676 08ec 0B       		.uleb128 0xb
 2677 08ed 99000000 		.4byte	.LASF39
 2678 08f1 01       		.byte	0x1
 2679 08f2 BA0A     		.2byte	0xaba
 2680 08f4 83000000 		.4byte	0x83
 2681 08f8 AA040000 		.4byte	.LLST37
 2682 08fc 10       		.uleb128 0x10
 2683 08fd 90030000 		.4byte	.LASF78
 2684 0901 01       		.byte	0x1
 2685 0902 BA0A     		.2byte	0xaba
 2686 0904 E0000000 		.4byte	0xe0
 2687 0908 01       		.uleb128 0x1
 2688 0909 51       		.byte	0x51
 2689 090a 0F       		.uleb128 0xf
 2690 090b 3F000000 		.4byte	.LASF79
 2691 090f 01       		.byte	0x1
 2692 0910 BC0A     		.2byte	0xabc
 2693 0912 E0000000 		.4byte	0xe0
 2694 0916 01       		.uleb128 0x1
 2695 0917 50       		.byte	0x50
 2696 0918 00       		.byte	0
 2697 0919 0E       		.uleb128 0xe
 2698 091a 11010000 		.4byte	.LASF80
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 100


 2699 091e 01       		.byte	0x1
 2700 091f D20A     		.2byte	0xad2
 2701 0921 E0000000 		.4byte	0xe0
 2702 0925 00000000 		.4byte	.LFB38
 2703 0929 0C000000 		.4byte	.LFE38-.LFB38
 2704 092d 01       		.uleb128 0x1
 2705 092e 9C       		.byte	0x9c
 2706 092f 44090000 		.4byte	0x944
 2707 0933 0B       		.uleb128 0xb
 2708 0934 99000000 		.4byte	.LASF39
 2709 0938 01       		.byte	0x1
 2710 0939 D20A     		.2byte	0xad2
 2711 093b 83000000 		.4byte	0x83
 2712 093f CB040000 		.4byte	.LLST38
 2713 0943 00       		.byte	0
 2714 0944 0A       		.uleb128 0xa
 2715 0945 2E020000 		.4byte	.LASF81
 2716 0949 01       		.byte	0x1
 2717 094a FF0A     		.2byte	0xaff
 2718 094c 00000000 		.4byte	.LFB40
 2719 0950 70000000 		.4byte	.LFE40-.LFB40
 2720 0954 01       		.uleb128 0x1
 2721 0955 9C       		.byte	0x9c
 2722 0956 69090000 		.4byte	0x969
 2723 095a 10       		.uleb128 0x10
 2724 095b A1050000 		.4byte	.LASF82
 2725 095f 01       		.byte	0x1
 2726 0960 FF0A     		.2byte	0xaff
 2727 0962 69090000 		.4byte	0x969
 2728 0966 01       		.uleb128 0x1
 2729 0967 50       		.byte	0x50
 2730 0968 00       		.byte	0
 2731 0969 06       		.uleb128 0x6
 2732 096a 04       		.byte	0x4
 2733 096b 83000000 		.4byte	0x83
 2734 096f 1A       		.uleb128 0x1a
 2735 0970 E0000000 		.4byte	0xe0
 2736 0974 7F090000 		.4byte	0x97f
 2737 0978 1B       		.uleb128 0x1b
 2738 0979 D9000000 		.4byte	0xd9
 2739 097d 04       		.byte	0x4
 2740 097e 00       		.byte	0
 2741 097f 1C       		.uleb128 0x1c
 2742 0980 80050000 		.4byte	.LASF83
 2743 0984 01       		.byte	0x1
 2744 0985 22       		.byte	0x22
 2745 0986 6F090000 		.4byte	0x96f
 2746 098a 05       		.uleb128 0x5
 2747 098b 03       		.byte	0x3
 2748 098c 00000000 		.4byte	CySysTickCallbacks
 2749 0990 1D       		.uleb128 0x1d
 2750 0991 52040000 		.4byte	.LASF84
 2751 0995 01       		.byte	0x1
 2752 0996 1B       		.byte	0x1b
 2753 0997 83000000 		.4byte	0x83
 2754 099b 05       		.uleb128 0x5
 2755 099c 03       		.byte	0x3
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 101


 2756 099d 00000000 		.4byte	cydelayFreqHz
 2757 09a1 1D       		.uleb128 0x1d
 2758 09a2 2C010000 		.4byte	.LASF85
 2759 09a6 01       		.byte	0x1
 2760 09a7 1C       		.byte	0x1c
 2761 09a8 83000000 		.4byte	0x83
 2762 09ac 05       		.uleb128 0x5
 2763 09ad 03       		.byte	0x3
 2764 09ae 00000000 		.4byte	cydelayFreqKhz
 2765 09b2 1D       		.uleb128 0x1d
 2766 09b3 CC050000 		.4byte	.LASF86
 2767 09b7 01       		.byte	0x1
 2768 09b8 1D       		.byte	0x1d
 2769 09b9 6B000000 		.4byte	0x6b
 2770 09bd 05       		.uleb128 0x5
 2771 09be 03       		.byte	0x3
 2772 09bf 00000000 		.4byte	cydelayFreqMhz
 2773 09c3 1D       		.uleb128 0x1d
 2774 09c4 0D020000 		.4byte	.LASF87
 2775 09c8 01       		.byte	0x1
 2776 09c9 1E       		.byte	0x1e
 2777 09ca 83000000 		.4byte	0x83
 2778 09ce 05       		.uleb128 0x5
 2779 09cf 03       		.byte	0x3
 2780 09d0 00000000 		.4byte	cydelay32kMs
 2781 09d4 1D       		.uleb128 0x1d
 2782 09d5 6B000000 		.4byte	.LASF88
 2783 09d9 01       		.byte	0x1
 2784 09da 35       		.byte	0x35
 2785 09db 83000000 		.4byte	0x83
 2786 09df 05       		.uleb128 0x5
 2787 09e0 03       		.byte	0x3
 2788 09e1 00000000 		.4byte	CySysTickInitVar
 2789 09e5 1E       		.uleb128 0x1e
 2790 09e6 90020000 		.4byte	.LASF93
 2791 09ea 03       		.byte	0x3
 2792 09eb E3       		.byte	0xe3
 2793 09ec 6B000000 		.4byte	0x6b
 2794 09f0 1F       		.uleb128 0x1f
 2795 09f1 77040000 		.4byte	.LASF94
 2796 09f5 03       		.byte	0x3
 2797 09f6 E4       		.byte	0xe4
 2798 09f7 010A0000 		.4byte	0xa01
 2799 09fb 20       		.uleb128 0x20
 2800 09fc 6B000000 		.4byte	0x6b
 2801 0a00 00       		.byte	0
 2802 0a01 21       		.uleb128 0x21
 2803 0a02 BB040000 		.4byte	.LASF95
 2804 0a06 03       		.byte	0x3
 2805 0a07 DA       		.byte	0xda
 2806 0a08 20       		.uleb128 0x20
 2807 0a09 83000000 		.4byte	0x83
 2808 0a0d 00       		.byte	0
 2809 0a0e 00       		.byte	0
 2810              		.section	.debug_abbrev,"",%progbits
 2811              	.Ldebug_abbrev0:
 2812 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 102


 2813 0001 11       		.uleb128 0x11
 2814 0002 01       		.byte	0x1
 2815 0003 25       		.uleb128 0x25
 2816 0004 0E       		.uleb128 0xe
 2817 0005 13       		.uleb128 0x13
 2818 0006 0B       		.uleb128 0xb
 2819 0007 03       		.uleb128 0x3
 2820 0008 0E       		.uleb128 0xe
 2821 0009 1B       		.uleb128 0x1b
 2822 000a 0E       		.uleb128 0xe
 2823 000b 55       		.uleb128 0x55
 2824 000c 17       		.uleb128 0x17
 2825 000d 11       		.uleb128 0x11
 2826 000e 01       		.uleb128 0x1
 2827 000f 10       		.uleb128 0x10
 2828 0010 17       		.uleb128 0x17
 2829 0011 00       		.byte	0
 2830 0012 00       		.byte	0
 2831 0013 02       		.uleb128 0x2
 2832 0014 24       		.uleb128 0x24
 2833 0015 00       		.byte	0
 2834 0016 0B       		.uleb128 0xb
 2835 0017 0B       		.uleb128 0xb
 2836 0018 3E       		.uleb128 0x3e
 2837 0019 0B       		.uleb128 0xb
 2838 001a 03       		.uleb128 0x3
 2839 001b 0E       		.uleb128 0xe
 2840 001c 00       		.byte	0
 2841 001d 00       		.byte	0
 2842 001e 03       		.uleb128 0x3
 2843 001f 24       		.uleb128 0x24
 2844 0020 00       		.byte	0
 2845 0021 0B       		.uleb128 0xb
 2846 0022 0B       		.uleb128 0xb
 2847 0023 3E       		.uleb128 0x3e
 2848 0024 0B       		.uleb128 0xb
 2849 0025 03       		.uleb128 0x3
 2850 0026 08       		.uleb128 0x8
 2851 0027 00       		.byte	0
 2852 0028 00       		.byte	0
 2853 0029 04       		.uleb128 0x4
 2854 002a 16       		.uleb128 0x16
 2855 002b 00       		.byte	0
 2856 002c 03       		.uleb128 0x3
 2857 002d 0E       		.uleb128 0xe
 2858 002e 3A       		.uleb128 0x3a
 2859 002f 0B       		.uleb128 0xb
 2860 0030 3B       		.uleb128 0x3b
 2861 0031 05       		.uleb128 0x5
 2862 0032 49       		.uleb128 0x49
 2863 0033 13       		.uleb128 0x13
 2864 0034 00       		.byte	0
 2865 0035 00       		.byte	0
 2866 0036 05       		.uleb128 0x5
 2867 0037 35       		.uleb128 0x35
 2868 0038 00       		.byte	0
 2869 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 103


 2870 003a 13       		.uleb128 0x13
 2871 003b 00       		.byte	0
 2872 003c 00       		.byte	0
 2873 003d 06       		.uleb128 0x6
 2874 003e 0F       		.uleb128 0xf
 2875 003f 00       		.byte	0
 2876 0040 0B       		.uleb128 0xb
 2877 0041 0B       		.uleb128 0xb
 2878 0042 49       		.uleb128 0x49
 2879 0043 13       		.uleb128 0x13
 2880 0044 00       		.byte	0
 2881 0045 00       		.byte	0
 2882 0046 07       		.uleb128 0x7
 2883 0047 15       		.uleb128 0x15
 2884 0048 00       		.byte	0
 2885 0049 27       		.uleb128 0x27
 2886 004a 19       		.uleb128 0x19
 2887 004b 00       		.byte	0
 2888 004c 00       		.byte	0
 2889 004d 08       		.uleb128 0x8
 2890 004e 16       		.uleb128 0x16
 2891 004f 00       		.byte	0
 2892 0050 03       		.uleb128 0x3
 2893 0051 0E       		.uleb128 0xe
 2894 0052 3A       		.uleb128 0x3a
 2895 0053 0B       		.uleb128 0xb
 2896 0054 3B       		.uleb128 0x3b
 2897 0055 0B       		.uleb128 0xb
 2898 0056 49       		.uleb128 0x49
 2899 0057 13       		.uleb128 0x13
 2900 0058 00       		.byte	0
 2901 0059 00       		.byte	0
 2902 005a 09       		.uleb128 0x9
 2903 005b 2E       		.uleb128 0x2e
 2904 005c 00       		.byte	0
 2905 005d 3F       		.uleb128 0x3f
 2906 005e 19       		.uleb128 0x19
 2907 005f 03       		.uleb128 0x3
 2908 0060 0E       		.uleb128 0xe
 2909 0061 3A       		.uleb128 0x3a
 2910 0062 0B       		.uleb128 0xb
 2911 0063 3B       		.uleb128 0x3b
 2912 0064 0B       		.uleb128 0xb
 2913 0065 27       		.uleb128 0x27
 2914 0066 19       		.uleb128 0x19
 2915 0067 11       		.uleb128 0x11
 2916 0068 01       		.uleb128 0x1
 2917 0069 12       		.uleb128 0x12
 2918 006a 06       		.uleb128 0x6
 2919 006b 40       		.uleb128 0x40
 2920 006c 18       		.uleb128 0x18
 2921 006d 9742     		.uleb128 0x2117
 2922 006f 19       		.uleb128 0x19
 2923 0070 00       		.byte	0
 2924 0071 00       		.byte	0
 2925 0072 0A       		.uleb128 0xa
 2926 0073 2E       		.uleb128 0x2e
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 104


 2927 0074 01       		.byte	0x1
 2928 0075 3F       		.uleb128 0x3f
 2929 0076 19       		.uleb128 0x19
 2930 0077 03       		.uleb128 0x3
 2931 0078 0E       		.uleb128 0xe
 2932 0079 3A       		.uleb128 0x3a
 2933 007a 0B       		.uleb128 0xb
 2934 007b 3B       		.uleb128 0x3b
 2935 007c 05       		.uleb128 0x5
 2936 007d 27       		.uleb128 0x27
 2937 007e 19       		.uleb128 0x19
 2938 007f 11       		.uleb128 0x11
 2939 0080 01       		.uleb128 0x1
 2940 0081 12       		.uleb128 0x12
 2941 0082 06       		.uleb128 0x6
 2942 0083 40       		.uleb128 0x40
 2943 0084 18       		.uleb128 0x18
 2944 0085 9742     		.uleb128 0x2117
 2945 0087 19       		.uleb128 0x19
 2946 0088 01       		.uleb128 0x1
 2947 0089 13       		.uleb128 0x13
 2948 008a 00       		.byte	0
 2949 008b 00       		.byte	0
 2950 008c 0B       		.uleb128 0xb
 2951 008d 05       		.uleb128 0x5
 2952 008e 00       		.byte	0
 2953 008f 03       		.uleb128 0x3
 2954 0090 0E       		.uleb128 0xe
 2955 0091 3A       		.uleb128 0x3a
 2956 0092 0B       		.uleb128 0xb
 2957 0093 3B       		.uleb128 0x3b
 2958 0094 05       		.uleb128 0x5
 2959 0095 49       		.uleb128 0x49
 2960 0096 13       		.uleb128 0x13
 2961 0097 02       		.uleb128 0x2
 2962 0098 17       		.uleb128 0x17
 2963 0099 00       		.byte	0
 2964 009a 00       		.byte	0
 2965 009b 0C       		.uleb128 0xc
 2966 009c 34       		.uleb128 0x34
 2967 009d 00       		.byte	0
 2968 009e 03       		.uleb128 0x3
 2969 009f 0E       		.uleb128 0xe
 2970 00a0 3A       		.uleb128 0x3a
 2971 00a1 0B       		.uleb128 0xb
 2972 00a2 3B       		.uleb128 0x3b
 2973 00a3 05       		.uleb128 0x5
 2974 00a4 49       		.uleb128 0x49
 2975 00a5 13       		.uleb128 0x13
 2976 00a6 02       		.uleb128 0x2
 2977 00a7 17       		.uleb128 0x17
 2978 00a8 00       		.byte	0
 2979 00a9 00       		.byte	0
 2980 00aa 0D       		.uleb128 0xd
 2981 00ab 898201   		.uleb128 0x4109
 2982 00ae 00       		.byte	0
 2983 00af 11       		.uleb128 0x11
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 105


 2984 00b0 01       		.uleb128 0x1
 2985 00b1 31       		.uleb128 0x31
 2986 00b2 13       		.uleb128 0x13
 2987 00b3 00       		.byte	0
 2988 00b4 00       		.byte	0
 2989 00b5 0E       		.uleb128 0xe
 2990 00b6 2E       		.uleb128 0x2e
 2991 00b7 01       		.byte	0x1
 2992 00b8 3F       		.uleb128 0x3f
 2993 00b9 19       		.uleb128 0x19
 2994 00ba 03       		.uleb128 0x3
 2995 00bb 0E       		.uleb128 0xe
 2996 00bc 3A       		.uleb128 0x3a
 2997 00bd 0B       		.uleb128 0xb
 2998 00be 3B       		.uleb128 0x3b
 2999 00bf 05       		.uleb128 0x5
 3000 00c0 27       		.uleb128 0x27
 3001 00c1 19       		.uleb128 0x19
 3002 00c2 49       		.uleb128 0x49
 3003 00c3 13       		.uleb128 0x13
 3004 00c4 11       		.uleb128 0x11
 3005 00c5 01       		.uleb128 0x1
 3006 00c6 12       		.uleb128 0x12
 3007 00c7 06       		.uleb128 0x6
 3008 00c8 40       		.uleb128 0x40
 3009 00c9 18       		.uleb128 0x18
 3010 00ca 9742     		.uleb128 0x2117
 3011 00cc 19       		.uleb128 0x19
 3012 00cd 01       		.uleb128 0x1
 3013 00ce 13       		.uleb128 0x13
 3014 00cf 00       		.byte	0
 3015 00d0 00       		.byte	0
 3016 00d1 0F       		.uleb128 0xf
 3017 00d2 34       		.uleb128 0x34
 3018 00d3 00       		.byte	0
 3019 00d4 03       		.uleb128 0x3
 3020 00d5 0E       		.uleb128 0xe
 3021 00d6 3A       		.uleb128 0x3a
 3022 00d7 0B       		.uleb128 0xb
 3023 00d8 3B       		.uleb128 0x3b
 3024 00d9 05       		.uleb128 0x5
 3025 00da 49       		.uleb128 0x49
 3026 00db 13       		.uleb128 0x13
 3027 00dc 02       		.uleb128 0x2
 3028 00dd 18       		.uleb128 0x18
 3029 00de 00       		.byte	0
 3030 00df 00       		.byte	0
 3031 00e0 10       		.uleb128 0x10
 3032 00e1 05       		.uleb128 0x5
 3033 00e2 00       		.byte	0
 3034 00e3 03       		.uleb128 0x3
 3035 00e4 0E       		.uleb128 0xe
 3036 00e5 3A       		.uleb128 0x3a
 3037 00e6 0B       		.uleb128 0xb
 3038 00e7 3B       		.uleb128 0x3b
 3039 00e8 05       		.uleb128 0x5
 3040 00e9 49       		.uleb128 0x49
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 106


 3041 00ea 13       		.uleb128 0x13
 3042 00eb 02       		.uleb128 0x2
 3043 00ec 18       		.uleb128 0x18
 3044 00ed 00       		.byte	0
 3045 00ee 00       		.byte	0
 3046 00ef 11       		.uleb128 0x11
 3047 00f0 898201   		.uleb128 0x4109
 3048 00f3 01       		.byte	0x1
 3049 00f4 11       		.uleb128 0x11
 3050 00f5 01       		.uleb128 0x1
 3051 00f6 31       		.uleb128 0x31
 3052 00f7 13       		.uleb128 0x13
 3053 00f8 01       		.uleb128 0x1
 3054 00f9 13       		.uleb128 0x13
 3055 00fa 00       		.byte	0
 3056 00fb 00       		.byte	0
 3057 00fc 12       		.uleb128 0x12
 3058 00fd 8A8201   		.uleb128 0x410a
 3059 0100 00       		.byte	0
 3060 0101 02       		.uleb128 0x2
 3061 0102 18       		.uleb128 0x18
 3062 0103 9142     		.uleb128 0x2111
 3063 0105 18       		.uleb128 0x18
 3064 0106 00       		.byte	0
 3065 0107 00       		.byte	0
 3066 0108 13       		.uleb128 0x13
 3067 0109 898201   		.uleb128 0x4109
 3068 010c 01       		.byte	0x1
 3069 010d 11       		.uleb128 0x11
 3070 010e 01       		.uleb128 0x1
 3071 010f 31       		.uleb128 0x31
 3072 0110 13       		.uleb128 0x13
 3073 0111 00       		.byte	0
 3074 0112 00       		.byte	0
 3075 0113 14       		.uleb128 0x14
 3076 0114 34       		.uleb128 0x34
 3077 0115 00       		.byte	0
 3078 0116 03       		.uleb128 0x3
 3079 0117 0E       		.uleb128 0xe
 3080 0118 3A       		.uleb128 0x3a
 3081 0119 0B       		.uleb128 0xb
 3082 011a 3B       		.uleb128 0x3b
 3083 011b 05       		.uleb128 0x5
 3084 011c 49       		.uleb128 0x49
 3085 011d 13       		.uleb128 0x13
 3086 011e 1C       		.uleb128 0x1c
 3087 011f 06       		.uleb128 0x6
 3088 0120 00       		.byte	0
 3089 0121 00       		.byte	0
 3090 0122 15       		.uleb128 0x15
 3091 0123 2E       		.uleb128 0x2e
 3092 0124 00       		.byte	0
 3093 0125 3F       		.uleb128 0x3f
 3094 0126 19       		.uleb128 0x19
 3095 0127 03       		.uleb128 0x3
 3096 0128 0E       		.uleb128 0xe
 3097 0129 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 107


 3098 012a 0B       		.uleb128 0xb
 3099 012b 3B       		.uleb128 0x3b
 3100 012c 05       		.uleb128 0x5
 3101 012d 27       		.uleb128 0x27
 3102 012e 19       		.uleb128 0x19
 3103 012f 11       		.uleb128 0x11
 3104 0130 01       		.uleb128 0x1
 3105 0131 12       		.uleb128 0x12
 3106 0132 06       		.uleb128 0x6
 3107 0133 40       		.uleb128 0x40
 3108 0134 18       		.uleb128 0x18
 3109 0135 9742     		.uleb128 0x2117
 3110 0137 19       		.uleb128 0x19
 3111 0138 00       		.byte	0
 3112 0139 00       		.byte	0
 3113 013a 16       		.uleb128 0x16
 3114 013b 2E       		.uleb128 0x2e
 3115 013c 01       		.byte	0x1
 3116 013d 3F       		.uleb128 0x3f
 3117 013e 19       		.uleb128 0x19
 3118 013f 03       		.uleb128 0x3
 3119 0140 0E       		.uleb128 0xe
 3120 0141 3A       		.uleb128 0x3a
 3121 0142 0B       		.uleb128 0xb
 3122 0143 3B       		.uleb128 0x3b
 3123 0144 05       		.uleb128 0x5
 3124 0145 27       		.uleb128 0x27
 3125 0146 19       		.uleb128 0x19
 3126 0147 11       		.uleb128 0x11
 3127 0148 01       		.uleb128 0x1
 3128 0149 12       		.uleb128 0x12
 3129 014a 06       		.uleb128 0x6
 3130 014b 40       		.uleb128 0x40
 3131 014c 18       		.uleb128 0x18
 3132 014d 9642     		.uleb128 0x2116
 3133 014f 19       		.uleb128 0x19
 3134 0150 01       		.uleb128 0x1
 3135 0151 13       		.uleb128 0x13
 3136 0152 00       		.byte	0
 3137 0153 00       		.byte	0
 3138 0154 17       		.uleb128 0x17
 3139 0155 2E       		.uleb128 0x2e
 3140 0156 00       		.byte	0
 3141 0157 3F       		.uleb128 0x3f
 3142 0158 19       		.uleb128 0x19
 3143 0159 03       		.uleb128 0x3
 3144 015a 0E       		.uleb128 0xe
 3145 015b 3A       		.uleb128 0x3a
 3146 015c 0B       		.uleb128 0xb
 3147 015d 3B       		.uleb128 0x3b
 3148 015e 05       		.uleb128 0x5
 3149 015f 27       		.uleb128 0x27
 3150 0160 19       		.uleb128 0x19
 3151 0161 49       		.uleb128 0x49
 3152 0162 13       		.uleb128 0x13
 3153 0163 11       		.uleb128 0x11
 3154 0164 01       		.uleb128 0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 108


 3155 0165 12       		.uleb128 0x12
 3156 0166 06       		.uleb128 0x6
 3157 0167 40       		.uleb128 0x40
 3158 0168 18       		.uleb128 0x18
 3159 0169 9742     		.uleb128 0x2117
 3160 016b 19       		.uleb128 0x19
 3161 016c 00       		.byte	0
 3162 016d 00       		.byte	0
 3163 016e 18       		.uleb128 0x18
 3164 016f 2E       		.uleb128 0x2e
 3165 0170 01       		.byte	0x1
 3166 0171 03       		.uleb128 0x3
 3167 0172 0E       		.uleb128 0xe
 3168 0173 3A       		.uleb128 0x3a
 3169 0174 0B       		.uleb128 0xb
 3170 0175 3B       		.uleb128 0x3b
 3171 0176 05       		.uleb128 0x5
 3172 0177 27       		.uleb128 0x27
 3173 0178 19       		.uleb128 0x19
 3174 0179 11       		.uleb128 0x11
 3175 017a 01       		.uleb128 0x1
 3176 017b 12       		.uleb128 0x12
 3177 017c 06       		.uleb128 0x6
 3178 017d 40       		.uleb128 0x40
 3179 017e 18       		.uleb128 0x18
 3180 017f 9642     		.uleb128 0x2116
 3181 0181 19       		.uleb128 0x19
 3182 0182 01       		.uleb128 0x1
 3183 0183 13       		.uleb128 0x13
 3184 0184 00       		.byte	0
 3185 0185 00       		.byte	0
 3186 0186 19       		.uleb128 0x19
 3187 0187 34       		.uleb128 0x34
 3188 0188 00       		.byte	0
 3189 0189 03       		.uleb128 0x3
 3190 018a 08       		.uleb128 0x8
 3191 018b 3A       		.uleb128 0x3a
 3192 018c 0B       		.uleb128 0xb
 3193 018d 3B       		.uleb128 0x3b
 3194 018e 05       		.uleb128 0x5
 3195 018f 49       		.uleb128 0x49
 3196 0190 13       		.uleb128 0x13
 3197 0191 02       		.uleb128 0x2
 3198 0192 17       		.uleb128 0x17
 3199 0193 00       		.byte	0
 3200 0194 00       		.byte	0
 3201 0195 1A       		.uleb128 0x1a
 3202 0196 01       		.uleb128 0x1
 3203 0197 01       		.byte	0x1
 3204 0198 49       		.uleb128 0x49
 3205 0199 13       		.uleb128 0x13
 3206 019a 01       		.uleb128 0x1
 3207 019b 13       		.uleb128 0x13
 3208 019c 00       		.byte	0
 3209 019d 00       		.byte	0
 3210 019e 1B       		.uleb128 0x1b
 3211 019f 21       		.uleb128 0x21
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 109


 3212 01a0 00       		.byte	0
 3213 01a1 49       		.uleb128 0x49
 3214 01a2 13       		.uleb128 0x13
 3215 01a3 2F       		.uleb128 0x2f
 3216 01a4 0B       		.uleb128 0xb
 3217 01a5 00       		.byte	0
 3218 01a6 00       		.byte	0
 3219 01a7 1C       		.uleb128 0x1c
 3220 01a8 34       		.uleb128 0x34
 3221 01a9 00       		.byte	0
 3222 01aa 03       		.uleb128 0x3
 3223 01ab 0E       		.uleb128 0xe
 3224 01ac 3A       		.uleb128 0x3a
 3225 01ad 0B       		.uleb128 0xb
 3226 01ae 3B       		.uleb128 0x3b
 3227 01af 0B       		.uleb128 0xb
 3228 01b0 49       		.uleb128 0x49
 3229 01b1 13       		.uleb128 0x13
 3230 01b2 02       		.uleb128 0x2
 3231 01b3 18       		.uleb128 0x18
 3232 01b4 00       		.byte	0
 3233 01b5 00       		.byte	0
 3234 01b6 1D       		.uleb128 0x1d
 3235 01b7 34       		.uleb128 0x34
 3236 01b8 00       		.byte	0
 3237 01b9 03       		.uleb128 0x3
 3238 01ba 0E       		.uleb128 0xe
 3239 01bb 3A       		.uleb128 0x3a
 3240 01bc 0B       		.uleb128 0xb
 3241 01bd 3B       		.uleb128 0x3b
 3242 01be 0B       		.uleb128 0xb
 3243 01bf 49       		.uleb128 0x49
 3244 01c0 13       		.uleb128 0x13
 3245 01c1 3F       		.uleb128 0x3f
 3246 01c2 19       		.uleb128 0x19
 3247 01c3 02       		.uleb128 0x2
 3248 01c4 18       		.uleb128 0x18
 3249 01c5 00       		.byte	0
 3250 01c6 00       		.byte	0
 3251 01c7 1E       		.uleb128 0x1e
 3252 01c8 2E       		.uleb128 0x2e
 3253 01c9 00       		.byte	0
 3254 01ca 3F       		.uleb128 0x3f
 3255 01cb 19       		.uleb128 0x19
 3256 01cc 03       		.uleb128 0x3
 3257 01cd 0E       		.uleb128 0xe
 3258 01ce 3A       		.uleb128 0x3a
 3259 01cf 0B       		.uleb128 0xb
 3260 01d0 3B       		.uleb128 0x3b
 3261 01d1 0B       		.uleb128 0xb
 3262 01d2 27       		.uleb128 0x27
 3263 01d3 19       		.uleb128 0x19
 3264 01d4 49       		.uleb128 0x49
 3265 01d5 13       		.uleb128 0x13
 3266 01d6 3C       		.uleb128 0x3c
 3267 01d7 19       		.uleb128 0x19
 3268 01d8 00       		.byte	0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 110


 3269 01d9 00       		.byte	0
 3270 01da 1F       		.uleb128 0x1f
 3271 01db 2E       		.uleb128 0x2e
 3272 01dc 01       		.byte	0x1
 3273 01dd 3F       		.uleb128 0x3f
 3274 01de 19       		.uleb128 0x19
 3275 01df 03       		.uleb128 0x3
 3276 01e0 0E       		.uleb128 0xe
 3277 01e1 3A       		.uleb128 0x3a
 3278 01e2 0B       		.uleb128 0xb
 3279 01e3 3B       		.uleb128 0x3b
 3280 01e4 0B       		.uleb128 0xb
 3281 01e5 27       		.uleb128 0x27
 3282 01e6 19       		.uleb128 0x19
 3283 01e7 3C       		.uleb128 0x3c
 3284 01e8 19       		.uleb128 0x19
 3285 01e9 01       		.uleb128 0x1
 3286 01ea 13       		.uleb128 0x13
 3287 01eb 00       		.byte	0
 3288 01ec 00       		.byte	0
 3289 01ed 20       		.uleb128 0x20
 3290 01ee 05       		.uleb128 0x5
 3291 01ef 00       		.byte	0
 3292 01f0 49       		.uleb128 0x49
 3293 01f1 13       		.uleb128 0x13
 3294 01f2 00       		.byte	0
 3295 01f3 00       		.byte	0
 3296 01f4 21       		.uleb128 0x21
 3297 01f5 2E       		.uleb128 0x2e
 3298 01f6 01       		.byte	0x1
 3299 01f7 3F       		.uleb128 0x3f
 3300 01f8 19       		.uleb128 0x19
 3301 01f9 03       		.uleb128 0x3
 3302 01fa 0E       		.uleb128 0xe
 3303 01fb 3A       		.uleb128 0x3a
 3304 01fc 0B       		.uleb128 0xb
 3305 01fd 3B       		.uleb128 0x3b
 3306 01fe 0B       		.uleb128 0xb
 3307 01ff 27       		.uleb128 0x27
 3308 0200 19       		.uleb128 0x19
 3309 0201 3C       		.uleb128 0x3c
 3310 0202 19       		.uleb128 0x19
 3311 0203 00       		.byte	0
 3312 0204 00       		.byte	0
 3313 0205 00       		.byte	0
 3314              		.section	.debug_loc,"",%progbits
 3315              	.Ldebug_loc0:
 3316              	.LLST0:
 3317 0000 00000000 		.4byte	.LVL0
 3318 0004 07000000 		.4byte	.LVL1-1
 3319 0008 0100     		.2byte	0x1
 3320 000a 50       		.byte	0x50
 3321 000b 07000000 		.4byte	.LVL1-1
 3322 000f 1A000000 		.4byte	.LVL5
 3323 0013 0100     		.2byte	0x1
 3324 0015 54       		.byte	0x54
 3325 0016 1A000000 		.4byte	.LVL5
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 111


 3326 001a 20000000 		.4byte	.LFE2
 3327 001e 0400     		.2byte	0x4
 3328 0020 F3       		.byte	0xf3
 3329 0021 01       		.uleb128 0x1
 3330 0022 50       		.byte	0x50
 3331 0023 9F       		.byte	0x9f
 3332 0024 00000000 		.4byte	0
 3333 0028 00000000 		.4byte	0
 3334              	.LLST1:
 3335 002c 08000000 		.4byte	.LVL1
 3336 0030 19000000 		.4byte	.LVL4-1
 3337 0034 0100     		.2byte	0x1
 3338 0036 50       		.byte	0x50
 3339 0037 00000000 		.4byte	0
 3340 003b 00000000 		.4byte	0
 3341              	.LLST2:
 3342 003f 10000000 		.4byte	.LVL2
 3343 0043 14000000 		.4byte	.LVL3
 3344 0047 0100     		.2byte	0x1
 3345 0049 52       		.byte	0x52
 3346 004a 14000000 		.4byte	.LVL3
 3347 004e 19000000 		.4byte	.LVL4-1
 3348 0052 0100     		.2byte	0x1
 3349 0054 53       		.byte	0x53
 3350 0055 00000000 		.4byte	0
 3351 0059 00000000 		.4byte	0
 3352              	.LLST3:
 3353 005d 06000000 		.4byte	.LVL6
 3354 0061 11000000 		.4byte	.LVL8-1
 3355 0065 0100     		.2byte	0x1
 3356 0067 50       		.byte	0x50
 3357 0068 00000000 		.4byte	0
 3358 006c 00000000 		.4byte	0
 3359              	.LLST4:
 3360 0070 0E000000 		.4byte	.LVL7
 3361 0074 14000000 		.4byte	.LVL9
 3362 0078 0100     		.2byte	0x1
 3363 007a 54       		.byte	0x54
 3364 007b 14000000 		.4byte	.LVL9
 3365 007f 1C000000 		.4byte	.LFE3
 3366 0083 0100     		.2byte	0x1
 3367 0085 50       		.byte	0x50
 3368 0086 00000000 		.4byte	0
 3369 008a 00000000 		.4byte	0
 3370              	.LLST5:
 3371 008e 00000000 		.4byte	.LVL10
 3372 0092 07000000 		.4byte	.LVL11-1
 3373 0096 0100     		.2byte	0x1
 3374 0098 50       		.byte	0x50
 3375 0099 07000000 		.4byte	.LVL11-1
 3376 009d 0A000000 		.4byte	.LVL12
 3377 00a1 0100     		.2byte	0x1
 3378 00a3 54       		.byte	0x54
 3379 00a4 0A000000 		.4byte	.LVL12
 3380 00a8 24000000 		.4byte	.LFE4
 3381 00ac 0400     		.2byte	0x4
 3382 00ae F3       		.byte	0xf3
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 112


 3383 00af 01       		.uleb128 0x1
 3384 00b0 50       		.byte	0x50
 3385 00b1 9F       		.byte	0x9f
 3386 00b2 00000000 		.4byte	0
 3387 00b6 00000000 		.4byte	0
 3388              	.LLST6:
 3389 00ba 08000000 		.4byte	.LVL11
 3390 00be 1D000000 		.4byte	.LVL13-1
 3391 00c2 0100     		.2byte	0x1
 3392 00c4 50       		.byte	0x50
 3393 00c5 00000000 		.4byte	0
 3394 00c9 00000000 		.4byte	0
 3395              	.LLST7:
 3396 00cd 00000000 		.4byte	.LVL14
 3397 00d1 07000000 		.4byte	.LVL15-1
 3398 00d5 0100     		.2byte	0x1
 3399 00d7 50       		.byte	0x50
 3400 00d8 07000000 		.4byte	.LVL15-1
 3401 00dc 14000000 		.4byte	.LVL16
 3402 00e0 0100     		.2byte	0x1
 3403 00e2 54       		.byte	0x54
 3404 00e3 14000000 		.4byte	.LVL16
 3405 00e7 24000000 		.4byte	.LFE6
 3406 00eb 0400     		.2byte	0x4
 3407 00ed F3       		.byte	0xf3
 3408 00ee 01       		.uleb128 0x1
 3409 00ef 50       		.byte	0x50
 3410 00f0 9F       		.byte	0x9f
 3411 00f1 00000000 		.4byte	0
 3412 00f5 00000000 		.4byte	0
 3413              	.LLST8:
 3414 00f9 08000000 		.4byte	.LVL15
 3415 00fd 1D000000 		.4byte	.LVL17-1
 3416 0101 0100     		.2byte	0x1
 3417 0103 50       		.byte	0x50
 3418 0104 00000000 		.4byte	0
 3419 0108 00000000 		.4byte	0
 3420              	.LLST9:
 3421 010c 00000000 		.4byte	.LVL18
 3422 0110 04000000 		.4byte	.LVL19
 3423 0114 0100     		.2byte	0x1
 3424 0116 50       		.byte	0x50
 3425 0117 04000000 		.4byte	.LVL19
 3426 011b 14000000 		.4byte	.LFE7
 3427 011f 0100     		.2byte	0x1
 3428 0121 52       		.byte	0x52
 3429 0122 00000000 		.4byte	0
 3430 0126 00000000 		.4byte	0
 3431              	.LLST10:
 3432 012a 00000000 		.4byte	.LVL24
 3433 012e 04000000 		.4byte	.LVL25
 3434 0132 0100     		.2byte	0x1
 3435 0134 50       		.byte	0x50
 3436 0135 04000000 		.4byte	.LVL25
 3437 0139 14000000 		.4byte	.LFE16
 3438 013d 0400     		.2byte	0x4
 3439 013f F3       		.byte	0xf3
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 113


 3440 0140 01       		.uleb128 0x1
 3441 0141 50       		.byte	0x50
 3442 0142 9F       		.byte	0x9f
 3443 0143 00000000 		.4byte	0
 3444 0147 00000000 		.4byte	0
 3445              	.LLST11:
 3446 014b 00000000 		.4byte	.LVL26
 3447 014f 08000000 		.4byte	.LVL27
 3448 0153 0100     		.2byte	0x1
 3449 0155 50       		.byte	0x50
 3450 0156 08000000 		.4byte	.LVL27
 3451 015a 18000000 		.4byte	.LFE17
 3452 015e 0400     		.2byte	0x4
 3453 0160 F3       		.byte	0xf3
 3454 0161 01       		.uleb128 0x1
 3455 0162 50       		.byte	0x50
 3456 0163 9F       		.byte	0x9f
 3457 0164 00000000 		.4byte	0
 3458 0168 00000000 		.4byte	0
 3459              	.LLST12:
 3460 016c 00000000 		.4byte	.LVL28
 3461 0170 04000000 		.4byte	.LVL29
 3462 0174 0100     		.2byte	0x1
 3463 0176 50       		.byte	0x50
 3464 0177 04000000 		.4byte	.LVL29
 3465 017b 14000000 		.4byte	.LFE18
 3466 017f 0400     		.2byte	0x4
 3467 0181 F3       		.byte	0xf3
 3468 0182 01       		.uleb128 0x1
 3469 0183 50       		.byte	0x50
 3470 0184 9F       		.byte	0x9f
 3471 0185 00000000 		.4byte	0
 3472 0189 00000000 		.4byte	0
 3473              	.LLST13:
 3474 018d 00000000 		.4byte	.LVL30
 3475 0191 04000000 		.4byte	.LVL31
 3476 0195 0100     		.2byte	0x1
 3477 0197 50       		.byte	0x50
 3478 0198 04000000 		.4byte	.LVL31
 3479 019c 14000000 		.4byte	.LFE19
 3480 01a0 0400     		.2byte	0x4
 3481 01a2 F3       		.byte	0xf3
 3482 01a3 01       		.uleb128 0x1
 3483 01a4 50       		.byte	0x50
 3484 01a5 9F       		.byte	0x9f
 3485 01a6 00000000 		.4byte	0
 3486 01aa 00000000 		.4byte	0
 3487              	.LLST14:
 3488 01ae 00000000 		.4byte	.LVL32
 3489 01b2 04000000 		.4byte	.LVL33
 3490 01b6 0100     		.2byte	0x1
 3491 01b8 50       		.byte	0x50
 3492 01b9 04000000 		.4byte	.LVL33
 3493 01bd 14000000 		.4byte	.LFE20
 3494 01c1 0400     		.2byte	0x4
 3495 01c3 F3       		.byte	0xf3
 3496 01c4 01       		.uleb128 0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 114


 3497 01c5 50       		.byte	0x50
 3498 01c6 9F       		.byte	0x9f
 3499 01c7 00000000 		.4byte	0
 3500 01cb 00000000 		.4byte	0
 3501              	.LLST15:
 3502 01cf 00000000 		.4byte	.LVL35
 3503 01d3 13000000 		.4byte	.LVL36-1
 3504 01d7 0100     		.2byte	0x1
 3505 01d9 50       		.byte	0x50
 3506 01da 13000000 		.4byte	.LVL36-1
 3507 01de 7C000000 		.4byte	.LVL43
 3508 01e2 0100     		.2byte	0x1
 3509 01e4 54       		.byte	0x54
 3510 01e5 7C000000 		.4byte	.LVL43
 3511 01e9 8A000000 		.4byte	.LVL45
 3512 01ed 0400     		.2byte	0x4
 3513 01ef F3       		.byte	0xf3
 3514 01f0 01       		.uleb128 0x1
 3515 01f1 50       		.byte	0x50
 3516 01f2 9F       		.byte	0x9f
 3517 01f3 8A000000 		.4byte	.LVL45
 3518 01f7 8C000000 		.4byte	.LVL46
 3519 01fb 0100     		.2byte	0x1
 3520 01fd 50       		.byte	0x50
 3521 01fe 8C000000 		.4byte	.LVL46
 3522 0202 90000000 		.4byte	.LVL47
 3523 0206 0100     		.2byte	0x1
 3524 0208 54       		.byte	0x54
 3525 0209 90000000 		.4byte	.LVL47
 3526 020d AC000000 		.4byte	.LFE5
 3527 0211 0400     		.2byte	0x4
 3528 0213 F3       		.byte	0xf3
 3529 0214 01       		.uleb128 0x1
 3530 0215 50       		.byte	0x50
 3531 0216 9F       		.byte	0x9f
 3532 0217 00000000 		.4byte	0
 3533 021b 00000000 		.4byte	0
 3534              	.LLST16:
 3535 021f 16000000 		.4byte	.LVL37
 3536 0223 8A000000 		.4byte	.LVL45
 3537 0227 0100     		.2byte	0x1
 3538 0229 55       		.byte	0x55
 3539 022a 00000000 		.4byte	0
 3540 022e 00000000 		.4byte	0
 3541              	.LLST17:
 3542 0232 28000000 		.4byte	.LVL38
 3543 0236 30000000 		.4byte	.LVL39
 3544 023a 0100     		.2byte	0x1
 3545 023c 53       		.byte	0x53
 3546 023d 30000000 		.4byte	.LVL39
 3547 0241 34000000 		.4byte	.LVL40
 3548 0245 0700     		.2byte	0x7
 3549 0247 0C       		.byte	0xc
 3550 0248 0C0F0340 		.4byte	0x40030f0c
 3551 024c 06       		.byte	0x6
 3552 024d 9F       		.byte	0x9f
 3553 024e 00000000 		.4byte	0
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 115


 3554 0252 00000000 		.4byte	0
 3555              	.LLST18:
 3556 0256 00000000 		.4byte	.LVL48
 3557 025a 0C000000 		.4byte	.LVL50
 3558 025e 0100     		.2byte	0x1
 3559 0260 50       		.byte	0x50
 3560 0261 0C000000 		.4byte	.LVL50
 3561 0265 20000000 		.4byte	.LFE10
 3562 0269 0400     		.2byte	0x4
 3563 026b F3       		.byte	0xf3
 3564 026c 01       		.uleb128 0x1
 3565 026d 50       		.byte	0x50
 3566 026e 9F       		.byte	0x9f
 3567 026f 00000000 		.4byte	0
 3568 0273 00000000 		.4byte	0
 3569              	.LLST19:
 3570 0277 00000000 		.4byte	.LVL48
 3571 027b 0F000000 		.4byte	.LVL51-1
 3572 027f 0100     		.2byte	0x1
 3573 0281 51       		.byte	0x51
 3574 0282 0F000000 		.4byte	.LVL51-1
 3575 0286 1E000000 		.4byte	.LVL53
 3576 028a 0100     		.2byte	0x1
 3577 028c 55       		.byte	0x55
 3578 028d 1E000000 		.4byte	.LVL53
 3579 0291 20000000 		.4byte	.LFE10
 3580 0295 0400     		.2byte	0x4
 3581 0297 F3       		.byte	0xf3
 3582 0298 01       		.uleb128 0x1
 3583 0299 51       		.byte	0x51
 3584 029a 9F       		.byte	0x9f
 3585 029b 00000000 		.4byte	0
 3586 029f 00000000 		.4byte	0
 3587              	.LLST20:
 3588 02a3 00000000 		.4byte	.LVL54
 3589 02a7 0A000000 		.4byte	.LVL56
 3590 02ab 0100     		.2byte	0x1
 3591 02ad 50       		.byte	0x50
 3592 02ae 0A000000 		.4byte	.LVL56
 3593 02b2 1C000000 		.4byte	.LFE11
 3594 02b6 0400     		.2byte	0x4
 3595 02b8 F3       		.byte	0xf3
 3596 02b9 01       		.uleb128 0x1
 3597 02ba 50       		.byte	0x50
 3598 02bb 9F       		.byte	0x9f
 3599 02bc 00000000 		.4byte	0
 3600 02c0 00000000 		.4byte	0
 3601              	.LLST21:
 3602 02c4 00000000 		.4byte	.LVL58
 3603 02c8 0C000000 		.4byte	.LVL60
 3604 02cc 0100     		.2byte	0x1
 3605 02ce 50       		.byte	0x50
 3606 02cf 0C000000 		.4byte	.LVL60
 3607 02d3 24000000 		.4byte	.LFE12
 3608 02d7 0400     		.2byte	0x4
 3609 02d9 F3       		.byte	0xf3
 3610 02da 01       		.uleb128 0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 116


 3611 02db 50       		.byte	0x50
 3612 02dc 9F       		.byte	0x9f
 3613 02dd 00000000 		.4byte	0
 3614 02e1 00000000 		.4byte	0
 3615              	.LLST22:
 3616 02e5 00000000 		.4byte	.LVL58
 3617 02e9 0F000000 		.4byte	.LVL61-1
 3618 02ed 0100     		.2byte	0x1
 3619 02ef 51       		.byte	0x51
 3620 02f0 0F000000 		.4byte	.LVL61-1
 3621 02f4 1C000000 		.4byte	.LVL63
 3622 02f8 0100     		.2byte	0x1
 3623 02fa 55       		.byte	0x55
 3624 02fb 1C000000 		.4byte	.LVL63
 3625 02ff 24000000 		.4byte	.LFE12
 3626 0303 0400     		.2byte	0x4
 3627 0305 F3       		.byte	0xf3
 3628 0306 01       		.uleb128 0x1
 3629 0307 51       		.byte	0x51
 3630 0308 9F       		.byte	0x9f
 3631 0309 00000000 		.4byte	0
 3632 030d 00000000 		.4byte	0
 3633              	.LLST23:
 3634 0311 00000000 		.4byte	.LVL64
 3635 0315 0A000000 		.4byte	.LVL66
 3636 0319 0100     		.2byte	0x1
 3637 031b 50       		.byte	0x50
 3638 031c 0A000000 		.4byte	.LVL66
 3639 0320 20000000 		.4byte	.LFE13
 3640 0324 0400     		.2byte	0x4
 3641 0326 F3       		.byte	0xf3
 3642 0327 01       		.uleb128 0x1
 3643 0328 50       		.byte	0x50
 3644 0329 9F       		.byte	0x9f
 3645 032a 00000000 		.4byte	0
 3646 032e 00000000 		.4byte	0
 3647              	.LLST24:
 3648 0332 00000000 		.4byte	.LVL68
 3649 0336 0C000000 		.4byte	.LVL69
 3650 033a 0100     		.2byte	0x1
 3651 033c 50       		.byte	0x50
 3652 033d 0C000000 		.4byte	.LVL69
 3653 0341 4C000000 		.4byte	.LFE14
 3654 0345 0400     		.2byte	0x4
 3655 0347 F3       		.byte	0xf3
 3656 0348 01       		.uleb128 0x1
 3657 0349 50       		.byte	0x50
 3658 034a 9F       		.byte	0x9f
 3659 034b 00000000 		.4byte	0
 3660 034f 00000000 		.4byte	0
 3661              	.LLST25:
 3662 0353 00000000 		.4byte	.LVL68
 3663 0357 0F000000 		.4byte	.LVL70-1
 3664 035b 0100     		.2byte	0x1
 3665 035d 51       		.byte	0x51
 3666 035e 0F000000 		.4byte	.LVL70-1
 3667 0362 4C000000 		.4byte	.LFE14
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 117


 3668 0366 0400     		.2byte	0x4
 3669 0368 F3       		.byte	0xf3
 3670 0369 01       		.uleb128 0x1
 3671 036a 51       		.byte	0x51
 3672 036b 9F       		.byte	0x9f
 3673 036c 00000000 		.4byte	0
 3674 0370 00000000 		.4byte	0
 3675              	.LLST26:
 3676 0374 26000000 		.4byte	.LVL73
 3677 0378 43000000 		.4byte	.LVL78-1
 3678 037c 0100     		.2byte	0x1
 3679 037e 50       		.byte	0x50
 3680 037f 00000000 		.4byte	0
 3681 0383 00000000 		.4byte	0
 3682              	.LLST27:
 3683 0387 22000000 		.4byte	.LVL72
 3684 038b 3C000000 		.4byte	.LVL76
 3685 038f 0100     		.2byte	0x1
 3686 0391 55       		.byte	0x55
 3687 0392 00000000 		.4byte	0
 3688 0396 00000000 		.4byte	0
 3689              	.LLST28:
 3690 039a 32000000 		.4byte	.LVL74
 3691 039e 3E000000 		.4byte	.LVL77
 3692 03a2 0100     		.2byte	0x1
 3693 03a4 53       		.byte	0x53
 3694 03a5 3E000000 		.4byte	.LVL77
 3695 03a9 44000000 		.4byte	.LVL79
 3696 03ad 0100     		.2byte	0x1
 3697 03af 55       		.byte	0x55
 3698 03b0 00000000 		.4byte	0
 3699 03b4 00000000 		.4byte	0
 3700              	.LLST29:
 3701 03b8 00000000 		.4byte	.LVL80
 3702 03bc 0A000000 		.4byte	.LVL81
 3703 03c0 0100     		.2byte	0x1
 3704 03c2 50       		.byte	0x50
 3705 03c3 0A000000 		.4byte	.LVL81
 3706 03c7 2C000000 		.4byte	.LFE15
 3707 03cb 0400     		.2byte	0x4
 3708 03cd F3       		.byte	0xf3
 3709 03ce 01       		.uleb128 0x1
 3710 03cf 50       		.byte	0x50
 3711 03d0 9F       		.byte	0x9f
 3712 03d1 00000000 		.4byte	0
 3713 03d5 00000000 		.4byte	0
 3714              	.LLST30:
 3715 03d9 24000000 		.4byte	.LVL83
 3716 03dd 26000000 		.4byte	.LVL84
 3717 03e1 0100     		.2byte	0x1
 3718 03e3 50       		.byte	0x50
 3719 03e4 00000000 		.4byte	0
 3720 03e8 00000000 		.4byte	0
 3721              	.LLST31:
 3722 03ec 00000000 		.4byte	.LVL85
 3723 03f0 06000000 		.4byte	.LVL86
 3724 03f4 0100     		.2byte	0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 118


 3725 03f6 50       		.byte	0x50
 3726 03f7 06000000 		.4byte	.LVL86
 3727 03fb 26000000 		.4byte	.LVL90
 3728 03ff 0100     		.2byte	0x1
 3729 0401 54       		.byte	0x54
 3730 0402 00000000 		.4byte	0
 3731 0406 00000000 		.4byte	0
 3732              	.LLST32:
 3733 040a 00000000 		.4byte	.LVL91
 3734 040e 08000000 		.4byte	.LVL92
 3735 0412 0100     		.2byte	0x1
 3736 0414 50       		.byte	0x50
 3737 0415 08000000 		.4byte	.LVL92
 3738 0419 14000000 		.4byte	.LFE24
 3739 041d 0400     		.2byte	0x4
 3740 041f F3       		.byte	0xf3
 3741 0420 01       		.uleb128 0x1
 3742 0421 50       		.byte	0x50
 3743 0422 9F       		.byte	0x9f
 3744 0423 00000000 		.4byte	0
 3745 0427 00000000 		.4byte	0
 3746              	.LLST33:
 3747 042b 00000000 		.4byte	.LVL94
 3748 042f 1A000000 		.4byte	.LVL95
 3749 0433 0100     		.2byte	0x1
 3750 0435 50       		.byte	0x50
 3751 0436 1A000000 		.4byte	.LVL95
 3752 043a 4C000000 		.4byte	.LFE25
 3753 043e 0400     		.2byte	0x4
 3754 0440 F3       		.byte	0xf3
 3755 0441 01       		.uleb128 0x1
 3756 0442 50       		.byte	0x50
 3757 0443 9F       		.byte	0x9f
 3758 0444 00000000 		.4byte	0
 3759 0448 00000000 		.4byte	0
 3760              	.LLST34:
 3761 044c 00000000 		.4byte	.LVL99
 3762 0450 02000000 		.4byte	.LVL100
 3763 0454 0100     		.2byte	0x1
 3764 0456 50       		.byte	0x50
 3765 0457 02000000 		.4byte	.LVL100
 3766 045b 10000000 		.4byte	.LFE32
 3767 045f 0400     		.2byte	0x4
 3768 0461 F3       		.byte	0xf3
 3769 0462 01       		.uleb128 0x1
 3770 0463 50       		.byte	0x50
 3771 0464 9F       		.byte	0x9f
 3772 0465 00000000 		.4byte	0
 3773 0469 00000000 		.4byte	0
 3774              	.LLST35:
 3775 046d 0C000000 		.4byte	.LVL102
 3776 0471 1C000000 		.4byte	.LVL105
 3777 0475 0100     		.2byte	0x1
 3778 0477 54       		.byte	0x54
 3779 0478 1E000000 		.4byte	.LVL106
 3780 047c 22000000 		.4byte	.LVL107
 3781 0480 0100     		.2byte	0x1
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 119


 3782 0482 54       		.byte	0x54
 3783 0483 00000000 		.4byte	0
 3784 0487 00000000 		.4byte	0
 3785              	.LLST36:
 3786 048b 02000000 		.4byte	.LVL108
 3787 048f 06000000 		.4byte	.LVL109
 3788 0493 0200     		.2byte	0x2
 3789 0495 30       		.byte	0x30
 3790 0496 9F       		.byte	0x9f
 3791 0497 06000000 		.4byte	.LVL109
 3792 049b 1B000000 		.4byte	.LVL111-1
 3793 049f 0100     		.2byte	0x1
 3794 04a1 53       		.byte	0x53
 3795 04a2 00000000 		.4byte	0
 3796 04a6 00000000 		.4byte	0
 3797              	.LLST37:
 3798 04aa 00000000 		.4byte	.LVL118
 3799 04ae 06000000 		.4byte	.LVL119
 3800 04b2 0100     		.2byte	0x1
 3801 04b4 50       		.byte	0x50
 3802 04b5 06000000 		.4byte	.LVL119
 3803 04b9 10000000 		.4byte	.LFE37
 3804 04bd 0400     		.2byte	0x4
 3805 04bf F3       		.byte	0xf3
 3806 04c0 01       		.uleb128 0x1
 3807 04c1 50       		.byte	0x50
 3808 04c2 9F       		.byte	0x9f
 3809 04c3 00000000 		.4byte	0
 3810 04c7 00000000 		.4byte	0
 3811              	.LLST38:
 3812 04cb 00000000 		.4byte	.LVL120
 3813 04cf 02000000 		.4byte	.LVL121
 3814 04d3 0100     		.2byte	0x1
 3815 04d5 50       		.byte	0x50
 3816 04d6 02000000 		.4byte	.LVL121
 3817 04da 0C000000 		.4byte	.LFE38
 3818 04de 0400     		.2byte	0x4
 3819 04e0 F3       		.byte	0xf3
 3820 04e1 01       		.uleb128 0x1
 3821 04e2 50       		.byte	0x50
 3822 04e3 9F       		.byte	0x9f
 3823 04e4 00000000 		.4byte	0
 3824 04e8 00000000 		.4byte	0
 3825              		.section	.debug_aranges,"",%progbits
 3826 0000 5C010000 		.4byte	0x15c
 3827 0004 0200     		.2byte	0x2
 3828 0006 00000000 		.4byte	.Ldebug_info0
 3829 000a 04       		.byte	0x4
 3830 000b 00       		.byte	0
 3831 000c 0000     		.2byte	0
 3832 000e 0000     		.2byte	0
 3833 0010 00000000 		.4byte	.LFB0
 3834 0014 14000000 		.4byte	.LFE0-.LFB0
 3835 0018 00000000 		.4byte	.LFB1
 3836 001c 10000000 		.4byte	.LFE1-.LFB1
 3837 0020 00000000 		.4byte	.LFB2
 3838 0024 20000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 120


 3839 0028 00000000 		.4byte	.LFB3
 3840 002c 1C000000 		.4byte	.LFE3-.LFB3
 3841 0030 00000000 		.4byte	.LFB4
 3842 0034 24000000 		.4byte	.LFE4-.LFB4
 3843 0038 00000000 		.4byte	.LFB6
 3844 003c 24000000 		.4byte	.LFE6-.LFB6
 3845 0040 00000000 		.4byte	.LFB7
 3846 0044 14000000 		.4byte	.LFE7-.LFB7
 3847 0048 00000000 		.4byte	.LFB8
 3848 004c 10000000 		.4byte	.LFE8-.LFB8
 3849 0050 00000000 		.4byte	.LFB9
 3850 0054 0C000000 		.4byte	.LFE9-.LFB9
 3851 0058 00000000 		.4byte	.LFB16
 3852 005c 14000000 		.4byte	.LFE16-.LFB16
 3853 0060 00000000 		.4byte	.LFB17
 3854 0064 18000000 		.4byte	.LFE17-.LFB17
 3855 0068 00000000 		.4byte	.LFB18
 3856 006c 14000000 		.4byte	.LFE18-.LFB18
 3857 0070 00000000 		.4byte	.LFB19
 3858 0074 14000000 		.4byte	.LFE19-.LFB19
 3859 0078 00000000 		.4byte	.LFB20
 3860 007c 14000000 		.4byte	.LFE20-.LFB20
 3861 0080 00000000 		.4byte	.LFB21
 3862 0084 04000000 		.4byte	.LFE21-.LFB21
 3863 0088 00000000 		.4byte	.LFB5
 3864 008c AC000000 		.4byte	.LFE5-.LFB5
 3865 0090 00000000 		.4byte	.LFB10
 3866 0094 20000000 		.4byte	.LFE10-.LFB10
 3867 0098 00000000 		.4byte	.LFB11
 3868 009c 1C000000 		.4byte	.LFE11-.LFB11
 3869 00a0 00000000 		.4byte	.LFB12
 3870 00a4 24000000 		.4byte	.LFE12-.LFB12
 3871 00a8 00000000 		.4byte	.LFB13
 3872 00ac 20000000 		.4byte	.LFE13-.LFB13
 3873 00b0 00000000 		.4byte	.LFB14
 3874 00b4 4C000000 		.4byte	.LFE14-.LFB14
 3875 00b8 00000000 		.4byte	.LFB15
 3876 00bc 2C000000 		.4byte	.LFE15-.LFB15
 3877 00c0 00000000 		.4byte	.LFB22
 3878 00c4 18000000 		.4byte	.LFE22-.LFB22
 3879 00c8 00000000 		.4byte	.LFB23
 3880 00cc 30000000 		.4byte	.LFE23-.LFB23
 3881 00d0 00000000 		.4byte	.LFB24
 3882 00d4 14000000 		.4byte	.LFE24-.LFB24
 3883 00d8 00000000 		.4byte	.LFB25
 3884 00dc 4C000000 		.4byte	.LFE25-.LFB25
 3885 00e0 00000000 		.4byte	.LFB29
 3886 00e4 10000000 		.4byte	.LFE29-.LFB29
 3887 00e8 00000000 		.4byte	.LFB30
 3888 00ec 10000000 		.4byte	.LFE30-.LFB30
 3889 00f0 00000000 		.4byte	.LFB28
 3890 00f4 18000000 		.4byte	.LFE28-.LFB28
 3891 00f8 00000000 		.4byte	.LFB31
 3892 00fc 10000000 		.4byte	.LFE31-.LFB31
 3893 0100 00000000 		.4byte	.LFB32
 3894 0104 10000000 		.4byte	.LFE32-.LFB32
 3895 0108 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 121


 3896 010c 10000000 		.4byte	.LFE33-.LFB33
 3897 0110 00000000 		.4byte	.LFB34
 3898 0114 10000000 		.4byte	.LFE34-.LFB34
 3899 0118 00000000 		.4byte	.LFB35
 3900 011c 10000000 		.4byte	.LFE35-.LFB35
 3901 0120 00000000 		.4byte	.LFB39
 3902 0124 28000000 		.4byte	.LFE39-.LFB39
 3903 0128 00000000 		.4byte	.LFB36
 3904 012c 0C000000 		.4byte	.LFE36-.LFB36
 3905 0130 00000000 		.4byte	.LFB27
 3906 0134 44000000 		.4byte	.LFE27-.LFB27
 3907 0138 00000000 		.4byte	.LFB26
 3908 013c 20000000 		.4byte	.LFE26-.LFB26
 3909 0140 00000000 		.4byte	.LFB37
 3910 0144 10000000 		.4byte	.LFE37-.LFB37
 3911 0148 00000000 		.4byte	.LFB38
 3912 014c 0C000000 		.4byte	.LFE38-.LFB38
 3913 0150 00000000 		.4byte	.LFB40
 3914 0154 70000000 		.4byte	.LFE40-.LFB40
 3915 0158 00000000 		.4byte	0
 3916 015c 00000000 		.4byte	0
 3917              		.section	.debug_ranges,"",%progbits
 3918              	.Ldebug_ranges0:
 3919 0000 00000000 		.4byte	.LFB0
 3920 0004 14000000 		.4byte	.LFE0
 3921 0008 00000000 		.4byte	.LFB1
 3922 000c 10000000 		.4byte	.LFE1
 3923 0010 00000000 		.4byte	.LFB2
 3924 0014 20000000 		.4byte	.LFE2
 3925 0018 00000000 		.4byte	.LFB3
 3926 001c 1C000000 		.4byte	.LFE3
 3927 0020 00000000 		.4byte	.LFB4
 3928 0024 24000000 		.4byte	.LFE4
 3929 0028 00000000 		.4byte	.LFB6
 3930 002c 24000000 		.4byte	.LFE6
 3931 0030 00000000 		.4byte	.LFB7
 3932 0034 14000000 		.4byte	.LFE7
 3933 0038 00000000 		.4byte	.LFB8
 3934 003c 10000000 		.4byte	.LFE8
 3935 0040 00000000 		.4byte	.LFB9
 3936 0044 0C000000 		.4byte	.LFE9
 3937 0048 00000000 		.4byte	.LFB16
 3938 004c 14000000 		.4byte	.LFE16
 3939 0050 00000000 		.4byte	.LFB17
 3940 0054 18000000 		.4byte	.LFE17
 3941 0058 00000000 		.4byte	.LFB18
 3942 005c 14000000 		.4byte	.LFE18
 3943 0060 00000000 		.4byte	.LFB19
 3944 0064 14000000 		.4byte	.LFE19
 3945 0068 00000000 		.4byte	.LFB20
 3946 006c 14000000 		.4byte	.LFE20
 3947 0070 00000000 		.4byte	.LFB21
 3948 0074 04000000 		.4byte	.LFE21
 3949 0078 00000000 		.4byte	.LFB5
 3950 007c AC000000 		.4byte	.LFE5
 3951 0080 00000000 		.4byte	.LFB10
 3952 0084 20000000 		.4byte	.LFE10
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 122


 3953 0088 00000000 		.4byte	.LFB11
 3954 008c 1C000000 		.4byte	.LFE11
 3955 0090 00000000 		.4byte	.LFB12
 3956 0094 24000000 		.4byte	.LFE12
 3957 0098 00000000 		.4byte	.LFB13
 3958 009c 20000000 		.4byte	.LFE13
 3959 00a0 00000000 		.4byte	.LFB14
 3960 00a4 4C000000 		.4byte	.LFE14
 3961 00a8 00000000 		.4byte	.LFB15
 3962 00ac 2C000000 		.4byte	.LFE15
 3963 00b0 00000000 		.4byte	.LFB22
 3964 00b4 18000000 		.4byte	.LFE22
 3965 00b8 00000000 		.4byte	.LFB23
 3966 00bc 30000000 		.4byte	.LFE23
 3967 00c0 00000000 		.4byte	.LFB24
 3968 00c4 14000000 		.4byte	.LFE24
 3969 00c8 00000000 		.4byte	.LFB25
 3970 00cc 4C000000 		.4byte	.LFE25
 3971 00d0 00000000 		.4byte	.LFB29
 3972 00d4 10000000 		.4byte	.LFE29
 3973 00d8 00000000 		.4byte	.LFB30
 3974 00dc 10000000 		.4byte	.LFE30
 3975 00e0 00000000 		.4byte	.LFB28
 3976 00e4 18000000 		.4byte	.LFE28
 3977 00e8 00000000 		.4byte	.LFB31
 3978 00ec 10000000 		.4byte	.LFE31
 3979 00f0 00000000 		.4byte	.LFB32
 3980 00f4 10000000 		.4byte	.LFE32
 3981 00f8 00000000 		.4byte	.LFB33
 3982 00fc 10000000 		.4byte	.LFE33
 3983 0100 00000000 		.4byte	.LFB34
 3984 0104 10000000 		.4byte	.LFE34
 3985 0108 00000000 		.4byte	.LFB35
 3986 010c 10000000 		.4byte	.LFE35
 3987 0110 00000000 		.4byte	.LFB39
 3988 0114 28000000 		.4byte	.LFE39
 3989 0118 00000000 		.4byte	.LFB36
 3990 011c 0C000000 		.4byte	.LFE36
 3991 0120 00000000 		.4byte	.LFB27
 3992 0124 44000000 		.4byte	.LFE27
 3993 0128 00000000 		.4byte	.LFB26
 3994 012c 20000000 		.4byte	.LFE26
 3995 0130 00000000 		.4byte	.LFB37
 3996 0134 10000000 		.4byte	.LFE37
 3997 0138 00000000 		.4byte	.LFB38
 3998 013c 0C000000 		.4byte	.LFE38
 3999 0140 00000000 		.4byte	.LFB40
 4000 0144 70000000 		.4byte	.LFE40
 4001 0148 00000000 		.4byte	0
 4002 014c 00000000 		.4byte	0
 4003              		.section	.debug_line,"",%progbits
 4004              	.Ldebug_line0:
 4005 0000 00040000 		.section	.debug_str,"MS",%progbits,1
 4005      02004F00 
 4005      00000201 
 4005      FB0E0D00 
 4005      01010101 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 123


 4006              	.LASF51:
 4007 0000 72616D56 		.ascii	"ramVectorTable\000"
 4007      6563746F 
 4007      72546162 
 4007      6C6500
 4008              	.LASF10:
 4009 000f 75696E74 		.ascii	"uint16\000"
 4009      313600
 4010              	.LASF35:
 4011 0016 696E7453 		.ascii	"intState\000"
 4011      74617465 
 4011      00
 4012              	.LASF25:
 4013 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4013      73436C6B 
 4013      57726974 
 4013      65486663 
 4013      6C6B4469 
 4014              	.LASF50:
 4015 0038 6F6C6449 		.ascii	"oldIsr\000"
 4015      737200
 4016              	.LASF79:
 4017 003f 72657456 		.ascii	"retVal\000"
 4017      616C00
 4018              	.LASF34:
 4019 0046 43794469 		.ascii	"CyDisableInts\000"
 4019      7361626C 
 4019      65496E74 
 4019      7300
 4020              	.LASF7:
 4021 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 4021      206C6F6E 
 4021      6720756E 
 4021      7369676E 
 4021      65642069 
 4022              	.LASF88:
 4023 006b 43795379 		.ascii	"CySysTickInitVar\000"
 4023      73546963 
 4023      6B496E69 
 4023      74566172 
 4023      00
 4024              	.LASF36:
 4025 007c 4379456E 		.ascii	"CyEnableInts\000"
 4025      61626C65 
 4025      496E7473 
 4025      00
 4026              	.LASF60:
 4027 0089 4379536F 		.ascii	"CySoftwareReset\000"
 4027      66747761 
 4027      72655265 
 4027      73657400 
 4028              	.LASF39:
 4029 0099 6E756D62 		.ascii	"number\000"
 4029      657200
 4030              	.LASF40:
 4031 00a0 4379496E 		.ascii	"CyIntGetState\000"
 4031      74476574 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 124


 4031      53746174 
 4031      6500
 4032              	.LASF6:
 4033 00ae 6C6F6E67 		.ascii	"long long int\000"
 4033      206C6F6E 
 4033      6720696E 
 4033      7400
 4034              	.LASF0:
 4035 00bc 7369676E 		.ascii	"signed char\000"
 4035      65642063 
 4035      68617200 
 4036              	.LASF46:
 4037 00c8 66726571 		.ascii	"freq\000"
 4037      00
 4038              	.LASF65:
 4039 00cd 43794465 		.ascii	"CyDelayFreq\000"
 4039      6C617946 
 4039      72657100 
 4040              	.LASF22:
 4041 00d9 696E7465 		.ascii	"interruptState\000"
 4041      72727570 
 4041      74537461 
 4041      746500
 4042              	.LASF71:
 4043 00e8 43795379 		.ascii	"CySysTickGetReload\000"
 4043      73546963 
 4043      6B476574 
 4043      52656C6F 
 4043      616400
 4044              	.LASF4:
 4045 00fb 6C6F6E67 		.ascii	"long int\000"
 4045      20696E74 
 4045      00
 4046              	.LASF41:
 4047 0104 4379496E 		.ascii	"CyIntDisable\000"
 4047      74446973 
 4047      61626C65 
 4047      00
 4048              	.LASF80:
 4049 0111 43795379 		.ascii	"CySysTickGetCallback\000"
 4049      73546963 
 4049      6B476574 
 4049      43616C6C 
 4049      6261636B 
 4050              	.LASF9:
 4051 0126 75696E74 		.ascii	"uint8\000"
 4051      3800
 4052              	.LASF85:
 4053 012c 63796465 		.ascii	"cydelayFreqKhz\000"
 4053      6C617946 
 4053      7265714B 
 4053      687A00
 4054              	.LASF63:
 4055 013b 43794465 		.ascii	"CyDelayUs\000"
 4055      6C617955 
 4055      7300
 4056              	.LASF13:
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 125


 4057 0145 646F7562 		.ascii	"double\000"
 4057      6C6500
 4058              	.LASF57:
 4059 014c 73686966 		.ascii	"shift\000"
 4059      7400
 4060              	.LASF11:
 4061 0152 75696E74 		.ascii	"uint32\000"
 4061      333200
 4062              	.LASF91:
 4063 0159 433A5C55 		.ascii	"C:\\Users\\Spitfire54444444\\Dropbox\\Projets\\Wave"
 4063      73657273 
 4063      5C537069 
 4063      74666972 
 4063      65353434 
 4064 0187 6C616220 		.ascii	"lab Technologies Inc\\RnD\\Projets\\Auto Shut-OFF\\"
 4064      54656368 
 4064      6E6F6C6F 
 4064      67696573 
 4064      20496E63 
 4065 01b6 4175746F 		.ascii	"Auto-Shut-OFF\\Auto Shut-OFF_SOIC16.cydsn\000"
 4065      2D536875 
 4065      742D4F46 
 4065      465C4175 
 4065      746F2053 
 4066              	.LASF37:
 4067 01df 6D61736B 		.ascii	"mask\000"
 4067      00
 4068              	.LASF30:
 4069 01e4 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4069      73436C6B 
 4069      47657453 
 4069      7973636C 
 4069      6B536F75 
 4070              	.LASF59:
 4071 01fc 4379496E 		.ascii	"CyIntGetPriority\000"
 4071      74476574 
 4071      5072696F 
 4071      72697479 
 4071      00
 4072              	.LASF87:
 4073 020d 63796465 		.ascii	"cydelay32kMs\000"
 4073      6C617933 
 4073      326B4D73 
 4073      00
 4074              	.LASF75:
 4075 021a 43795379 		.ascii	"CySysTickInit\000"
 4075      73546963 
 4075      6B496E69 
 4075      7400
 4076              	.LASF58:
 4077 0228 76616C75 		.ascii	"value\000"
 4077      6500
 4078              	.LASF81:
 4079 022e 43794765 		.ascii	"CyGetUniqueId\000"
 4079      74556E69 
 4079      71756549 
 4079      6400
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 126


 4080              	.LASF73:
 4081 023c 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4081      73546963 
 4081      6B476574 
 4081      436F756E 
 4081      74466C61 
 4082              	.LASF8:
 4083 0252 756E7369 		.ascii	"unsigned int\000"
 4083      676E6564 
 4083      20696E74 
 4083      00
 4084              	.LASF74:
 4085 025f 43795379 		.ascii	"CySysTickClear\000"
 4085      73546963 
 4085      6B436C65 
 4085      617200
 4086              	.LASF5:
 4087 026e 6C6F6E67 		.ascii	"long unsigned int\000"
 4087      20756E73 
 4087      69676E65 
 4087      6420696E 
 4087      7400
 4088              	.LASF21:
 4089 0280 43795379 		.ascii	"CySysClkImoStop\000"
 4089      73436C6B 
 4089      496D6F53 
 4089      746F7000 
 4090              	.LASF93:
 4091 0290 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4091      74657243 
 4091      72697469 
 4091      63616C53 
 4091      65637469 
 4092              	.LASF42:
 4093 02a7 4379496E 		.ascii	"CyIntSetPending\000"
 4093      74536574 
 4093      50656E64 
 4093      696E6700 
 4094              	.LASF31:
 4095 02b7 43795379 		.ascii	"CySysGetResetReason\000"
 4095      73476574 
 4095      52657365 
 4095      74526561 
 4095      736F6E00 
 4096              	.LASF3:
 4097 02cb 73686F72 		.ascii	"short unsigned int\000"
 4097      7420756E 
 4097      7369676E 
 4097      65642069 
 4097      6E7400
 4098              	.LASF53:
 4099 02de 4379496E 		.ascii	"CyIntSetVector\000"
 4099      74536574 
 4099      56656374 
 4099      6F7200
 4100              	.LASF90:
 4101 02ed 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 127


 4101      6E657261 
 4101      7465645F 
 4101      536F7572 
 4101      63655C50 
 4102              	.LASF56:
 4103 030e 7072696F 		.ascii	"priority\000"
 4103      72697479 
 4103      00
 4104              	.LASF45:
 4105 0317 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4105      73436C6B 
 4105      57726974 
 4105      65496D6F 
 4105      46726571 
 4106              	.LASF48:
 4107 032c 4379496E 		.ascii	"CyIntSetSysVector\000"
 4107      74536574 
 4107      53797356 
 4107      6563746F 
 4107      7200
 4108              	.LASF16:
 4109 033e 72656733 		.ascii	"reg32\000"
 4109      3200
 4110              	.LASF76:
 4111 0344 43795379 		.ascii	"CySysTickStart\000"
 4111      73546963 
 4111      6B537461 
 4111      727400
 4112              	.LASF33:
 4113 0353 72657475 		.ascii	"returnStatus\000"
 4113      726E5374 
 4113      61747573 
 4113      00
 4114              	.LASF18:
 4115 0360 73697A65 		.ascii	"sizetype\000"
 4115      74797065 
 4115      00
 4116              	.LASF43:
 4117 0369 4379496E 		.ascii	"CyIntClearPending\000"
 4117      74436C65 
 4117      61725065 
 4117      6E64696E 
 4117      6700
 4118              	.LASF49:
 4119 037b 61646472 		.ascii	"address\000"
 4119      65737300 
 4120              	.LASF24:
 4121 0383 73797363 		.ascii	"sysclkSource\000"
 4121      6C6B536F 
 4121      75726365 
 4121      00
 4122              	.LASF78:
 4123 0390 66756E63 		.ascii	"function\000"
 4123      74696F6E 
 4123      00
 4124              	.LASF67:
 4125 0399 43795379 		.ascii	"CySysTickEnableInterrupt\000"
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 128


 4125      73546963 
 4125      6B456E61 
 4125      626C6549 
 4125      6E746572 
 4126              	.LASF72:
 4127 03b2 43795379 		.ascii	"CySysTickGetValue\000"
 4127      73546963 
 4127      6B476574 
 4127      56616C75 
 4127      6500
 4128              	.LASF89:
 4129 03c4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4129      4320342E 
 4129      392E3320 
 4129      32303135 
 4129      30333033 
 4130 03f7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4130      20726576 
 4130      6973696F 
 4130      6E203232 
 4130      31323230 
 4131 042a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4131      66756E63 
 4131      74696F6E 
 4131      2D736563 
 4131      74696F6E 
 4132              	.LASF84:
 4133 0452 63796465 		.ascii	"cydelayFreqHz\000"
 4133      6C617946 
 4133      72657148 
 4133      7A00
 4134              	.LASF55:
 4135 0460 4379496E 		.ascii	"CyIntSetPriority\000"
 4135      74536574 
 4135      5072696F 
 4135      72697479 
 4135      00
 4136              	.LASF12:
 4137 0471 666C6F61 		.ascii	"float\000"
 4137      7400
 4138              	.LASF94:
 4139 0477 43794578 		.ascii	"CyExitCriticalSection\000"
 4139      69744372 
 4139      69746963 
 4139      616C5365 
 4139      6374696F 
 4140              	.LASF19:
 4141 048d 63795379 		.ascii	"cySysTickCallback\000"
 4141      73546963 
 4141      6B43616C 
 4141      6C626163 
 4141      6B00
 4142              	.LASF54:
 4143 049f 4379496E 		.ascii	"CyIntGetVector\000"
 4143      74476574 
 4143      56656374 
 4143      6F7200
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 129


 4144              	.LASF62:
 4145 04ae 6D696C6C 		.ascii	"milliseconds\000"
 4145      69736563 
 4145      6F6E6473 
 4145      00
 4146              	.LASF95:
 4147 04bb 43794465 		.ascii	"CyDelayCycles\000"
 4147      6C617943 
 4147      79636C65 
 4147      7300
 4148              	.LASF15:
 4149 04c9 72656738 		.ascii	"reg8\000"
 4149      00
 4150              	.LASF44:
 4151 04ce 43794861 		.ascii	"CyHalt\000"
 4151      6C7400
 4152              	.LASF1:
 4153 04d5 756E7369 		.ascii	"unsigned char\000"
 4153      676E6564 
 4153      20636861 
 4153      7200
 4154              	.LASF2:
 4155 04e3 73686F72 		.ascii	"short int\000"
 4155      7420696E 
 4155      7400
 4156              	.LASF38:
 4157 04ed 4379496E 		.ascii	"CyIntEnable\000"
 4157      74456E61 
 4157      626C6500 
 4158              	.LASF52:
 4159 04f9 4379496E 		.ascii	"CyIntGetSysVector\000"
 4159      74476574 
 4159      53797356 
 4159      6563746F 
 4159      7200
 4160              	.LASF27:
 4161 050b 636C6B53 		.ascii	"clkSelect\000"
 4161      656C6563 
 4161      7400
 4162              	.LASF32:
 4163 0515 72656173 		.ascii	"reason\000"
 4163      6F6E00
 4164              	.LASF14:
 4165 051c 63686172 		.ascii	"char\000"
 4165      00
 4166              	.LASF17:
 4167 0521 63796973 		.ascii	"cyisraddress\000"
 4167      72616464 
 4167      72657373 
 4167      00
 4168              	.LASF68:
 4169 052e 43795379 		.ascii	"CySysTickEnable\000"
 4169      73546963 
 4169      6B456E61 
 4169      626C6500 
 4170              	.LASF29:
 4171 053e 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 130


 4171      73436C6B 
 4171      57726974 
 4171      65486663 
 4171      6C6B4469 
 4172              	.LASF26:
 4173 0554 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4173      73436C6B 
 4173      57726974 
 4173      65537973 
 4173      636C6B44 
 4174              	.LASF77:
 4175 056b 43795379 		.ascii	"CySysTickSetCallback\000"
 4175      73546963 
 4175      6B536574 
 4175      43616C6C 
 4175      6261636B 
 4176              	.LASF83:
 4177 0580 43795379 		.ascii	"CySysTickCallbacks\000"
 4177      73546963 
 4177      6B43616C 
 4177      6C626163 
 4177      6B7300
 4178              	.LASF47:
 4179 0593 696D6F54 		.ascii	"imoTrim1Value\000"
 4179      72696D31 
 4179      56616C75 
 4179      6500
 4180              	.LASF82:
 4181 05a1 756E6971 		.ascii	"uniqueId\000"
 4181      75654964 
 4181      00
 4182              	.LASF61:
 4183 05aa 43794465 		.ascii	"CyDelay\000"
 4183      6C617900 
 4184              	.LASF69:
 4185 05b2 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4185      73546963 
 4185      6B446973 
 4185      61626C65 
 4185      496E7465 
 4186              	.LASF86:
 4187 05cc 63796465 		.ascii	"cydelayFreqMhz\000"
 4187      6C617946 
 4187      7265714D 
 4187      687A00
 4188              	.LASF66:
 4189 05db 43795379 		.ascii	"CySysTickStop\000"
 4189      73546963 
 4189      6B53746F 
 4189      7000
 4190              	.LASF28:
 4191 05e9 64697669 		.ascii	"divider\000"
 4191      64657200 
 4192              	.LASF20:
 4193 05f1 43795379 		.ascii	"CySysClkImoStart\000"
 4193      73436C6B 
 4193      496D6F53 
ARM GAS  C:\Users\SPITFI~1\AppData\Local\Temp\ccTvxQXd.s 			page 131


 4193      74617274 
 4193      00
 4194              	.LASF64:
 4195 0602 6D696372 		.ascii	"microseconds\000"
 4195      6F736563 
 4195      6F6E6473 
 4195      00
 4196              	.LASF23:
 4197 060f 746D7052 		.ascii	"tmpReg\000"
 4197      656700
 4198              	.LASF70:
 4199 0616 43795379 		.ascii	"CySysTickSetReload\000"
 4199      73546963 
 4199      6B536574 
 4199      52656C6F 
 4199      616400
 4200              	.LASF92:
 4201 0629 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4201      73546963 
 4201      6B536572 
 4201      76696365 
 4201      43616C6C 
 4202              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
